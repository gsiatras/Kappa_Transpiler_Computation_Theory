Nonterminals useless in grammar

    function_declarations


Rules useless in grammar

  116 function_declarations: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN types


Grammar

    0 $accept: program $end

    1 program: main_body

    2 main_body: decl_body main
    3          | main

    4 main: KW_DEF KW_MAIN DEL_LPAR DEL_RPAR DEL_COLON body KW_ENDDEF DEL_SMCOLON

    5 types: DEL_LBLOCK DEL_RBLOCK basic_types
    6      | basic_types

    7 basic_types: KW_INT
    8            | KW_BOOLEAN
    9            | KW_SCALAR
   10            | KW_STR

   11 identifiers: TK_IDENTIFIER
   12            | identifiers DEL_COMMA TK_IDENTIFIER

   13 decl_body: decl_body declarations
   14          | declarations

   15 declarations: variable_declarations
   16             | complex_type_declarations
   17             | constant_declarations
   18             | functions

   19 variable_declarations: identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK DEL_COLON basic_types DEL_SMCOLON

   21 comp_variables: identifiers DEL_COLON TK_IDENTIFIER DEL_SMCOLON

   22 constant_declarations: KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON

   23 functions: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR DEL_COLON body KW_ENDDEF DEL_SMCOLON
   24          | KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN types DEL_COLON body KW_ENDDEF DEL_SMCOLON

   25 parameter_declarations: ε
   26                       | TK_IDENTIFIER DEL_COLON types
   27                       | TK_IDENTIFIER DEL_LBLOCK DEL_RBLOCK DEL_COLON types
   28                       | TK_IDENTIFIER DEL_LBLOCK DEL_RBLOCK DEL_COLON types DEL_COMMA parameter_declarations
   29                       | TK_IDENTIFIER DEL_COLON types DEL_COMMA parameter_declarations

   30 complex_type_declarations: KW_COMP TK_IDENTIFIER DEL_COLON comp_body KW_ENDCOMP DEL_SMCOLON

   31 comp_body: comp_variable_declarations
   32          | comp_variable_declarations comp_body
   33          | comp_functions
   34          | comp_functions comp_body

   35 comp_variable_declarations: comp_identifiers DEL_COLON types DEL_SMCOLON

   36 comp_identifiers: AP_HASHASSIGN TK_IDENTIFIER
   37                 | AP_HASHASSIGN TK_IDENTIFIER DEL_COMMA comp_identifiers

   38 comp_functions: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR DEL_COLON body KW_ENDDEF DEL_SMCOLON
   39               | KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN types DEL_COLON body KW_ENDDEF DEL_SMCOLON

   40 expressions: identifier_expressions
   41            | TK_STRING
   42            | KW_TRUE
   43            | KW_FALSE
   44            | function_statement
   45            | arithmetic_expressions
   46            | relational_expressions
   47            | KW_NOT expressions
   48            | expressions KW_AND expressions
   49            | expressions KW_OR expressions
   50            | DEL_LPAR expressions DEL_RPAR
   51            | expressions DEL_DOT expressions

   52 identifier_expressions: TK_IDENTIFIER
   53                       | AP_HASHASSIGN TK_IDENTIFIER
   54                       | TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK

   56 arithmetic_expressions: TK_INTEGER
   57                       | TK_FLOAT
   58                       | expressions OP_POWER expressions
   59                       | expressions OP_MULT expressions
   60                       | expressions OP_DIV expressions
   61                       | expressions OP_MOD expressions
   62                       | expressions OP_PLUS expressions
   63                       | expressions OP_MINUS expressions
   64                       | OP_PLUS expressions
   65                       | OP_MINUS expressions

   66 relational_expressions: expressions RP_LESS expressions
   67                       | expressions RP_LESSEQUALS expressions
   68                       | expressions RP_MORE expressions
   69                       | expressions RP_MOREEQUALS expressions
   70                       | expressions RP_EQUALS expressions
   71                       | expressions RP_NOTEQUALS expressions

   72 assign_expressions: identifier_expressions AP_ASSIGN expressions
   73                   | identifier_expressions AP_PLUSASSIGN expressions
   74                   | identifier_expressions AP_MINASSIGN expressions
   75                   | identifier_expressions AP_MULASSIGN expressions
   76                   | identifier_expressions AP_DIVASSIGN expressions
   77                   | identifier_expressions AP_MODASSIGN expressions

   78 statements: if_statement DEL_SMCOLON
   79           | for_statement DEL_SMCOLON
   80           | array_statement DEL_SMCOLON
   81           | while_statement DEL_SMCOLON
   82           | KW_BREAK DEL_SMCOLON
   83           | KW_CONTINUE DEL_SMCOLON
   84           | assign_expressions DEL_SMCOLON
   85           | return_statement DEL_SMCOLON
   86           | function_statement DEL_SMCOLON

   87 command_statements: statements
   88                   | command_statements statements
   89                   | command_statements variable_declarations
   90                   | variable_declarations
   91                   | command_statements constant_declarations
   92                   | constant_declarations

   93 if_statement: KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   94             | KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE DEL_COLON command_statements KW_ENDIF

   95 for_statement: KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   96              | KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR

   97 array_statement: integral_array
   98                | other_array

   99 integral_array: TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types

  100 other_array: TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON types KW_IN TK_IDENTIFIER KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types

  101 while_statement: KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE

  102 return_statement: KW_RETURN
  103                 | KW_RETURN expressions

  104 function_statement: TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

  105 function_arg: ε
  106             | expressions
  107             | function_arg DEL_COMMA expressions

  108 body: statements
  109     | variable_declarations
  110     | constant_declarations
  111     | comp_variables
  112     | body statements
  113     | body variable_declarations
  114     | body constant_declarations
  115     | body comp_variables


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TK_IDENTIFIER <crepr> (258) 11 12 20 21 23 24 26 27 28 29 30 36 37 38 39 52 53 54 55 99 100 104
    TK_INTEGER <crepr> (259) 20 54 56 99 100
    TK_FLOAT <crepr> (260) 57
    TK_STRING <crepr> (261) 41
    KW_INT (262) 7
    KW_SCALAR (263) 9
    KW_STR (264) 10
    KW_BOOLEAN (265) 8
    KW_TRUE (266) 42
    KW_FALSE (267) 43
    KW_CONST (268) 22
    KW_IF (269) 93 94
    KW_ELSE (270) 94
    KW_ENDIF (271) 93 94
    KW_FOR (272) 95 96 99 100
    KW_IN (273) 95 96 100
    KW_ENDFOR (274) 95 96
    KW_WHILE (275) 101
    KW_ENDWHILE (276) 101
    KW_BREAK (277) 82
    KW_CONTINUE (278) 83
    KW_NOT (279) 47
    KW_AND (280) 48
    KW_OR (281) 49
    KW_DEF (282) 4 23 24 38 39
    KW_ENDDEF (283) 4 23 24 38 39
    KW_MAIN (284) 4
    KW_RETURN (285) 102 103
    KW_COMP (286) 30
    KW_ENDCOMP (287) 30
    KW_OF (288) 100
    OP_PLUS (289) 62 64
    OP_MINUS (290) 63 65
    OP_MULT (291) 59
    OP_DIV (292) 60
    OP_MOD (293) 61
    OP_POWER (294) 58
    RP_EQUALS (295) 70
    RP_NOTEQUALS (296) 71
    RP_LESS (297) 66
    RP_LESSEQUALS (298) 67
    RP_MORE (299) 68
    RP_MOREEQUALS (300) 69
    AP_ASSIGN (301) 22 72
    AP_HASHASSIGN (302) 36 37 53
    AP_PLUSASSIGN (303) 73
    AP_MINASSIGN (304) 74
    AP_MULASSIGN (305) 75
    AP_DIVASSIGN (306) 76
    AP_MODASSIGN (307) 77
    AP_COLONASSIGN (308) 99 100
    AP_ARROWASSIGN (309) 24 39
    DEL_SMCOLON (310) 4 19 20 21 22 23 24 30 35 38 39 78 79 80 81 82 83 84 85 86
    DEL_LPAR (311) 4 23 24 38 39 50 93 94 101 104
    DEL_RPAR (312) 4 23 24 38 39 50 93 94 101 104
    DEL_COMMA (313) 12 28 29 37 107
    DEL_LBLOCK (314) 5 20 27 28 54 55 95 96 99 100
    DEL_RBLOCK (315) 5 20 27 28 54 55 95 96 99 100
    DEL_COLON (316) 4 19 20 21 22 23 24 26 27 28 29 30 35 38 39 93 94 95 96 99 100 101
    DEL_DOT (317) 51


Nonterminals, with rules where they appear

    $accept (63)
        on left: 0
    program <crepr> (64)
        on left: 1
        on right: 0
    main_body <crepr> (65)
        on left: 2 3
        on right: 1
    main <crepr> (66)
        on left: 4
        on right: 2 3
    types <crepr> (67)
        on left: 5 6
        on right: 22 24 26 27 28 29 35 39 99 100
    basic_types <crepr> (68)
        on left: 7 8 9 10
        on right: 5 6 19 20
    identifiers <crepr> (69)
        on left: 11 12
        on right: 12 19 21 22 95 96
    decl_body <crepr> (70)
        on left: 13 14
        on right: 2 13
    declarations <crepr> (71)
        on left: 15 16 17 18
        on right: 13 14
    variable_declarations <crepr> (72)
        on left: 19 20
        on right: 15 89 90 109 113
    comp_variables <crepr> (73)
        on left: 21
        on right: 111 115
    constant_declarations <crepr> (74)
        on left: 22
        on right: 17 91 92 110 114
    functions <crepr> (75)
        on left: 23 24
        on right: 18
    parameter_declarations <crepr> (76)
        on left: 25 26 27 28 29
        on right: 23 24 28 29 38 39
    complex_type_declarations <crepr> (77)
        on left: 30
        on right: 16
    comp_body <crepr> (78)
        on left: 31 32 33 34
        on right: 30 32 34
    comp_variable_declarations <crepr> (79)
        on left: 35
        on right: 31 32
    comp_identifiers <crepr> (80)
        on left: 36 37
        on right: 35 37
    comp_functions <crepr> (81)
        on left: 38 39
        on right: 33 34
    expressions <crepr> (82)
        on left: 40 41 42 43 44 45 46 47 48 49 50 51
        on right: 22 47 48 49 50 51 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 93 94 95 96 99 100 101 103 106 107
    identifier_expressions <crepr> (83)
        on left: 52 53 54 55
        on right: 40 72 73 74 75 76 77
    arithmetic_expressions <crepr> (84)
        on left: 56 57 58 59 60 61 62 63 64 65
        on right: 45
    relational_expressions <crepr> (85)
        on left: 66 67 68 69 70 71
        on right: 46
    assign_expressions <crepr> (86)
        on left: 72 73 74 75 76 77
        on right: 84
    statements <crepr> (87)
        on left: 78 79 80 81 82 83 84 85 86
        on right: 87 88 108 112
    command_statements <crepr> (88)
        on left: 87 88 89 90 91 92
        on right: 88 89 91 93 94 95 96 101
    if_statement <crepr> (89)
        on left: 93 94
        on right: 78
    for_statement <crepr> (90)
        on left: 95 96
        on right: 79
    array_statement <crepr> (91)
        on left: 97 98
        on right: 80
    integral_array <crepr> (92)
        on left: 99
        on right: 97
    other_array <crepr> (93)
        on left: 100
        on right: 98
    while_statement <crepr> (94)
        on left: 101
        on right: 81
    return_statement <crepr> (95)
        on left: 102 103
        on right: 85
    function_statement <crepr> (96)
        on left: 104
        on right: 44 86
    function_arg <crepr> (97)
        on left: 105 106 107
        on right: 104 107
    body <crepr> (98)
        on left: 108 109 110 111 112 113 114 115
        on right: 4 23 24 38 39 112 113 114 115


State 0

    0 $accept: • program $end
    1 program: • main_body
    2 main_body: • decl_body main
    3          | • main
    4 main: • KW_DEF KW_MAIN DEL_LPAR DEL_RPAR DEL_COLON body KW_ENDDEF DEL_SMCOLON
   11 identifiers: • TK_IDENTIFIER
   12            | • identifiers DEL_COMMA TK_IDENTIFIER
   13 decl_body: • decl_body declarations
   14          | • declarations
   15 declarations: • variable_declarations
   16             | • complex_type_declarations
   17             | • constant_declarations
   18             | • functions
   19 variable_declarations: • identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK DEL_COLON basic_types DEL_SMCOLON
   22 constant_declarations: • KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON
   23 functions: • KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR DEL_COLON body KW_ENDDEF DEL_SMCOLON
   24          | • KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN types DEL_COLON body KW_ENDDEF DEL_SMCOLON
   30 complex_type_declarations: • KW_COMP TK_IDENTIFIER DEL_COLON comp_body KW_ENDCOMP DEL_SMCOLON

    TK_IDENTIFIER  shift, and go to state 1
    KW_CONST       shift, and go to state 2
    KW_DEF         shift, and go to state 3
    KW_COMP        shift, and go to state 4

    program                    go to state 5
    main_body                  go to state 6
    main                       go to state 7
    identifiers                go to state 8
    decl_body                  go to state 9
    declarations               go to state 10
    variable_declarations      go to state 11
    constant_declarations      go to state 12
    functions                  go to state 13
    complex_type_declarations  go to state 14


State 1

   11 identifiers: TK_IDENTIFIER •  [DEL_COMMA, DEL_COLON]
   20 variable_declarations: TK_IDENTIFIER • DEL_LBLOCK TK_INTEGER DEL_RBLOCK DEL_COLON basic_types DEL_SMCOLON

    DEL_LBLOCK  shift, and go to state 15

    $default  reduce using rule 11 (identifiers)


State 2

   11 identifiers: • TK_IDENTIFIER
   12            | • identifiers DEL_COMMA TK_IDENTIFIER
   22 constant_declarations: KW_CONST • identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON

    TK_IDENTIFIER  shift, and go to state 16

    identifiers  go to state 17


State 3

    4 main: KW_DEF • KW_MAIN DEL_LPAR DEL_RPAR DEL_COLON body KW_ENDDEF DEL_SMCOLON
   23 functions: KW_DEF • TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR DEL_COLON body KW_ENDDEF DEL_SMCOLON
   24          | KW_DEF • TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN types DEL_COLON body KW_ENDDEF DEL_SMCOLON

    TK_IDENTIFIER  shift, and go to state 18
    KW_MAIN        shift, and go to state 19


State 4

   30 complex_type_declarations: KW_COMP • TK_IDENTIFIER DEL_COLON comp_body KW_ENDCOMP DEL_SMCOLON

    TK_IDENTIFIER  shift, and go to state 20


State 5

    0 $accept: program • $end

    $end  shift, and go to state 21


State 6

    1 program: main_body •

    $default  reduce using rule 1 (program)


State 7

    3 main_body: main •

    $default  reduce using rule 3 (main_body)


State 8

   12 identifiers: identifiers • DEL_COMMA TK_IDENTIFIER
   19 variable_declarations: identifiers • DEL_COLON basic_types DEL_SMCOLON

    DEL_COMMA  shift, and go to state 22
    DEL_COLON  shift, and go to state 23


State 9

    2 main_body: decl_body • main
    4 main: • KW_DEF KW_MAIN DEL_LPAR DEL_RPAR DEL_COLON body KW_ENDDEF DEL_SMCOLON
   11 identifiers: • TK_IDENTIFIER
   12            | • identifiers DEL_COMMA TK_IDENTIFIER
   13 decl_body: decl_body • declarations
   15 declarations: • variable_declarations
   16             | • complex_type_declarations
   17             | • constant_declarations
   18             | • functions
   19 variable_declarations: • identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK DEL_COLON basic_types DEL_SMCOLON
   22 constant_declarations: • KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON
   23 functions: • KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR DEL_COLON body KW_ENDDEF DEL_SMCOLON
   24          | • KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN types DEL_COLON body KW_ENDDEF DEL_SMCOLON
   30 complex_type_declarations: • KW_COMP TK_IDENTIFIER DEL_COLON comp_body KW_ENDCOMP DEL_SMCOLON

    TK_IDENTIFIER  shift, and go to state 1
    KW_CONST       shift, and go to state 2
    KW_DEF         shift, and go to state 3
    KW_COMP        shift, and go to state 4

    main                       go to state 24
    identifiers                go to state 8
    declarations               go to state 25
    variable_declarations      go to state 11
    constant_declarations      go to state 12
    functions                  go to state 13
    complex_type_declarations  go to state 14


State 10

   14 decl_body: declarations •

    $default  reduce using rule 14 (decl_body)


State 11

   15 declarations: variable_declarations •

    $default  reduce using rule 15 (declarations)


State 12

   17 declarations: constant_declarations •

    $default  reduce using rule 17 (declarations)


State 13

   18 declarations: functions •

    $default  reduce using rule 18 (declarations)


State 14

   16 declarations: complex_type_declarations •

    $default  reduce using rule 16 (declarations)


State 15

   20 variable_declarations: TK_IDENTIFIER DEL_LBLOCK • TK_INTEGER DEL_RBLOCK DEL_COLON basic_types DEL_SMCOLON

    TK_INTEGER  shift, and go to state 26


State 16

   11 identifiers: TK_IDENTIFIER •

    $default  reduce using rule 11 (identifiers)


State 17

   12 identifiers: identifiers • DEL_COMMA TK_IDENTIFIER
   22 constant_declarations: KW_CONST identifiers • AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON

    AP_ASSIGN  shift, and go to state 27
    DEL_COMMA  shift, and go to state 22


State 18

   23 functions: KW_DEF TK_IDENTIFIER • DEL_LPAR parameter_declarations DEL_RPAR DEL_COLON body KW_ENDDEF DEL_SMCOLON
   24          | KW_DEF TK_IDENTIFIER • DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN types DEL_COLON body KW_ENDDEF DEL_SMCOLON

    DEL_LPAR  shift, and go to state 28


State 19

    4 main: KW_DEF KW_MAIN • DEL_LPAR DEL_RPAR DEL_COLON body KW_ENDDEF DEL_SMCOLON

    DEL_LPAR  shift, and go to state 29


State 20

   30 complex_type_declarations: KW_COMP TK_IDENTIFIER • DEL_COLON comp_body KW_ENDCOMP DEL_SMCOLON

    DEL_COLON  shift, and go to state 30


State 21

    0 $accept: program $end •

    $default  accept


State 22

   12 identifiers: identifiers DEL_COMMA • TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 31


State 23

    7 basic_types: • KW_INT
    8            | • KW_BOOLEAN
    9            | • KW_SCALAR
   10            | • KW_STR
   19 variable_declarations: identifiers DEL_COLON • basic_types DEL_SMCOLON

    KW_INT      shift, and go to state 32
    KW_SCALAR   shift, and go to state 33
    KW_STR      shift, and go to state 34
    KW_BOOLEAN  shift, and go to state 35

    basic_types  go to state 36


State 24

    2 main_body: decl_body main •

    $default  reduce using rule 2 (main_body)


State 25

   13 decl_body: decl_body declarations •

    $default  reduce using rule 13 (decl_body)


State 26

   20 variable_declarations: TK_IDENTIFIER DEL_LBLOCK TK_INTEGER • DEL_RBLOCK DEL_COLON basic_types DEL_SMCOLON

    DEL_RBLOCK  shift, and go to state 37


State 27

   22 constant_declarations: KW_CONST identifiers AP_ASSIGN • expressions DEL_COLON types DEL_SMCOLON
   40 expressions: • identifier_expressions
   41            | • TK_STRING
   42            | • KW_TRUE
   43            | • KW_FALSE
   44            | • function_statement
   45            | • arithmetic_expressions
   46            | • relational_expressions
   47            | • KW_NOT expressions
   48            | • expressions KW_AND expressions
   49            | • expressions KW_OR expressions
   50            | • DEL_LPAR expressions DEL_RPAR
   51            | • expressions DEL_DOT expressions
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   56 arithmetic_expressions: • TK_INTEGER
   57                       | • TK_FLOAT
   58                       | • expressions OP_POWER expressions
   59                       | • expressions OP_MULT expressions
   60                       | • expressions OP_DIV expressions
   61                       | • expressions OP_MOD expressions
   62                       | • expressions OP_PLUS expressions
   63                       | • expressions OP_MINUS expressions
   64                       | • OP_PLUS expressions
   65                       | • OP_MINUS expressions
   66 relational_expressions: • expressions RP_LESS expressions
   67                       | • expressions RP_LESSEQUALS expressions
   68                       | • expressions RP_MORE expressions
   69                       | • expressions RP_MOREEQUALS expressions
   70                       | • expressions RP_EQUALS expressions
   71                       | • expressions RP_NOTEQUALS expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    AP_HASHASSIGN  shift, and go to state 47
    DEL_LPAR       shift, and go to state 48

    expressions             go to state 49
    identifier_expressions  go to state 50
    arithmetic_expressions  go to state 51
    relational_expressions  go to state 52
    function_statement      go to state 53


State 28

   23 functions: KW_DEF TK_IDENTIFIER DEL_LPAR • parameter_declarations DEL_RPAR DEL_COLON body KW_ENDDEF DEL_SMCOLON
   24          | KW_DEF TK_IDENTIFIER DEL_LPAR • parameter_declarations DEL_RPAR AP_ARROWASSIGN types DEL_COLON body KW_ENDDEF DEL_SMCOLON
   25 parameter_declarations: ε •  [DEL_RPAR]
   26                       | • TK_IDENTIFIER DEL_COLON types
   27                       | • TK_IDENTIFIER DEL_LBLOCK DEL_RBLOCK DEL_COLON types
   28                       | • TK_IDENTIFIER DEL_LBLOCK DEL_RBLOCK DEL_COLON types DEL_COMMA parameter_declarations
   29                       | • TK_IDENTIFIER DEL_COLON types DEL_COMMA parameter_declarations

    TK_IDENTIFIER  shift, and go to state 54

    $default  reduce using rule 25 (parameter_declarations)

    parameter_declarations  go to state 55


State 29

    4 main: KW_DEF KW_MAIN DEL_LPAR • DEL_RPAR DEL_COLON body KW_ENDDEF DEL_SMCOLON

    DEL_RPAR  shift, and go to state 56


State 30

   30 complex_type_declarations: KW_COMP TK_IDENTIFIER DEL_COLON • comp_body KW_ENDCOMP DEL_SMCOLON
   31 comp_body: • comp_variable_declarations
   32          | • comp_variable_declarations comp_body
   33          | • comp_functions
   34          | • comp_functions comp_body
   35 comp_variable_declarations: • comp_identifiers DEL_COLON types DEL_SMCOLON
   36 comp_identifiers: • AP_HASHASSIGN TK_IDENTIFIER
   37                 | • AP_HASHASSIGN TK_IDENTIFIER DEL_COMMA comp_identifiers
   38 comp_functions: • KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR DEL_COLON body KW_ENDDEF DEL_SMCOLON
   39               | • KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN types DEL_COLON body KW_ENDDEF DEL_SMCOLON

    KW_DEF         shift, and go to state 57
    AP_HASHASSIGN  shift, and go to state 58

    comp_body                   go to state 59
    comp_variable_declarations  go to state 60
    comp_identifiers            go to state 61
    comp_functions              go to state 62


State 31

   12 identifiers: identifiers DEL_COMMA TK_IDENTIFIER •

    $default  reduce using rule 12 (identifiers)


State 32

    7 basic_types: KW_INT •

    $default  reduce using rule 7 (basic_types)


State 33

    9 basic_types: KW_SCALAR •

    $default  reduce using rule 9 (basic_types)


State 34

   10 basic_types: KW_STR •

    $default  reduce using rule 10 (basic_types)


State 35

    8 basic_types: KW_BOOLEAN •

    $default  reduce using rule 8 (basic_types)


State 36

   19 variable_declarations: identifiers DEL_COLON basic_types • DEL_SMCOLON

    DEL_SMCOLON  shift, and go to state 63


State 37

   20 variable_declarations: TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK • DEL_COLON basic_types DEL_SMCOLON

    DEL_COLON  shift, and go to state 64


State 38

   52 identifier_expressions: TK_IDENTIFIER •  [KW_FOR, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, OP_POWER, RP_EQUALS, RP_NOTEQUALS, RP_LESS, RP_LESSEQUALS, RP_MORE, RP_MOREEQUALS, DEL_SMCOLON, DEL_RPAR, DEL_COMMA, DEL_RBLOCK, DEL_COLON, DEL_DOT]
   54                       | TK_IDENTIFIER • DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | TK_IDENTIFIER • DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
  104 function_statement: TK_IDENTIFIER • DEL_LPAR function_arg DEL_RPAR

    DEL_LPAR    shift, and go to state 65
    DEL_LBLOCK  shift, and go to state 66

    $default  reduce using rule 52 (identifier_expressions)


State 39

   56 arithmetic_expressions: TK_INTEGER •

    $default  reduce using rule 56 (arithmetic_expressions)


State 40

   57 arithmetic_expressions: TK_FLOAT •

    $default  reduce using rule 57 (arithmetic_expressions)


State 41

   41 expressions: TK_STRING •

    $default  reduce using rule 41 (expressions)


State 42

   42 expressions: KW_TRUE •

    $default  reduce using rule 42 (expressions)


State 43

   43 expressions: KW_FALSE •

    $default  reduce using rule 43 (expressions)


State 44

   40 expressions: • identifier_expressions
   41            | • TK_STRING
   42            | • KW_TRUE
   43            | • KW_FALSE
   44            | • function_statement
   45            | • arithmetic_expressions
   46            | • relational_expressions
   47            | • KW_NOT expressions
   47            | KW_NOT • expressions
   48            | • expressions KW_AND expressions
   49            | • expressions KW_OR expressions
   50            | • DEL_LPAR expressions DEL_RPAR
   51            | • expressions DEL_DOT expressions
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   56 arithmetic_expressions: • TK_INTEGER
   57                       | • TK_FLOAT
   58                       | • expressions OP_POWER expressions
   59                       | • expressions OP_MULT expressions
   60                       | • expressions OP_DIV expressions
   61                       | • expressions OP_MOD expressions
   62                       | • expressions OP_PLUS expressions
   63                       | • expressions OP_MINUS expressions
   64                       | • OP_PLUS expressions
   65                       | • OP_MINUS expressions
   66 relational_expressions: • expressions RP_LESS expressions
   67                       | • expressions RP_LESSEQUALS expressions
   68                       | • expressions RP_MORE expressions
   69                       | • expressions RP_MOREEQUALS expressions
   70                       | • expressions RP_EQUALS expressions
   71                       | • expressions RP_NOTEQUALS expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    AP_HASHASSIGN  shift, and go to state 47
    DEL_LPAR       shift, and go to state 48

    expressions             go to state 67
    identifier_expressions  go to state 50
    arithmetic_expressions  go to state 51
    relational_expressions  go to state 52
    function_statement      go to state 53


State 45

   40 expressions: • identifier_expressions
   41            | • TK_STRING
   42            | • KW_TRUE
   43            | • KW_FALSE
   44            | • function_statement
   45            | • arithmetic_expressions
   46            | • relational_expressions
   47            | • KW_NOT expressions
   48            | • expressions KW_AND expressions
   49            | • expressions KW_OR expressions
   50            | • DEL_LPAR expressions DEL_RPAR
   51            | • expressions DEL_DOT expressions
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   56 arithmetic_expressions: • TK_INTEGER
   57                       | • TK_FLOAT
   58                       | • expressions OP_POWER expressions
   59                       | • expressions OP_MULT expressions
   60                       | • expressions OP_DIV expressions
   61                       | • expressions OP_MOD expressions
   62                       | • expressions OP_PLUS expressions
   63                       | • expressions OP_MINUS expressions
   64                       | • OP_PLUS expressions
   64                       | OP_PLUS • expressions
   65                       | • OP_MINUS expressions
   66 relational_expressions: • expressions RP_LESS expressions
   67                       | • expressions RP_LESSEQUALS expressions
   68                       | • expressions RP_MORE expressions
   69                       | • expressions RP_MOREEQUALS expressions
   70                       | • expressions RP_EQUALS expressions
   71                       | • expressions RP_NOTEQUALS expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    AP_HASHASSIGN  shift, and go to state 47
    DEL_LPAR       shift, and go to state 48

    expressions             go to state 68
    identifier_expressions  go to state 50
    arithmetic_expressions  go to state 51
    relational_expressions  go to state 52
    function_statement      go to state 53


State 46

   40 expressions: • identifier_expressions
   41            | • TK_STRING
   42            | • KW_TRUE
   43            | • KW_FALSE
   44            | • function_statement
   45            | • arithmetic_expressions
   46            | • relational_expressions
   47            | • KW_NOT expressions
   48            | • expressions KW_AND expressions
   49            | • expressions KW_OR expressions
   50            | • DEL_LPAR expressions DEL_RPAR
   51            | • expressions DEL_DOT expressions
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   56 arithmetic_expressions: • TK_INTEGER
   57                       | • TK_FLOAT
   58                       | • expressions OP_POWER expressions
   59                       | • expressions OP_MULT expressions
   60                       | • expressions OP_DIV expressions
   61                       | • expressions OP_MOD expressions
   62                       | • expressions OP_PLUS expressions
   63                       | • expressions OP_MINUS expressions
   64                       | • OP_PLUS expressions
   65                       | • OP_MINUS expressions
   65                       | OP_MINUS • expressions
   66 relational_expressions: • expressions RP_LESS expressions
   67                       | • expressions RP_LESSEQUALS expressions
   68                       | • expressions RP_MORE expressions
   69                       | • expressions RP_MOREEQUALS expressions
   70                       | • expressions RP_EQUALS expressions
   71                       | • expressions RP_NOTEQUALS expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    AP_HASHASSIGN  shift, and go to state 47
    DEL_LPAR       shift, and go to state 48

    expressions             go to state 69
    identifier_expressions  go to state 50
    arithmetic_expressions  go to state 51
    relational_expressions  go to state 52
    function_statement      go to state 53


State 47

   53 identifier_expressions: AP_HASHASSIGN • TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 70


State 48

   40 expressions: • identifier_expressions
   41            | • TK_STRING
   42            | • KW_TRUE
   43            | • KW_FALSE
   44            | • function_statement
   45            | • arithmetic_expressions
   46            | • relational_expressions
   47            | • KW_NOT expressions
   48            | • expressions KW_AND expressions
   49            | • expressions KW_OR expressions
   50            | • DEL_LPAR expressions DEL_RPAR
   50            | DEL_LPAR • expressions DEL_RPAR
   51            | • expressions DEL_DOT expressions
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   56 arithmetic_expressions: • TK_INTEGER
   57                       | • TK_FLOAT
   58                       | • expressions OP_POWER expressions
   59                       | • expressions OP_MULT expressions
   60                       | • expressions OP_DIV expressions
   61                       | • expressions OP_MOD expressions
   62                       | • expressions OP_PLUS expressions
   63                       | • expressions OP_MINUS expressions
   64                       | • OP_PLUS expressions
   65                       | • OP_MINUS expressions
   66 relational_expressions: • expressions RP_LESS expressions
   67                       | • expressions RP_LESSEQUALS expressions
   68                       | • expressions RP_MORE expressions
   69                       | • expressions RP_MOREEQUALS expressions
   70                       | • expressions RP_EQUALS expressions
   71                       | • expressions RP_NOTEQUALS expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    AP_HASHASSIGN  shift, and go to state 47
    DEL_LPAR       shift, and go to state 48

    expressions             go to state 71
    identifier_expressions  go to state 50
    arithmetic_expressions  go to state 51
    relational_expressions  go to state 52
    function_statement      go to state 53


State 49

   22 constant_declarations: KW_CONST identifiers AP_ASSIGN expressions • DEL_COLON types DEL_SMCOLON
   48 expressions: expressions • KW_AND expressions
   49            | expressions • KW_OR expressions
   51            | expressions • DEL_DOT expressions
   58 arithmetic_expressions: expressions • OP_POWER expressions
   59                       | expressions • OP_MULT expressions
   60                       | expressions • OP_DIV expressions
   61                       | expressions • OP_MOD expressions
   62                       | expressions • OP_PLUS expressions
   63                       | expressions • OP_MINUS expressions
   66 relational_expressions: expressions • RP_LESS expressions
   67                       | expressions • RP_LESSEQUALS expressions
   68                       | expressions • RP_MORE expressions
   69                       | expressions • RP_MOREEQUALS expressions
   70                       | expressions • RP_EQUALS expressions
   71                       | expressions • RP_NOTEQUALS expressions

    KW_AND         shift, and go to state 72
    KW_OR          shift, and go to state 73
    OP_PLUS        shift, and go to state 74
    OP_MINUS       shift, and go to state 75
    OP_MULT        shift, and go to state 76
    OP_DIV         shift, and go to state 77
    OP_MOD         shift, and go to state 78
    OP_POWER       shift, and go to state 79
    RP_EQUALS      shift, and go to state 80
    RP_NOTEQUALS   shift, and go to state 81
    RP_LESS        shift, and go to state 82
    RP_LESSEQUALS  shift, and go to state 83
    RP_MORE        shift, and go to state 84
    RP_MOREEQUALS  shift, and go to state 85
    DEL_COLON      shift, and go to state 86
    DEL_DOT        shift, and go to state 87


State 50

   40 expressions: identifier_expressions •

    $default  reduce using rule 40 (expressions)


State 51

   45 expressions: arithmetic_expressions •

    $default  reduce using rule 45 (expressions)


State 52

   46 expressions: relational_expressions •

    $default  reduce using rule 46 (expressions)


State 53

   44 expressions: function_statement •

    $default  reduce using rule 44 (expressions)


State 54

   26 parameter_declarations: TK_IDENTIFIER • DEL_COLON types
   27                       | TK_IDENTIFIER • DEL_LBLOCK DEL_RBLOCK DEL_COLON types
   28                       | TK_IDENTIFIER • DEL_LBLOCK DEL_RBLOCK DEL_COLON types DEL_COMMA parameter_declarations
   29                       | TK_IDENTIFIER • DEL_COLON types DEL_COMMA parameter_declarations

    DEL_LBLOCK  shift, and go to state 88
    DEL_COLON   shift, and go to state 89


State 55

   23 functions: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations • DEL_RPAR DEL_COLON body KW_ENDDEF DEL_SMCOLON
   24          | KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations • DEL_RPAR AP_ARROWASSIGN types DEL_COLON body KW_ENDDEF DEL_SMCOLON

    DEL_RPAR  shift, and go to state 90


State 56

    4 main: KW_DEF KW_MAIN DEL_LPAR DEL_RPAR • DEL_COLON body KW_ENDDEF DEL_SMCOLON

    DEL_COLON  shift, and go to state 91


State 57

   38 comp_functions: KW_DEF • TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR DEL_COLON body KW_ENDDEF DEL_SMCOLON
   39               | KW_DEF • TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN types DEL_COLON body KW_ENDDEF DEL_SMCOLON

    TK_IDENTIFIER  shift, and go to state 92


State 58

   36 comp_identifiers: AP_HASHASSIGN • TK_IDENTIFIER
   37                 | AP_HASHASSIGN • TK_IDENTIFIER DEL_COMMA comp_identifiers

    TK_IDENTIFIER  shift, and go to state 93


State 59

   30 complex_type_declarations: KW_COMP TK_IDENTIFIER DEL_COLON comp_body • KW_ENDCOMP DEL_SMCOLON

    KW_ENDCOMP  shift, and go to state 94


State 60

   31 comp_body: • comp_variable_declarations
   31          | comp_variable_declarations •  [KW_ENDCOMP]
   32          | • comp_variable_declarations comp_body
   32          | comp_variable_declarations • comp_body
   33          | • comp_functions
   34          | • comp_functions comp_body
   35 comp_variable_declarations: • comp_identifiers DEL_COLON types DEL_SMCOLON
   36 comp_identifiers: • AP_HASHASSIGN TK_IDENTIFIER
   37                 | • AP_HASHASSIGN TK_IDENTIFIER DEL_COMMA comp_identifiers
   38 comp_functions: • KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR DEL_COLON body KW_ENDDEF DEL_SMCOLON
   39               | • KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN types DEL_COLON body KW_ENDDEF DEL_SMCOLON

    KW_DEF         shift, and go to state 57
    AP_HASHASSIGN  shift, and go to state 58

    $default  reduce using rule 31 (comp_body)

    comp_body                   go to state 95
    comp_variable_declarations  go to state 60
    comp_identifiers            go to state 61
    comp_functions              go to state 62


State 61

   35 comp_variable_declarations: comp_identifiers • DEL_COLON types DEL_SMCOLON

    DEL_COLON  shift, and go to state 96


State 62

   31 comp_body: • comp_variable_declarations
   32          | • comp_variable_declarations comp_body
   33          | • comp_functions
   33          | comp_functions •  [KW_ENDCOMP]
   34          | • comp_functions comp_body
   34          | comp_functions • comp_body
   35 comp_variable_declarations: • comp_identifiers DEL_COLON types DEL_SMCOLON
   36 comp_identifiers: • AP_HASHASSIGN TK_IDENTIFIER
   37                 | • AP_HASHASSIGN TK_IDENTIFIER DEL_COMMA comp_identifiers
   38 comp_functions: • KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR DEL_COLON body KW_ENDDEF DEL_SMCOLON
   39               | • KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN types DEL_COLON body KW_ENDDEF DEL_SMCOLON

    KW_DEF         shift, and go to state 57
    AP_HASHASSIGN  shift, and go to state 58

    $default  reduce using rule 33 (comp_body)

    comp_body                   go to state 97
    comp_variable_declarations  go to state 60
    comp_identifiers            go to state 61
    comp_functions              go to state 62


State 63

   19 variable_declarations: identifiers DEL_COLON basic_types DEL_SMCOLON •

    $default  reduce using rule 19 (variable_declarations)


State 64

    7 basic_types: • KW_INT
    8            | • KW_BOOLEAN
    9            | • KW_SCALAR
   10            | • KW_STR
   20 variable_declarations: TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK DEL_COLON • basic_types DEL_SMCOLON

    KW_INT      shift, and go to state 32
    KW_SCALAR   shift, and go to state 33
    KW_STR      shift, and go to state 34
    KW_BOOLEAN  shift, and go to state 35

    basic_types  go to state 98


State 65

   40 expressions: • identifier_expressions
   41            | • TK_STRING
   42            | • KW_TRUE
   43            | • KW_FALSE
   44            | • function_statement
   45            | • arithmetic_expressions
   46            | • relational_expressions
   47            | • KW_NOT expressions
   48            | • expressions KW_AND expressions
   49            | • expressions KW_OR expressions
   50            | • DEL_LPAR expressions DEL_RPAR
   51            | • expressions DEL_DOT expressions
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   56 arithmetic_expressions: • TK_INTEGER
   57                       | • TK_FLOAT
   58                       | • expressions OP_POWER expressions
   59                       | • expressions OP_MULT expressions
   60                       | • expressions OP_DIV expressions
   61                       | • expressions OP_MOD expressions
   62                       | • expressions OP_PLUS expressions
   63                       | • expressions OP_MINUS expressions
   64                       | • OP_PLUS expressions
   65                       | • OP_MINUS expressions
   66 relational_expressions: • expressions RP_LESS expressions
   67                       | • expressions RP_LESSEQUALS expressions
   68                       | • expressions RP_MORE expressions
   69                       | • expressions RP_MOREEQUALS expressions
   70                       | • expressions RP_EQUALS expressions
   71                       | • expressions RP_NOTEQUALS expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR
  104                   | TK_IDENTIFIER DEL_LPAR • function_arg DEL_RPAR
  105 function_arg: ε •  [DEL_RPAR, DEL_COMMA]
  106             | • expressions
  107             | • function_arg DEL_COMMA expressions

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    AP_HASHASSIGN  shift, and go to state 47
    DEL_LPAR       shift, and go to state 48

    $default  reduce using rule 105 (function_arg)

    expressions             go to state 99
    identifier_expressions  go to state 50
    arithmetic_expressions  go to state 51
    relational_expressions  go to state 52
    function_statement      go to state 53
    function_arg            go to state 100


State 66

   54 identifier_expressions: TK_IDENTIFIER DEL_LBLOCK • TK_INTEGER DEL_RBLOCK
   55                       | TK_IDENTIFIER DEL_LBLOCK • TK_IDENTIFIER DEL_RBLOCK

    TK_IDENTIFIER  shift, and go to state 101
    TK_INTEGER     shift, and go to state 102


State 67

   47 expressions: KW_NOT expressions •  [KW_FOR, DEL_SMCOLON, DEL_RPAR, DEL_COMMA, DEL_RBLOCK, DEL_COLON]
   48            | expressions • KW_AND expressions
   49            | expressions • KW_OR expressions
   51            | expressions • DEL_DOT expressions
   58 arithmetic_expressions: expressions • OP_POWER expressions
   59                       | expressions • OP_MULT expressions
   60                       | expressions • OP_DIV expressions
   61                       | expressions • OP_MOD expressions
   62                       | expressions • OP_PLUS expressions
   63                       | expressions • OP_MINUS expressions
   66 relational_expressions: expressions • RP_LESS expressions
   67                       | expressions • RP_LESSEQUALS expressions
   68                       | expressions • RP_MORE expressions
   69                       | expressions • RP_MOREEQUALS expressions
   70                       | expressions • RP_EQUALS expressions
   71                       | expressions • RP_NOTEQUALS expressions

    KW_AND         shift, and go to state 72
    KW_OR          shift, and go to state 73
    OP_PLUS        shift, and go to state 74
    OP_MINUS       shift, and go to state 75
    OP_MULT        shift, and go to state 76
    OP_DIV         shift, and go to state 77
    OP_MOD         shift, and go to state 78
    OP_POWER       shift, and go to state 79
    RP_EQUALS      shift, and go to state 80
    RP_NOTEQUALS   shift, and go to state 81
    RP_LESS        shift, and go to state 82
    RP_LESSEQUALS  shift, and go to state 83
    RP_MORE        shift, and go to state 84
    RP_MOREEQUALS  shift, and go to state 85
    DEL_DOT        shift, and go to state 87

    $default  reduce using rule 47 (expressions)

    Conflict between rule 47 and token KW_AND resolved as shift (KW_NOT < KW_AND).
    Conflict between rule 47 and token KW_OR resolved as shift (KW_NOT < KW_OR).
    Conflict between rule 47 and token OP_PLUS resolved as shift (KW_NOT < OP_PLUS).
    Conflict between rule 47 and token OP_MINUS resolved as shift (KW_NOT < OP_MINUS).
    Conflict between rule 47 and token OP_MULT resolved as shift (KW_NOT < OP_MULT).
    Conflict between rule 47 and token OP_DIV resolved as shift (KW_NOT < OP_DIV).
    Conflict between rule 47 and token OP_MOD resolved as shift (KW_NOT < OP_MOD).
    Conflict between rule 47 and token OP_POWER resolved as shift (KW_NOT < OP_POWER).
    Conflict between rule 47 and token RP_EQUALS resolved as shift (KW_NOT < RP_EQUALS).
    Conflict between rule 47 and token RP_NOTEQUALS resolved as shift (KW_NOT < RP_NOTEQUALS).
    Conflict between rule 47 and token RP_LESS resolved as shift (KW_NOT < RP_LESS).
    Conflict between rule 47 and token RP_LESSEQUALS resolved as shift (KW_NOT < RP_LESSEQUALS).
    Conflict between rule 47 and token RP_MORE resolved as shift (KW_NOT < RP_MORE).
    Conflict between rule 47 and token RP_MOREEQUALS resolved as shift (KW_NOT < RP_MOREEQUALS).
    Conflict between rule 47 and token DEL_DOT resolved as shift (KW_NOT < DEL_DOT).


State 68

   48 expressions: expressions • KW_AND expressions
   49            | expressions • KW_OR expressions
   51            | expressions • DEL_DOT expressions
   58 arithmetic_expressions: expressions • OP_POWER expressions
   59                       | expressions • OP_MULT expressions
   60                       | expressions • OP_DIV expressions
   61                       | expressions • OP_MOD expressions
   62                       | expressions • OP_PLUS expressions
   63                       | expressions • OP_MINUS expressions
   64                       | OP_PLUS expressions •  [KW_FOR, KW_AND, KW_OR, OP_PLUS, DEL_SMCOLON, DEL_RPAR, DEL_COMMA, DEL_RBLOCK, DEL_COLON]
   66 relational_expressions: expressions • RP_LESS expressions
   67                       | expressions • RP_LESSEQUALS expressions
   68                       | expressions • RP_MORE expressions
   69                       | expressions • RP_MOREEQUALS expressions
   70                       | expressions • RP_EQUALS expressions
   71                       | expressions • RP_NOTEQUALS expressions

    OP_MINUS       shift, and go to state 75
    OP_MULT        shift, and go to state 76
    OP_DIV         shift, and go to state 77
    OP_MOD         shift, and go to state 78
    OP_POWER       shift, and go to state 79
    RP_EQUALS      shift, and go to state 80
    RP_NOTEQUALS   shift, and go to state 81
    RP_LESS        shift, and go to state 82
    RP_LESSEQUALS  shift, and go to state 83
    RP_MORE        shift, and go to state 84
    RP_MOREEQUALS  shift, and go to state 85
    DEL_DOT        shift, and go to state 87

    $default  reduce using rule 64 (arithmetic_expressions)

    Conflict between rule 64 and token KW_AND resolved as reduce (KW_AND < OP_PLUS).
    Conflict between rule 64 and token KW_OR resolved as reduce (KW_OR < OP_PLUS).
    Conflict between rule 64 and token OP_PLUS resolved as reduce (%left OP_PLUS).
    Conflict between rule 64 and token OP_MINUS resolved as shift (OP_PLUS < OP_MINUS).
    Conflict between rule 64 and token OP_MULT resolved as shift (OP_PLUS < OP_MULT).
    Conflict between rule 64 and token OP_DIV resolved as shift (OP_PLUS < OP_DIV).
    Conflict between rule 64 and token OP_MOD resolved as shift (OP_PLUS < OP_MOD).
    Conflict between rule 64 and token OP_POWER resolved as shift (OP_PLUS < OP_POWER).
    Conflict between rule 64 and token RP_EQUALS resolved as shift (OP_PLUS < RP_EQUALS).
    Conflict between rule 64 and token RP_NOTEQUALS resolved as shift (OP_PLUS < RP_NOTEQUALS).
    Conflict between rule 64 and token RP_LESS resolved as shift (OP_PLUS < RP_LESS).
    Conflict between rule 64 and token RP_LESSEQUALS resolved as shift (OP_PLUS < RP_LESSEQUALS).
    Conflict between rule 64 and token RP_MORE resolved as shift (OP_PLUS < RP_MORE).
    Conflict between rule 64 and token RP_MOREEQUALS resolved as shift (OP_PLUS < RP_MOREEQUALS).
    Conflict between rule 64 and token DEL_DOT resolved as shift (OP_PLUS < DEL_DOT).


State 69

   48 expressions: expressions • KW_AND expressions
   49            | expressions • KW_OR expressions
   51            | expressions • DEL_DOT expressions
   58 arithmetic_expressions: expressions • OP_POWER expressions
   59                       | expressions • OP_MULT expressions
   60                       | expressions • OP_DIV expressions
   61                       | expressions • OP_MOD expressions
   62                       | expressions • OP_PLUS expressions
   63                       | expressions • OP_MINUS expressions
   65                       | OP_MINUS expressions •  [KW_FOR, KW_AND, KW_OR, OP_PLUS, OP_MINUS, DEL_SMCOLON, DEL_RPAR, DEL_COMMA, DEL_RBLOCK, DEL_COLON]
   66 relational_expressions: expressions • RP_LESS expressions
   67                       | expressions • RP_LESSEQUALS expressions
   68                       | expressions • RP_MORE expressions
   69                       | expressions • RP_MOREEQUALS expressions
   70                       | expressions • RP_EQUALS expressions
   71                       | expressions • RP_NOTEQUALS expressions

    OP_MULT        shift, and go to state 76
    OP_DIV         shift, and go to state 77
    OP_MOD         shift, and go to state 78
    OP_POWER       shift, and go to state 79
    RP_EQUALS      shift, and go to state 80
    RP_NOTEQUALS   shift, and go to state 81
    RP_LESS        shift, and go to state 82
    RP_LESSEQUALS  shift, and go to state 83
    RP_MORE        shift, and go to state 84
    RP_MOREEQUALS  shift, and go to state 85
    DEL_DOT        shift, and go to state 87

    $default  reduce using rule 65 (arithmetic_expressions)

    Conflict between rule 65 and token KW_AND resolved as reduce (KW_AND < OP_MINUS).
    Conflict between rule 65 and token KW_OR resolved as reduce (KW_OR < OP_MINUS).
    Conflict between rule 65 and token OP_PLUS resolved as reduce (OP_PLUS < OP_MINUS).
    Conflict between rule 65 and token OP_MINUS resolved as reduce (%left OP_MINUS).
    Conflict between rule 65 and token OP_MULT resolved as shift (OP_MINUS < OP_MULT).
    Conflict between rule 65 and token OP_DIV resolved as shift (OP_MINUS < OP_DIV).
    Conflict between rule 65 and token OP_MOD resolved as shift (OP_MINUS < OP_MOD).
    Conflict between rule 65 and token OP_POWER resolved as shift (OP_MINUS < OP_POWER).
    Conflict between rule 65 and token RP_EQUALS resolved as shift (OP_MINUS < RP_EQUALS).
    Conflict between rule 65 and token RP_NOTEQUALS resolved as shift (OP_MINUS < RP_NOTEQUALS).
    Conflict between rule 65 and token RP_LESS resolved as shift (OP_MINUS < RP_LESS).
    Conflict between rule 65 and token RP_LESSEQUALS resolved as shift (OP_MINUS < RP_LESSEQUALS).
    Conflict between rule 65 and token RP_MORE resolved as shift (OP_MINUS < RP_MORE).
    Conflict between rule 65 and token RP_MOREEQUALS resolved as shift (OP_MINUS < RP_MOREEQUALS).
    Conflict between rule 65 and token DEL_DOT resolved as shift (OP_MINUS < DEL_DOT).


State 70

   53 identifier_expressions: AP_HASHASSIGN TK_IDENTIFIER •

    $default  reduce using rule 53 (identifier_expressions)


State 71

   48 expressions: expressions • KW_AND expressions
   49            | expressions • KW_OR expressions
   50            | DEL_LPAR expressions • DEL_RPAR
   51            | expressions • DEL_DOT expressions
   58 arithmetic_expressions: expressions • OP_POWER expressions
   59                       | expressions • OP_MULT expressions
   60                       | expressions • OP_DIV expressions
   61                       | expressions • OP_MOD expressions
   62                       | expressions • OP_PLUS expressions
   63                       | expressions • OP_MINUS expressions
   66 relational_expressions: expressions • RP_LESS expressions
   67                       | expressions • RP_LESSEQUALS expressions
   68                       | expressions • RP_MORE expressions
   69                       | expressions • RP_MOREEQUALS expressions
   70                       | expressions • RP_EQUALS expressions
   71                       | expressions • RP_NOTEQUALS expressions

    KW_AND         shift, and go to state 72
    KW_OR          shift, and go to state 73
    OP_PLUS        shift, and go to state 74
    OP_MINUS       shift, and go to state 75
    OP_MULT        shift, and go to state 76
    OP_DIV         shift, and go to state 77
    OP_MOD         shift, and go to state 78
    OP_POWER       shift, and go to state 79
    RP_EQUALS      shift, and go to state 80
    RP_NOTEQUALS   shift, and go to state 81
    RP_LESS        shift, and go to state 82
    RP_LESSEQUALS  shift, and go to state 83
    RP_MORE        shift, and go to state 84
    RP_MOREEQUALS  shift, and go to state 85
    DEL_RPAR       shift, and go to state 103
    DEL_DOT        shift, and go to state 87


State 72

   40 expressions: • identifier_expressions
   41            | • TK_STRING
   42            | • KW_TRUE
   43            | • KW_FALSE
   44            | • function_statement
   45            | • arithmetic_expressions
   46            | • relational_expressions
   47            | • KW_NOT expressions
   48            | • expressions KW_AND expressions
   48            | expressions KW_AND • expressions
   49            | • expressions KW_OR expressions
   50            | • DEL_LPAR expressions DEL_RPAR
   51            | • expressions DEL_DOT expressions
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   56 arithmetic_expressions: • TK_INTEGER
   57                       | • TK_FLOAT
   58                       | • expressions OP_POWER expressions
   59                       | • expressions OP_MULT expressions
   60                       | • expressions OP_DIV expressions
   61                       | • expressions OP_MOD expressions
   62                       | • expressions OP_PLUS expressions
   63                       | • expressions OP_MINUS expressions
   64                       | • OP_PLUS expressions
   65                       | • OP_MINUS expressions
   66 relational_expressions: • expressions RP_LESS expressions
   67                       | • expressions RP_LESSEQUALS expressions
   68                       | • expressions RP_MORE expressions
   69                       | • expressions RP_MOREEQUALS expressions
   70                       | • expressions RP_EQUALS expressions
   71                       | • expressions RP_NOTEQUALS expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    AP_HASHASSIGN  shift, and go to state 47
    DEL_LPAR       shift, and go to state 48

    expressions             go to state 104
    identifier_expressions  go to state 50
    arithmetic_expressions  go to state 51
    relational_expressions  go to state 52
    function_statement      go to state 53


State 73

   40 expressions: • identifier_expressions
   41            | • TK_STRING
   42            | • KW_TRUE
   43            | • KW_FALSE
   44            | • function_statement
   45            | • arithmetic_expressions
   46            | • relational_expressions
   47            | • KW_NOT expressions
   48            | • expressions KW_AND expressions
   49            | • expressions KW_OR expressions
   49            | expressions KW_OR • expressions
   50            | • DEL_LPAR expressions DEL_RPAR
   51            | • expressions DEL_DOT expressions
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   56 arithmetic_expressions: • TK_INTEGER
   57                       | • TK_FLOAT
   58                       | • expressions OP_POWER expressions
   59                       | • expressions OP_MULT expressions
   60                       | • expressions OP_DIV expressions
   61                       | • expressions OP_MOD expressions
   62                       | • expressions OP_PLUS expressions
   63                       | • expressions OP_MINUS expressions
   64                       | • OP_PLUS expressions
   65                       | • OP_MINUS expressions
   66 relational_expressions: • expressions RP_LESS expressions
   67                       | • expressions RP_LESSEQUALS expressions
   68                       | • expressions RP_MORE expressions
   69                       | • expressions RP_MOREEQUALS expressions
   70                       | • expressions RP_EQUALS expressions
   71                       | • expressions RP_NOTEQUALS expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    AP_HASHASSIGN  shift, and go to state 47
    DEL_LPAR       shift, and go to state 48

    expressions             go to state 105
    identifier_expressions  go to state 50
    arithmetic_expressions  go to state 51
    relational_expressions  go to state 52
    function_statement      go to state 53


State 74

   40 expressions: • identifier_expressions
   41            | • TK_STRING
   42            | • KW_TRUE
   43            | • KW_FALSE
   44            | • function_statement
   45            | • arithmetic_expressions
   46            | • relational_expressions
   47            | • KW_NOT expressions
   48            | • expressions KW_AND expressions
   49            | • expressions KW_OR expressions
   50            | • DEL_LPAR expressions DEL_RPAR
   51            | • expressions DEL_DOT expressions
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   56 arithmetic_expressions: • TK_INTEGER
   57                       | • TK_FLOAT
   58                       | • expressions OP_POWER expressions
   59                       | • expressions OP_MULT expressions
   60                       | • expressions OP_DIV expressions
   61                       | • expressions OP_MOD expressions
   62                       | • expressions OP_PLUS expressions
   62                       | expressions OP_PLUS • expressions
   63                       | • expressions OP_MINUS expressions
   64                       | • OP_PLUS expressions
   65                       | • OP_MINUS expressions
   66 relational_expressions: • expressions RP_LESS expressions
   67                       | • expressions RP_LESSEQUALS expressions
   68                       | • expressions RP_MORE expressions
   69                       | • expressions RP_MOREEQUALS expressions
   70                       | • expressions RP_EQUALS expressions
   71                       | • expressions RP_NOTEQUALS expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    AP_HASHASSIGN  shift, and go to state 47
    DEL_LPAR       shift, and go to state 48

    expressions             go to state 106
    identifier_expressions  go to state 50
    arithmetic_expressions  go to state 51
    relational_expressions  go to state 52
    function_statement      go to state 53


State 75

   40 expressions: • identifier_expressions
   41            | • TK_STRING
   42            | • KW_TRUE
   43            | • KW_FALSE
   44            | • function_statement
   45            | • arithmetic_expressions
   46            | • relational_expressions
   47            | • KW_NOT expressions
   48            | • expressions KW_AND expressions
   49            | • expressions KW_OR expressions
   50            | • DEL_LPAR expressions DEL_RPAR
   51            | • expressions DEL_DOT expressions
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   56 arithmetic_expressions: • TK_INTEGER
   57                       | • TK_FLOAT
   58                       | • expressions OP_POWER expressions
   59                       | • expressions OP_MULT expressions
   60                       | • expressions OP_DIV expressions
   61                       | • expressions OP_MOD expressions
   62                       | • expressions OP_PLUS expressions
   63                       | • expressions OP_MINUS expressions
   63                       | expressions OP_MINUS • expressions
   64                       | • OP_PLUS expressions
   65                       | • OP_MINUS expressions
   66 relational_expressions: • expressions RP_LESS expressions
   67                       | • expressions RP_LESSEQUALS expressions
   68                       | • expressions RP_MORE expressions
   69                       | • expressions RP_MOREEQUALS expressions
   70                       | • expressions RP_EQUALS expressions
   71                       | • expressions RP_NOTEQUALS expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    AP_HASHASSIGN  shift, and go to state 47
    DEL_LPAR       shift, and go to state 48

    expressions             go to state 107
    identifier_expressions  go to state 50
    arithmetic_expressions  go to state 51
    relational_expressions  go to state 52
    function_statement      go to state 53


State 76

   40 expressions: • identifier_expressions
   41            | • TK_STRING
   42            | • KW_TRUE
   43            | • KW_FALSE
   44            | • function_statement
   45            | • arithmetic_expressions
   46            | • relational_expressions
   47            | • KW_NOT expressions
   48            | • expressions KW_AND expressions
   49            | • expressions KW_OR expressions
   50            | • DEL_LPAR expressions DEL_RPAR
   51            | • expressions DEL_DOT expressions
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   56 arithmetic_expressions: • TK_INTEGER
   57                       | • TK_FLOAT
   58                       | • expressions OP_POWER expressions
   59                       | • expressions OP_MULT expressions
   59                       | expressions OP_MULT • expressions
   60                       | • expressions OP_DIV expressions
   61                       | • expressions OP_MOD expressions
   62                       | • expressions OP_PLUS expressions
   63                       | • expressions OP_MINUS expressions
   64                       | • OP_PLUS expressions
   65                       | • OP_MINUS expressions
   66 relational_expressions: • expressions RP_LESS expressions
   67                       | • expressions RP_LESSEQUALS expressions
   68                       | • expressions RP_MORE expressions
   69                       | • expressions RP_MOREEQUALS expressions
   70                       | • expressions RP_EQUALS expressions
   71                       | • expressions RP_NOTEQUALS expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    AP_HASHASSIGN  shift, and go to state 47
    DEL_LPAR       shift, and go to state 48

    expressions             go to state 108
    identifier_expressions  go to state 50
    arithmetic_expressions  go to state 51
    relational_expressions  go to state 52
    function_statement      go to state 53


State 77

   40 expressions: • identifier_expressions
   41            | • TK_STRING
   42            | • KW_TRUE
   43            | • KW_FALSE
   44            | • function_statement
   45            | • arithmetic_expressions
   46            | • relational_expressions
   47            | • KW_NOT expressions
   48            | • expressions KW_AND expressions
   49            | • expressions KW_OR expressions
   50            | • DEL_LPAR expressions DEL_RPAR
   51            | • expressions DEL_DOT expressions
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   56 arithmetic_expressions: • TK_INTEGER
   57                       | • TK_FLOAT
   58                       | • expressions OP_POWER expressions
   59                       | • expressions OP_MULT expressions
   60                       | • expressions OP_DIV expressions
   60                       | expressions OP_DIV • expressions
   61                       | • expressions OP_MOD expressions
   62                       | • expressions OP_PLUS expressions
   63                       | • expressions OP_MINUS expressions
   64                       | • OP_PLUS expressions
   65                       | • OP_MINUS expressions
   66 relational_expressions: • expressions RP_LESS expressions
   67                       | • expressions RP_LESSEQUALS expressions
   68                       | • expressions RP_MORE expressions
   69                       | • expressions RP_MOREEQUALS expressions
   70                       | • expressions RP_EQUALS expressions
   71                       | • expressions RP_NOTEQUALS expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    AP_HASHASSIGN  shift, and go to state 47
    DEL_LPAR       shift, and go to state 48

    expressions             go to state 109
    identifier_expressions  go to state 50
    arithmetic_expressions  go to state 51
    relational_expressions  go to state 52
    function_statement      go to state 53


State 78

   40 expressions: • identifier_expressions
   41            | • TK_STRING
   42            | • KW_TRUE
   43            | • KW_FALSE
   44            | • function_statement
   45            | • arithmetic_expressions
   46            | • relational_expressions
   47            | • KW_NOT expressions
   48            | • expressions KW_AND expressions
   49            | • expressions KW_OR expressions
   50            | • DEL_LPAR expressions DEL_RPAR
   51            | • expressions DEL_DOT expressions
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   56 arithmetic_expressions: • TK_INTEGER
   57                       | • TK_FLOAT
   58                       | • expressions OP_POWER expressions
   59                       | • expressions OP_MULT expressions
   60                       | • expressions OP_DIV expressions
   61                       | • expressions OP_MOD expressions
   61                       | expressions OP_MOD • expressions
   62                       | • expressions OP_PLUS expressions
   63                       | • expressions OP_MINUS expressions
   64                       | • OP_PLUS expressions
   65                       | • OP_MINUS expressions
   66 relational_expressions: • expressions RP_LESS expressions
   67                       | • expressions RP_LESSEQUALS expressions
   68                       | • expressions RP_MORE expressions
   69                       | • expressions RP_MOREEQUALS expressions
   70                       | • expressions RP_EQUALS expressions
   71                       | • expressions RP_NOTEQUALS expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    AP_HASHASSIGN  shift, and go to state 47
    DEL_LPAR       shift, and go to state 48

    expressions             go to state 110
    identifier_expressions  go to state 50
    arithmetic_expressions  go to state 51
    relational_expressions  go to state 52
    function_statement      go to state 53


State 79

   40 expressions: • identifier_expressions
   41            | • TK_STRING
   42            | • KW_TRUE
   43            | • KW_FALSE
   44            | • function_statement
   45            | • arithmetic_expressions
   46            | • relational_expressions
   47            | • KW_NOT expressions
   48            | • expressions KW_AND expressions
   49            | • expressions KW_OR expressions
   50            | • DEL_LPAR expressions DEL_RPAR
   51            | • expressions DEL_DOT expressions
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   56 arithmetic_expressions: • TK_INTEGER
   57                       | • TK_FLOAT
   58                       | • expressions OP_POWER expressions
   58                       | expressions OP_POWER • expressions
   59                       | • expressions OP_MULT expressions
   60                       | • expressions OP_DIV expressions
   61                       | • expressions OP_MOD expressions
   62                       | • expressions OP_PLUS expressions
   63                       | • expressions OP_MINUS expressions
   64                       | • OP_PLUS expressions
   65                       | • OP_MINUS expressions
   66 relational_expressions: • expressions RP_LESS expressions
   67                       | • expressions RP_LESSEQUALS expressions
   68                       | • expressions RP_MORE expressions
   69                       | • expressions RP_MOREEQUALS expressions
   70                       | • expressions RP_EQUALS expressions
   71                       | • expressions RP_NOTEQUALS expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    AP_HASHASSIGN  shift, and go to state 47
    DEL_LPAR       shift, and go to state 48

    expressions             go to state 111
    identifier_expressions  go to state 50
    arithmetic_expressions  go to state 51
    relational_expressions  go to state 52
    function_statement      go to state 53


State 80

   40 expressions: • identifier_expressions
   41            | • TK_STRING
   42            | • KW_TRUE
   43            | • KW_FALSE
   44            | • function_statement
   45            | • arithmetic_expressions
   46            | • relational_expressions
   47            | • KW_NOT expressions
   48            | • expressions KW_AND expressions
   49            | • expressions KW_OR expressions
   50            | • DEL_LPAR expressions DEL_RPAR
   51            | • expressions DEL_DOT expressions
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   56 arithmetic_expressions: • TK_INTEGER
   57                       | • TK_FLOAT
   58                       | • expressions OP_POWER expressions
   59                       | • expressions OP_MULT expressions
   60                       | • expressions OP_DIV expressions
   61                       | • expressions OP_MOD expressions
   62                       | • expressions OP_PLUS expressions
   63                       | • expressions OP_MINUS expressions
   64                       | • OP_PLUS expressions
   65                       | • OP_MINUS expressions
   66 relational_expressions: • expressions RP_LESS expressions
   67                       | • expressions RP_LESSEQUALS expressions
   68                       | • expressions RP_MORE expressions
   69                       | • expressions RP_MOREEQUALS expressions
   70                       | • expressions RP_EQUALS expressions
   70                       | expressions RP_EQUALS • expressions
   71                       | • expressions RP_NOTEQUALS expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    AP_HASHASSIGN  shift, and go to state 47
    DEL_LPAR       shift, and go to state 48

    expressions             go to state 112
    identifier_expressions  go to state 50
    arithmetic_expressions  go to state 51
    relational_expressions  go to state 52
    function_statement      go to state 53


State 81

   40 expressions: • identifier_expressions
   41            | • TK_STRING
   42            | • KW_TRUE
   43            | • KW_FALSE
   44            | • function_statement
   45            | • arithmetic_expressions
   46            | • relational_expressions
   47            | • KW_NOT expressions
   48            | • expressions KW_AND expressions
   49            | • expressions KW_OR expressions
   50            | • DEL_LPAR expressions DEL_RPAR
   51            | • expressions DEL_DOT expressions
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   56 arithmetic_expressions: • TK_INTEGER
   57                       | • TK_FLOAT
   58                       | • expressions OP_POWER expressions
   59                       | • expressions OP_MULT expressions
   60                       | • expressions OP_DIV expressions
   61                       | • expressions OP_MOD expressions
   62                       | • expressions OP_PLUS expressions
   63                       | • expressions OP_MINUS expressions
   64                       | • OP_PLUS expressions
   65                       | • OP_MINUS expressions
   66 relational_expressions: • expressions RP_LESS expressions
   67                       | • expressions RP_LESSEQUALS expressions
   68                       | • expressions RP_MORE expressions
   69                       | • expressions RP_MOREEQUALS expressions
   70                       | • expressions RP_EQUALS expressions
   71                       | • expressions RP_NOTEQUALS expressions
   71                       | expressions RP_NOTEQUALS • expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    AP_HASHASSIGN  shift, and go to state 47
    DEL_LPAR       shift, and go to state 48

    expressions             go to state 113
    identifier_expressions  go to state 50
    arithmetic_expressions  go to state 51
    relational_expressions  go to state 52
    function_statement      go to state 53


State 82

   40 expressions: • identifier_expressions
   41            | • TK_STRING
   42            | • KW_TRUE
   43            | • KW_FALSE
   44            | • function_statement
   45            | • arithmetic_expressions
   46            | • relational_expressions
   47            | • KW_NOT expressions
   48            | • expressions KW_AND expressions
   49            | • expressions KW_OR expressions
   50            | • DEL_LPAR expressions DEL_RPAR
   51            | • expressions DEL_DOT expressions
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   56 arithmetic_expressions: • TK_INTEGER
   57                       | • TK_FLOAT
   58                       | • expressions OP_POWER expressions
   59                       | • expressions OP_MULT expressions
   60                       | • expressions OP_DIV expressions
   61                       | • expressions OP_MOD expressions
   62                       | • expressions OP_PLUS expressions
   63                       | • expressions OP_MINUS expressions
   64                       | • OP_PLUS expressions
   65                       | • OP_MINUS expressions
   66 relational_expressions: • expressions RP_LESS expressions
   66                       | expressions RP_LESS • expressions
   67                       | • expressions RP_LESSEQUALS expressions
   68                       | • expressions RP_MORE expressions
   69                       | • expressions RP_MOREEQUALS expressions
   70                       | • expressions RP_EQUALS expressions
   71                       | • expressions RP_NOTEQUALS expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    AP_HASHASSIGN  shift, and go to state 47
    DEL_LPAR       shift, and go to state 48

    expressions             go to state 114
    identifier_expressions  go to state 50
    arithmetic_expressions  go to state 51
    relational_expressions  go to state 52
    function_statement      go to state 53


State 83

   40 expressions: • identifier_expressions
   41            | • TK_STRING
   42            | • KW_TRUE
   43            | • KW_FALSE
   44            | • function_statement
   45            | • arithmetic_expressions
   46            | • relational_expressions
   47            | • KW_NOT expressions
   48            | • expressions KW_AND expressions
   49            | • expressions KW_OR expressions
   50            | • DEL_LPAR expressions DEL_RPAR
   51            | • expressions DEL_DOT expressions
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   56 arithmetic_expressions: • TK_INTEGER
   57                       | • TK_FLOAT
   58                       | • expressions OP_POWER expressions
   59                       | • expressions OP_MULT expressions
   60                       | • expressions OP_DIV expressions
   61                       | • expressions OP_MOD expressions
   62                       | • expressions OP_PLUS expressions
   63                       | • expressions OP_MINUS expressions
   64                       | • OP_PLUS expressions
   65                       | • OP_MINUS expressions
   66 relational_expressions: • expressions RP_LESS expressions
   67                       | • expressions RP_LESSEQUALS expressions
   67                       | expressions RP_LESSEQUALS • expressions
   68                       | • expressions RP_MORE expressions
   69                       | • expressions RP_MOREEQUALS expressions
   70                       | • expressions RP_EQUALS expressions
   71                       | • expressions RP_NOTEQUALS expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    AP_HASHASSIGN  shift, and go to state 47
    DEL_LPAR       shift, and go to state 48

    expressions             go to state 115
    identifier_expressions  go to state 50
    arithmetic_expressions  go to state 51
    relational_expressions  go to state 52
    function_statement      go to state 53


State 84

   40 expressions: • identifier_expressions
   41            | • TK_STRING
   42            | • KW_TRUE
   43            | • KW_FALSE
   44            | • function_statement
   45            | • arithmetic_expressions
   46            | • relational_expressions
   47            | • KW_NOT expressions
   48            | • expressions KW_AND expressions
   49            | • expressions KW_OR expressions
   50            | • DEL_LPAR expressions DEL_RPAR
   51            | • expressions DEL_DOT expressions
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   56 arithmetic_expressions: • TK_INTEGER
   57                       | • TK_FLOAT
   58                       | • expressions OP_POWER expressions
   59                       | • expressions OP_MULT expressions
   60                       | • expressions OP_DIV expressions
   61                       | • expressions OP_MOD expressions
   62                       | • expressions OP_PLUS expressions
   63                       | • expressions OP_MINUS expressions
   64                       | • OP_PLUS expressions
   65                       | • OP_MINUS expressions
   66 relational_expressions: • expressions RP_LESS expressions
   67                       | • expressions RP_LESSEQUALS expressions
   68                       | • expressions RP_MORE expressions
   68                       | expressions RP_MORE • expressions
   69                       | • expressions RP_MOREEQUALS expressions
   70                       | • expressions RP_EQUALS expressions
   71                       | • expressions RP_NOTEQUALS expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    AP_HASHASSIGN  shift, and go to state 47
    DEL_LPAR       shift, and go to state 48

    expressions             go to state 116
    identifier_expressions  go to state 50
    arithmetic_expressions  go to state 51
    relational_expressions  go to state 52
    function_statement      go to state 53


State 85

   40 expressions: • identifier_expressions
   41            | • TK_STRING
   42            | • KW_TRUE
   43            | • KW_FALSE
   44            | • function_statement
   45            | • arithmetic_expressions
   46            | • relational_expressions
   47            | • KW_NOT expressions
   48            | • expressions KW_AND expressions
   49            | • expressions KW_OR expressions
   50            | • DEL_LPAR expressions DEL_RPAR
   51            | • expressions DEL_DOT expressions
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   56 arithmetic_expressions: • TK_INTEGER
   57                       | • TK_FLOAT
   58                       | • expressions OP_POWER expressions
   59                       | • expressions OP_MULT expressions
   60                       | • expressions OP_DIV expressions
   61                       | • expressions OP_MOD expressions
   62                       | • expressions OP_PLUS expressions
   63                       | • expressions OP_MINUS expressions
   64                       | • OP_PLUS expressions
   65                       | • OP_MINUS expressions
   66 relational_expressions: • expressions RP_LESS expressions
   67                       | • expressions RP_LESSEQUALS expressions
   68                       | • expressions RP_MORE expressions
   69                       | • expressions RP_MOREEQUALS expressions
   69                       | expressions RP_MOREEQUALS • expressions
   70                       | • expressions RP_EQUALS expressions
   71                       | • expressions RP_NOTEQUALS expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    AP_HASHASSIGN  shift, and go to state 47
    DEL_LPAR       shift, and go to state 48

    expressions             go to state 117
    identifier_expressions  go to state 50
    arithmetic_expressions  go to state 51
    relational_expressions  go to state 52
    function_statement      go to state 53


State 86

    5 types: • DEL_LBLOCK DEL_RBLOCK basic_types
    6      | • basic_types
    7 basic_types: • KW_INT
    8            | • KW_BOOLEAN
    9            | • KW_SCALAR
   10            | • KW_STR
   22 constant_declarations: KW_CONST identifiers AP_ASSIGN expressions DEL_COLON • types DEL_SMCOLON

    KW_INT      shift, and go to state 32
    KW_SCALAR   shift, and go to state 33
    KW_STR      shift, and go to state 34
    KW_BOOLEAN  shift, and go to state 35
    DEL_LBLOCK  shift, and go to state 118

    types        go to state 119
    basic_types  go to state 120


State 87

   40 expressions: • identifier_expressions
   41            | • TK_STRING
   42            | • KW_TRUE
   43            | • KW_FALSE
   44            | • function_statement
   45            | • arithmetic_expressions
   46            | • relational_expressions
   47            | • KW_NOT expressions
   48            | • expressions KW_AND expressions
   49            | • expressions KW_OR expressions
   50            | • DEL_LPAR expressions DEL_RPAR
   51            | • expressions DEL_DOT expressions
   51            | expressions DEL_DOT • expressions
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   56 arithmetic_expressions: • TK_INTEGER
   57                       | • TK_FLOAT
   58                       | • expressions OP_POWER expressions
   59                       | • expressions OP_MULT expressions
   60                       | • expressions OP_DIV expressions
   61                       | • expressions OP_MOD expressions
   62                       | • expressions OP_PLUS expressions
   63                       | • expressions OP_MINUS expressions
   64                       | • OP_PLUS expressions
   65                       | • OP_MINUS expressions
   66 relational_expressions: • expressions RP_LESS expressions
   67                       | • expressions RP_LESSEQUALS expressions
   68                       | • expressions RP_MORE expressions
   69                       | • expressions RP_MOREEQUALS expressions
   70                       | • expressions RP_EQUALS expressions
   71                       | • expressions RP_NOTEQUALS expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    AP_HASHASSIGN  shift, and go to state 47
    DEL_LPAR       shift, and go to state 48

    expressions             go to state 121
    identifier_expressions  go to state 50
    arithmetic_expressions  go to state 51
    relational_expressions  go to state 52
    function_statement      go to state 53


State 88

   27 parameter_declarations: TK_IDENTIFIER DEL_LBLOCK • DEL_RBLOCK DEL_COLON types
   28                       | TK_IDENTIFIER DEL_LBLOCK • DEL_RBLOCK DEL_COLON types DEL_COMMA parameter_declarations

    DEL_RBLOCK  shift, and go to state 122


State 89

    5 types: • DEL_LBLOCK DEL_RBLOCK basic_types
    6      | • basic_types
    7 basic_types: • KW_INT
    8            | • KW_BOOLEAN
    9            | • KW_SCALAR
   10            | • KW_STR
   26 parameter_declarations: TK_IDENTIFIER DEL_COLON • types
   29                       | TK_IDENTIFIER DEL_COLON • types DEL_COMMA parameter_declarations

    KW_INT      shift, and go to state 32
    KW_SCALAR   shift, and go to state 33
    KW_STR      shift, and go to state 34
    KW_BOOLEAN  shift, and go to state 35
    DEL_LBLOCK  shift, and go to state 118

    types        go to state 123
    basic_types  go to state 120


State 90

   23 functions: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR • DEL_COLON body KW_ENDDEF DEL_SMCOLON
   24          | KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR • AP_ARROWASSIGN types DEL_COLON body KW_ENDDEF DEL_SMCOLON

    AP_ARROWASSIGN  shift, and go to state 124
    DEL_COLON       shift, and go to state 125


State 91

    4 main: KW_DEF KW_MAIN DEL_LPAR DEL_RPAR DEL_COLON • body KW_ENDDEF DEL_SMCOLON
   11 identifiers: • TK_IDENTIFIER
   12            | • identifiers DEL_COMMA TK_IDENTIFIER
   19 variable_declarations: • identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK DEL_COLON basic_types DEL_SMCOLON
   21 comp_variables: • identifiers DEL_COLON TK_IDENTIFIER DEL_SMCOLON
   22 constant_declarations: • KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   72 assign_expressions: • identifier_expressions AP_ASSIGN expressions
   73                   | • identifier_expressions AP_PLUSASSIGN expressions
   74                   | • identifier_expressions AP_MINASSIGN expressions
   75                   | • identifier_expressions AP_MULASSIGN expressions
   76                   | • identifier_expressions AP_DIVASSIGN expressions
   77                   | • identifier_expressions AP_MODASSIGN expressions
   78 statements: • if_statement DEL_SMCOLON
   79           | • for_statement DEL_SMCOLON
   80           | • array_statement DEL_SMCOLON
   81           | • while_statement DEL_SMCOLON
   82           | • KW_BREAK DEL_SMCOLON
   83           | • KW_CONTINUE DEL_SMCOLON
   84           | • assign_expressions DEL_SMCOLON
   85           | • return_statement DEL_SMCOLON
   86           | • function_statement DEL_SMCOLON
   93 if_statement: • KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   94             | • KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE DEL_COLON command_statements KW_ENDIF
   95 for_statement: • KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   96              | • KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   97 array_statement: • integral_array
   98                | • other_array
   99 integral_array: • TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
  100 other_array: • TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON types KW_IN TK_IDENTIFIER KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types
  101 while_statement: • KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE
  102 return_statement: • KW_RETURN
  103                 | • KW_RETURN expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR
  108 body: • statements
  109     | • variable_declarations
  110     | • constant_declarations
  111     | • comp_variables
  112     | • body statements
  113     | • body variable_declarations
  114     | • body constant_declarations
  115     | • body comp_variables

    TK_IDENTIFIER  shift, and go to state 126
    KW_CONST       shift, and go to state 2
    KW_IF          shift, and go to state 127
    KW_FOR         shift, and go to state 128
    KW_WHILE       shift, and go to state 129
    KW_BREAK       shift, and go to state 130
    KW_CONTINUE    shift, and go to state 131
    KW_RETURN      shift, and go to state 132
    AP_HASHASSIGN  shift, and go to state 47

    identifiers             go to state 133
    variable_declarations   go to state 134
    comp_variables          go to state 135
    constant_declarations   go to state 136
    identifier_expressions  go to state 137
    assign_expressions      go to state 138
    statements              go to state 139
    if_statement            go to state 140
    for_statement           go to state 141
    array_statement         go to state 142
    integral_array          go to state 143
    other_array             go to state 144
    while_statement         go to state 145
    return_statement        go to state 146
    function_statement      go to state 147
    body                    go to state 148


State 92

   38 comp_functions: KW_DEF TK_IDENTIFIER • DEL_LPAR parameter_declarations DEL_RPAR DEL_COLON body KW_ENDDEF DEL_SMCOLON
   39               | KW_DEF TK_IDENTIFIER • DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN types DEL_COLON body KW_ENDDEF DEL_SMCOLON

    DEL_LPAR  shift, and go to state 149


State 93

   36 comp_identifiers: AP_HASHASSIGN TK_IDENTIFIER •  [DEL_COLON]
   37                 | AP_HASHASSIGN TK_IDENTIFIER • DEL_COMMA comp_identifiers

    DEL_COMMA  shift, and go to state 150

    $default  reduce using rule 36 (comp_identifiers)


State 94

   30 complex_type_declarations: KW_COMP TK_IDENTIFIER DEL_COLON comp_body KW_ENDCOMP • DEL_SMCOLON

    DEL_SMCOLON  shift, and go to state 151


State 95

   32 comp_body: comp_variable_declarations comp_body •

    $default  reduce using rule 32 (comp_body)


State 96

    5 types: • DEL_LBLOCK DEL_RBLOCK basic_types
    6      | • basic_types
    7 basic_types: • KW_INT
    8            | • KW_BOOLEAN
    9            | • KW_SCALAR
   10            | • KW_STR
   35 comp_variable_declarations: comp_identifiers DEL_COLON • types DEL_SMCOLON

    KW_INT      shift, and go to state 32
    KW_SCALAR   shift, and go to state 33
    KW_STR      shift, and go to state 34
    KW_BOOLEAN  shift, and go to state 35
    DEL_LBLOCK  shift, and go to state 118

    types        go to state 152
    basic_types  go to state 120


State 97

   34 comp_body: comp_functions comp_body •

    $default  reduce using rule 34 (comp_body)


State 98

   20 variable_declarations: TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK DEL_COLON basic_types • DEL_SMCOLON

    DEL_SMCOLON  shift, and go to state 153


State 99

   48 expressions: expressions • KW_AND expressions
   49            | expressions • KW_OR expressions
   51            | expressions • DEL_DOT expressions
   58 arithmetic_expressions: expressions • OP_POWER expressions
   59                       | expressions • OP_MULT expressions
   60                       | expressions • OP_DIV expressions
   61                       | expressions • OP_MOD expressions
   62                       | expressions • OP_PLUS expressions
   63                       | expressions • OP_MINUS expressions
   66 relational_expressions: expressions • RP_LESS expressions
   67                       | expressions • RP_LESSEQUALS expressions
   68                       | expressions • RP_MORE expressions
   69                       | expressions • RP_MOREEQUALS expressions
   70                       | expressions • RP_EQUALS expressions
   71                       | expressions • RP_NOTEQUALS expressions
  106 function_arg: expressions •  [DEL_RPAR, DEL_COMMA]

    KW_AND         shift, and go to state 72
    KW_OR          shift, and go to state 73
    OP_PLUS        shift, and go to state 74
    OP_MINUS       shift, and go to state 75
    OP_MULT        shift, and go to state 76
    OP_DIV         shift, and go to state 77
    OP_MOD         shift, and go to state 78
    OP_POWER       shift, and go to state 79
    RP_EQUALS      shift, and go to state 80
    RP_NOTEQUALS   shift, and go to state 81
    RP_LESS        shift, and go to state 82
    RP_LESSEQUALS  shift, and go to state 83
    RP_MORE        shift, and go to state 84
    RP_MOREEQUALS  shift, and go to state 85
    DEL_DOT        shift, and go to state 87

    $default  reduce using rule 106 (function_arg)


State 100

  104 function_statement: TK_IDENTIFIER DEL_LPAR function_arg • DEL_RPAR
  107 function_arg: function_arg • DEL_COMMA expressions

    DEL_RPAR   shift, and go to state 154
    DEL_COMMA  shift, and go to state 155


State 101

   55 identifier_expressions: TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER • DEL_RBLOCK

    DEL_RBLOCK  shift, and go to state 156


State 102

   54 identifier_expressions: TK_IDENTIFIER DEL_LBLOCK TK_INTEGER • DEL_RBLOCK

    DEL_RBLOCK  shift, and go to state 157


State 103

   50 expressions: DEL_LPAR expressions DEL_RPAR •

    $default  reduce using rule 50 (expressions)


State 104

   48 expressions: expressions • KW_AND expressions
   48            | expressions KW_AND expressions •  [KW_FOR, KW_AND, DEL_SMCOLON, DEL_RPAR, DEL_COMMA, DEL_RBLOCK, DEL_COLON]
   49            | expressions • KW_OR expressions
   51            | expressions • DEL_DOT expressions
   58 arithmetic_expressions: expressions • OP_POWER expressions
   59                       | expressions • OP_MULT expressions
   60                       | expressions • OP_DIV expressions
   61                       | expressions • OP_MOD expressions
   62                       | expressions • OP_PLUS expressions
   63                       | expressions • OP_MINUS expressions
   66 relational_expressions: expressions • RP_LESS expressions
   67                       | expressions • RP_LESSEQUALS expressions
   68                       | expressions • RP_MORE expressions
   69                       | expressions • RP_MOREEQUALS expressions
   70                       | expressions • RP_EQUALS expressions
   71                       | expressions • RP_NOTEQUALS expressions

    KW_OR          shift, and go to state 73
    OP_PLUS        shift, and go to state 74
    OP_MINUS       shift, and go to state 75
    OP_MULT        shift, and go to state 76
    OP_DIV         shift, and go to state 77
    OP_MOD         shift, and go to state 78
    OP_POWER       shift, and go to state 79
    RP_EQUALS      shift, and go to state 80
    RP_NOTEQUALS   shift, and go to state 81
    RP_LESS        shift, and go to state 82
    RP_LESSEQUALS  shift, and go to state 83
    RP_MORE        shift, and go to state 84
    RP_MOREEQUALS  shift, and go to state 85
    DEL_DOT        shift, and go to state 87

    $default  reduce using rule 48 (expressions)

    Conflict between rule 48 and token KW_AND resolved as reduce (%left KW_AND).
    Conflict between rule 48 and token KW_OR resolved as shift (KW_AND < KW_OR).
    Conflict between rule 48 and token OP_PLUS resolved as shift (KW_AND < OP_PLUS).
    Conflict between rule 48 and token OP_MINUS resolved as shift (KW_AND < OP_MINUS).
    Conflict between rule 48 and token OP_MULT resolved as shift (KW_AND < OP_MULT).
    Conflict between rule 48 and token OP_DIV resolved as shift (KW_AND < OP_DIV).
    Conflict between rule 48 and token OP_MOD resolved as shift (KW_AND < OP_MOD).
    Conflict between rule 48 and token OP_POWER resolved as shift (KW_AND < OP_POWER).
    Conflict between rule 48 and token RP_EQUALS resolved as shift (KW_AND < RP_EQUALS).
    Conflict between rule 48 and token RP_NOTEQUALS resolved as shift (KW_AND < RP_NOTEQUALS).
    Conflict between rule 48 and token RP_LESS resolved as shift (KW_AND < RP_LESS).
    Conflict between rule 48 and token RP_LESSEQUALS resolved as shift (KW_AND < RP_LESSEQUALS).
    Conflict between rule 48 and token RP_MORE resolved as shift (KW_AND < RP_MORE).
    Conflict between rule 48 and token RP_MOREEQUALS resolved as shift (KW_AND < RP_MOREEQUALS).
    Conflict between rule 48 and token DEL_DOT resolved as shift (KW_AND < DEL_DOT).


State 105

   48 expressions: expressions • KW_AND expressions
   49            | expressions • KW_OR expressions
   49            | expressions KW_OR expressions •  [KW_FOR, KW_AND, KW_OR, DEL_SMCOLON, DEL_RPAR, DEL_COMMA, DEL_RBLOCK, DEL_COLON]
   51            | expressions • DEL_DOT expressions
   58 arithmetic_expressions: expressions • OP_POWER expressions
   59                       | expressions • OP_MULT expressions
   60                       | expressions • OP_DIV expressions
   61                       | expressions • OP_MOD expressions
   62                       | expressions • OP_PLUS expressions
   63                       | expressions • OP_MINUS expressions
   66 relational_expressions: expressions • RP_LESS expressions
   67                       | expressions • RP_LESSEQUALS expressions
   68                       | expressions • RP_MORE expressions
   69                       | expressions • RP_MOREEQUALS expressions
   70                       | expressions • RP_EQUALS expressions
   71                       | expressions • RP_NOTEQUALS expressions

    OP_PLUS        shift, and go to state 74
    OP_MINUS       shift, and go to state 75
    OP_MULT        shift, and go to state 76
    OP_DIV         shift, and go to state 77
    OP_MOD         shift, and go to state 78
    OP_POWER       shift, and go to state 79
    RP_EQUALS      shift, and go to state 80
    RP_NOTEQUALS   shift, and go to state 81
    RP_LESS        shift, and go to state 82
    RP_LESSEQUALS  shift, and go to state 83
    RP_MORE        shift, and go to state 84
    RP_MOREEQUALS  shift, and go to state 85
    DEL_DOT        shift, and go to state 87

    $default  reduce using rule 49 (expressions)

    Conflict between rule 49 and token KW_AND resolved as reduce (KW_AND < KW_OR).
    Conflict between rule 49 and token KW_OR resolved as reduce (%left KW_OR).
    Conflict between rule 49 and token OP_PLUS resolved as shift (KW_OR < OP_PLUS).
    Conflict between rule 49 and token OP_MINUS resolved as shift (KW_OR < OP_MINUS).
    Conflict between rule 49 and token OP_MULT resolved as shift (KW_OR < OP_MULT).
    Conflict between rule 49 and token OP_DIV resolved as shift (KW_OR < OP_DIV).
    Conflict between rule 49 and token OP_MOD resolved as shift (KW_OR < OP_MOD).
    Conflict between rule 49 and token OP_POWER resolved as shift (KW_OR < OP_POWER).
    Conflict between rule 49 and token RP_EQUALS resolved as shift (KW_OR < RP_EQUALS).
    Conflict between rule 49 and token RP_NOTEQUALS resolved as shift (KW_OR < RP_NOTEQUALS).
    Conflict between rule 49 and token RP_LESS resolved as shift (KW_OR < RP_LESS).
    Conflict between rule 49 and token RP_LESSEQUALS resolved as shift (KW_OR < RP_LESSEQUALS).
    Conflict between rule 49 and token RP_MORE resolved as shift (KW_OR < RP_MORE).
    Conflict between rule 49 and token RP_MOREEQUALS resolved as shift (KW_OR < RP_MOREEQUALS).
    Conflict between rule 49 and token DEL_DOT resolved as shift (KW_OR < DEL_DOT).


State 106

   48 expressions: expressions • KW_AND expressions
   49            | expressions • KW_OR expressions
   51            | expressions • DEL_DOT expressions
   58 arithmetic_expressions: expressions • OP_POWER expressions
   59                       | expressions • OP_MULT expressions
   60                       | expressions • OP_DIV expressions
   61                       | expressions • OP_MOD expressions
   62                       | expressions • OP_PLUS expressions
   62                       | expressions OP_PLUS expressions •  [KW_FOR, KW_AND, KW_OR, OP_PLUS, DEL_SMCOLON, DEL_RPAR, DEL_COMMA, DEL_RBLOCK, DEL_COLON]
   63                       | expressions • OP_MINUS expressions
   66 relational_expressions: expressions • RP_LESS expressions
   67                       | expressions • RP_LESSEQUALS expressions
   68                       | expressions • RP_MORE expressions
   69                       | expressions • RP_MOREEQUALS expressions
   70                       | expressions • RP_EQUALS expressions
   71                       | expressions • RP_NOTEQUALS expressions

    OP_MINUS       shift, and go to state 75
    OP_MULT        shift, and go to state 76
    OP_DIV         shift, and go to state 77
    OP_MOD         shift, and go to state 78
    OP_POWER       shift, and go to state 79
    RP_EQUALS      shift, and go to state 80
    RP_NOTEQUALS   shift, and go to state 81
    RP_LESS        shift, and go to state 82
    RP_LESSEQUALS  shift, and go to state 83
    RP_MORE        shift, and go to state 84
    RP_MOREEQUALS  shift, and go to state 85
    DEL_DOT        shift, and go to state 87

    $default  reduce using rule 62 (arithmetic_expressions)

    Conflict between rule 62 and token KW_AND resolved as reduce (KW_AND < OP_PLUS).
    Conflict between rule 62 and token KW_OR resolved as reduce (KW_OR < OP_PLUS).
    Conflict between rule 62 and token OP_PLUS resolved as reduce (%left OP_PLUS).
    Conflict between rule 62 and token OP_MINUS resolved as shift (OP_PLUS < OP_MINUS).
    Conflict between rule 62 and token OP_MULT resolved as shift (OP_PLUS < OP_MULT).
    Conflict between rule 62 and token OP_DIV resolved as shift (OP_PLUS < OP_DIV).
    Conflict between rule 62 and token OP_MOD resolved as shift (OP_PLUS < OP_MOD).
    Conflict between rule 62 and token OP_POWER resolved as shift (OP_PLUS < OP_POWER).
    Conflict between rule 62 and token RP_EQUALS resolved as shift (OP_PLUS < RP_EQUALS).
    Conflict between rule 62 and token RP_NOTEQUALS resolved as shift (OP_PLUS < RP_NOTEQUALS).
    Conflict between rule 62 and token RP_LESS resolved as shift (OP_PLUS < RP_LESS).
    Conflict between rule 62 and token RP_LESSEQUALS resolved as shift (OP_PLUS < RP_LESSEQUALS).
    Conflict between rule 62 and token RP_MORE resolved as shift (OP_PLUS < RP_MORE).
    Conflict between rule 62 and token RP_MOREEQUALS resolved as shift (OP_PLUS < RP_MOREEQUALS).
    Conflict between rule 62 and token DEL_DOT resolved as shift (OP_PLUS < DEL_DOT).


State 107

   48 expressions: expressions • KW_AND expressions
   49            | expressions • KW_OR expressions
   51            | expressions • DEL_DOT expressions
   58 arithmetic_expressions: expressions • OP_POWER expressions
   59                       | expressions • OP_MULT expressions
   60                       | expressions • OP_DIV expressions
   61                       | expressions • OP_MOD expressions
   62                       | expressions • OP_PLUS expressions
   63                       | expressions • OP_MINUS expressions
   63                       | expressions OP_MINUS expressions •  [KW_FOR, KW_AND, KW_OR, OP_PLUS, OP_MINUS, DEL_SMCOLON, DEL_RPAR, DEL_COMMA, DEL_RBLOCK, DEL_COLON]
   66 relational_expressions: expressions • RP_LESS expressions
   67                       | expressions • RP_LESSEQUALS expressions
   68                       | expressions • RP_MORE expressions
   69                       | expressions • RP_MOREEQUALS expressions
   70                       | expressions • RP_EQUALS expressions
   71                       | expressions • RP_NOTEQUALS expressions

    OP_MULT        shift, and go to state 76
    OP_DIV         shift, and go to state 77
    OP_MOD         shift, and go to state 78
    OP_POWER       shift, and go to state 79
    RP_EQUALS      shift, and go to state 80
    RP_NOTEQUALS   shift, and go to state 81
    RP_LESS        shift, and go to state 82
    RP_LESSEQUALS  shift, and go to state 83
    RP_MORE        shift, and go to state 84
    RP_MOREEQUALS  shift, and go to state 85
    DEL_DOT        shift, and go to state 87

    $default  reduce using rule 63 (arithmetic_expressions)

    Conflict between rule 63 and token KW_AND resolved as reduce (KW_AND < OP_MINUS).
    Conflict between rule 63 and token KW_OR resolved as reduce (KW_OR < OP_MINUS).
    Conflict between rule 63 and token OP_PLUS resolved as reduce (OP_PLUS < OP_MINUS).
    Conflict between rule 63 and token OP_MINUS resolved as reduce (%left OP_MINUS).
    Conflict between rule 63 and token OP_MULT resolved as shift (OP_MINUS < OP_MULT).
    Conflict between rule 63 and token OP_DIV resolved as shift (OP_MINUS < OP_DIV).
    Conflict between rule 63 and token OP_MOD resolved as shift (OP_MINUS < OP_MOD).
    Conflict between rule 63 and token OP_POWER resolved as shift (OP_MINUS < OP_POWER).
    Conflict between rule 63 and token RP_EQUALS resolved as shift (OP_MINUS < RP_EQUALS).
    Conflict between rule 63 and token RP_NOTEQUALS resolved as shift (OP_MINUS < RP_NOTEQUALS).
    Conflict between rule 63 and token RP_LESS resolved as shift (OP_MINUS < RP_LESS).
    Conflict between rule 63 and token RP_LESSEQUALS resolved as shift (OP_MINUS < RP_LESSEQUALS).
    Conflict between rule 63 and token RP_MORE resolved as shift (OP_MINUS < RP_MORE).
    Conflict between rule 63 and token RP_MOREEQUALS resolved as shift (OP_MINUS < RP_MOREEQUALS).
    Conflict between rule 63 and token DEL_DOT resolved as shift (OP_MINUS < DEL_DOT).


State 108

   48 expressions: expressions • KW_AND expressions
   49            | expressions • KW_OR expressions
   51            | expressions • DEL_DOT expressions
   58 arithmetic_expressions: expressions • OP_POWER expressions
   59                       | expressions • OP_MULT expressions
   59                       | expressions OP_MULT expressions •  [KW_FOR, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MULT, DEL_SMCOLON, DEL_RPAR, DEL_COMMA, DEL_RBLOCK, DEL_COLON]
   60                       | expressions • OP_DIV expressions
   61                       | expressions • OP_MOD expressions
   62                       | expressions • OP_PLUS expressions
   63                       | expressions • OP_MINUS expressions
   66 relational_expressions: expressions • RP_LESS expressions
   67                       | expressions • RP_LESSEQUALS expressions
   68                       | expressions • RP_MORE expressions
   69                       | expressions • RP_MOREEQUALS expressions
   70                       | expressions • RP_EQUALS expressions
   71                       | expressions • RP_NOTEQUALS expressions

    OP_DIV         shift, and go to state 77
    OP_MOD         shift, and go to state 78
    OP_POWER       shift, and go to state 79
    RP_EQUALS      shift, and go to state 80
    RP_NOTEQUALS   shift, and go to state 81
    RP_LESS        shift, and go to state 82
    RP_LESSEQUALS  shift, and go to state 83
    RP_MORE        shift, and go to state 84
    RP_MOREEQUALS  shift, and go to state 85
    DEL_DOT        shift, and go to state 87

    $default  reduce using rule 59 (arithmetic_expressions)

    Conflict between rule 59 and token KW_AND resolved as reduce (KW_AND < OP_MULT).
    Conflict between rule 59 and token KW_OR resolved as reduce (KW_OR < OP_MULT).
    Conflict between rule 59 and token OP_PLUS resolved as reduce (OP_PLUS < OP_MULT).
    Conflict between rule 59 and token OP_MINUS resolved as reduce (OP_MINUS < OP_MULT).
    Conflict between rule 59 and token OP_MULT resolved as reduce (%left OP_MULT).
    Conflict between rule 59 and token OP_DIV resolved as shift (OP_MULT < OP_DIV).
    Conflict between rule 59 and token OP_MOD resolved as shift (OP_MULT < OP_MOD).
    Conflict between rule 59 and token OP_POWER resolved as shift (OP_MULT < OP_POWER).
    Conflict between rule 59 and token RP_EQUALS resolved as shift (OP_MULT < RP_EQUALS).
    Conflict between rule 59 and token RP_NOTEQUALS resolved as shift (OP_MULT < RP_NOTEQUALS).
    Conflict between rule 59 and token RP_LESS resolved as shift (OP_MULT < RP_LESS).
    Conflict between rule 59 and token RP_LESSEQUALS resolved as shift (OP_MULT < RP_LESSEQUALS).
    Conflict between rule 59 and token RP_MORE resolved as shift (OP_MULT < RP_MORE).
    Conflict between rule 59 and token RP_MOREEQUALS resolved as shift (OP_MULT < RP_MOREEQUALS).
    Conflict between rule 59 and token DEL_DOT resolved as shift (OP_MULT < DEL_DOT).


State 109

   48 expressions: expressions • KW_AND expressions
   49            | expressions • KW_OR expressions
   51            | expressions • DEL_DOT expressions
   58 arithmetic_expressions: expressions • OP_POWER expressions
   59                       | expressions • OP_MULT expressions
   60                       | expressions • OP_DIV expressions
   60                       | expressions OP_DIV expressions •  [KW_FOR, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, DEL_SMCOLON, DEL_RPAR, DEL_COMMA, DEL_RBLOCK, DEL_COLON]
   61                       | expressions • OP_MOD expressions
   62                       | expressions • OP_PLUS expressions
   63                       | expressions • OP_MINUS expressions
   66 relational_expressions: expressions • RP_LESS expressions
   67                       | expressions • RP_LESSEQUALS expressions
   68                       | expressions • RP_MORE expressions
   69                       | expressions • RP_MOREEQUALS expressions
   70                       | expressions • RP_EQUALS expressions
   71                       | expressions • RP_NOTEQUALS expressions

    OP_MOD         shift, and go to state 78
    OP_POWER       shift, and go to state 79
    RP_EQUALS      shift, and go to state 80
    RP_NOTEQUALS   shift, and go to state 81
    RP_LESS        shift, and go to state 82
    RP_LESSEQUALS  shift, and go to state 83
    RP_MORE        shift, and go to state 84
    RP_MOREEQUALS  shift, and go to state 85
    DEL_DOT        shift, and go to state 87

    $default  reduce using rule 60 (arithmetic_expressions)

    Conflict between rule 60 and token KW_AND resolved as reduce (KW_AND < OP_DIV).
    Conflict between rule 60 and token KW_OR resolved as reduce (KW_OR < OP_DIV).
    Conflict between rule 60 and token OP_PLUS resolved as reduce (OP_PLUS < OP_DIV).
    Conflict between rule 60 and token OP_MINUS resolved as reduce (OP_MINUS < OP_DIV).
    Conflict between rule 60 and token OP_MULT resolved as reduce (OP_MULT < OP_DIV).
    Conflict between rule 60 and token OP_DIV resolved as reduce (%left OP_DIV).
    Conflict between rule 60 and token OP_MOD resolved as shift (OP_DIV < OP_MOD).
    Conflict between rule 60 and token OP_POWER resolved as shift (OP_DIV < OP_POWER).
    Conflict between rule 60 and token RP_EQUALS resolved as shift (OP_DIV < RP_EQUALS).
    Conflict between rule 60 and token RP_NOTEQUALS resolved as shift (OP_DIV < RP_NOTEQUALS).
    Conflict between rule 60 and token RP_LESS resolved as shift (OP_DIV < RP_LESS).
    Conflict between rule 60 and token RP_LESSEQUALS resolved as shift (OP_DIV < RP_LESSEQUALS).
    Conflict between rule 60 and token RP_MORE resolved as shift (OP_DIV < RP_MORE).
    Conflict between rule 60 and token RP_MOREEQUALS resolved as shift (OP_DIV < RP_MOREEQUALS).
    Conflict between rule 60 and token DEL_DOT resolved as shift (OP_DIV < DEL_DOT).


State 110

   48 expressions: expressions • KW_AND expressions
   49            | expressions • KW_OR expressions
   51            | expressions • DEL_DOT expressions
   58 arithmetic_expressions: expressions • OP_POWER expressions
   59                       | expressions • OP_MULT expressions
   60                       | expressions • OP_DIV expressions
   61                       | expressions • OP_MOD expressions
   61                       | expressions OP_MOD expressions •  [KW_FOR, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, DEL_SMCOLON, DEL_RPAR, DEL_COMMA, DEL_RBLOCK, DEL_COLON]
   62                       | expressions • OP_PLUS expressions
   63                       | expressions • OP_MINUS expressions
   66 relational_expressions: expressions • RP_LESS expressions
   67                       | expressions • RP_LESSEQUALS expressions
   68                       | expressions • RP_MORE expressions
   69                       | expressions • RP_MOREEQUALS expressions
   70                       | expressions • RP_EQUALS expressions
   71                       | expressions • RP_NOTEQUALS expressions

    OP_POWER       shift, and go to state 79
    RP_EQUALS      shift, and go to state 80
    RP_NOTEQUALS   shift, and go to state 81
    RP_LESS        shift, and go to state 82
    RP_LESSEQUALS  shift, and go to state 83
    RP_MORE        shift, and go to state 84
    RP_MOREEQUALS  shift, and go to state 85
    DEL_DOT        shift, and go to state 87

    $default  reduce using rule 61 (arithmetic_expressions)

    Conflict between rule 61 and token KW_AND resolved as reduce (KW_AND < OP_MOD).
    Conflict between rule 61 and token KW_OR resolved as reduce (KW_OR < OP_MOD).
    Conflict between rule 61 and token OP_PLUS resolved as reduce (OP_PLUS < OP_MOD).
    Conflict between rule 61 and token OP_MINUS resolved as reduce (OP_MINUS < OP_MOD).
    Conflict between rule 61 and token OP_MULT resolved as reduce (OP_MULT < OP_MOD).
    Conflict between rule 61 and token OP_DIV resolved as reduce (OP_DIV < OP_MOD).
    Conflict between rule 61 and token OP_MOD resolved as reduce (%left OP_MOD).
    Conflict between rule 61 and token OP_POWER resolved as shift (OP_MOD < OP_POWER).
    Conflict between rule 61 and token RP_EQUALS resolved as shift (OP_MOD < RP_EQUALS).
    Conflict between rule 61 and token RP_NOTEQUALS resolved as shift (OP_MOD < RP_NOTEQUALS).
    Conflict between rule 61 and token RP_LESS resolved as shift (OP_MOD < RP_LESS).
    Conflict between rule 61 and token RP_LESSEQUALS resolved as shift (OP_MOD < RP_LESSEQUALS).
    Conflict between rule 61 and token RP_MORE resolved as shift (OP_MOD < RP_MORE).
    Conflict between rule 61 and token RP_MOREEQUALS resolved as shift (OP_MOD < RP_MOREEQUALS).
    Conflict between rule 61 and token DEL_DOT resolved as shift (OP_MOD < DEL_DOT).


State 111

   48 expressions: expressions • KW_AND expressions
   49            | expressions • KW_OR expressions
   51            | expressions • DEL_DOT expressions
   58 arithmetic_expressions: expressions • OP_POWER expressions
   58                       | expressions OP_POWER expressions •  [KW_FOR, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, DEL_SMCOLON, DEL_RPAR, DEL_COMMA, DEL_RBLOCK, DEL_COLON]
   59                       | expressions • OP_MULT expressions
   60                       | expressions • OP_DIV expressions
   61                       | expressions • OP_MOD expressions
   62                       | expressions • OP_PLUS expressions
   63                       | expressions • OP_MINUS expressions
   66 relational_expressions: expressions • RP_LESS expressions
   67                       | expressions • RP_LESSEQUALS expressions
   68                       | expressions • RP_MORE expressions
   69                       | expressions • RP_MOREEQUALS expressions
   70                       | expressions • RP_EQUALS expressions
   71                       | expressions • RP_NOTEQUALS expressions

    OP_POWER       shift, and go to state 79
    RP_EQUALS      shift, and go to state 80
    RP_NOTEQUALS   shift, and go to state 81
    RP_LESS        shift, and go to state 82
    RP_LESSEQUALS  shift, and go to state 83
    RP_MORE        shift, and go to state 84
    RP_MOREEQUALS  shift, and go to state 85
    DEL_DOT        shift, and go to state 87

    $default  reduce using rule 58 (arithmetic_expressions)

    Conflict between rule 58 and token KW_AND resolved as reduce (KW_AND < OP_POWER).
    Conflict between rule 58 and token KW_OR resolved as reduce (KW_OR < OP_POWER).
    Conflict between rule 58 and token OP_PLUS resolved as reduce (OP_PLUS < OP_POWER).
    Conflict between rule 58 and token OP_MINUS resolved as reduce (OP_MINUS < OP_POWER).
    Conflict between rule 58 and token OP_MULT resolved as reduce (OP_MULT < OP_POWER).
    Conflict between rule 58 and token OP_DIV resolved as reduce (OP_DIV < OP_POWER).
    Conflict between rule 58 and token OP_MOD resolved as reduce (OP_MOD < OP_POWER).
    Conflict between rule 58 and token OP_POWER resolved as shift (%right OP_POWER).
    Conflict between rule 58 and token RP_EQUALS resolved as shift (OP_POWER < RP_EQUALS).
    Conflict between rule 58 and token RP_NOTEQUALS resolved as shift (OP_POWER < RP_NOTEQUALS).
    Conflict between rule 58 and token RP_LESS resolved as shift (OP_POWER < RP_LESS).
    Conflict between rule 58 and token RP_LESSEQUALS resolved as shift (OP_POWER < RP_LESSEQUALS).
    Conflict between rule 58 and token RP_MORE resolved as shift (OP_POWER < RP_MORE).
    Conflict between rule 58 and token RP_MOREEQUALS resolved as shift (OP_POWER < RP_MOREEQUALS).
    Conflict between rule 58 and token DEL_DOT resolved as shift (OP_POWER < DEL_DOT).


State 112

   48 expressions: expressions • KW_AND expressions
   49            | expressions • KW_OR expressions
   51            | expressions • DEL_DOT expressions
   58 arithmetic_expressions: expressions • OP_POWER expressions
   59                       | expressions • OP_MULT expressions
   60                       | expressions • OP_DIV expressions
   61                       | expressions • OP_MOD expressions
   62                       | expressions • OP_PLUS expressions
   63                       | expressions • OP_MINUS expressions
   66 relational_expressions: expressions • RP_LESS expressions
   67                       | expressions • RP_LESSEQUALS expressions
   68                       | expressions • RP_MORE expressions
   69                       | expressions • RP_MOREEQUALS expressions
   70                       | expressions • RP_EQUALS expressions
   70                       | expressions RP_EQUALS expressions •  [KW_FOR, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, OP_POWER, RP_EQUALS, DEL_SMCOLON, DEL_RPAR, DEL_COMMA, DEL_RBLOCK, DEL_COLON]
   71                       | expressions • RP_NOTEQUALS expressions

    RP_NOTEQUALS   shift, and go to state 81
    RP_LESS        shift, and go to state 82
    RP_LESSEQUALS  shift, and go to state 83
    RP_MORE        shift, and go to state 84
    RP_MOREEQUALS  shift, and go to state 85
    DEL_DOT        shift, and go to state 87

    $default  reduce using rule 70 (relational_expressions)

    Conflict between rule 70 and token KW_AND resolved as reduce (KW_AND < RP_EQUALS).
    Conflict between rule 70 and token KW_OR resolved as reduce (KW_OR < RP_EQUALS).
    Conflict between rule 70 and token OP_PLUS resolved as reduce (OP_PLUS < RP_EQUALS).
    Conflict between rule 70 and token OP_MINUS resolved as reduce (OP_MINUS < RP_EQUALS).
    Conflict between rule 70 and token OP_MULT resolved as reduce (OP_MULT < RP_EQUALS).
    Conflict between rule 70 and token OP_DIV resolved as reduce (OP_DIV < RP_EQUALS).
    Conflict between rule 70 and token OP_MOD resolved as reduce (OP_MOD < RP_EQUALS).
    Conflict between rule 70 and token OP_POWER resolved as reduce (OP_POWER < RP_EQUALS).
    Conflict between rule 70 and token RP_EQUALS resolved as reduce (%left RP_EQUALS).
    Conflict between rule 70 and token RP_NOTEQUALS resolved as shift (RP_EQUALS < RP_NOTEQUALS).
    Conflict between rule 70 and token RP_LESS resolved as shift (RP_EQUALS < RP_LESS).
    Conflict between rule 70 and token RP_LESSEQUALS resolved as shift (RP_EQUALS < RP_LESSEQUALS).
    Conflict between rule 70 and token RP_MORE resolved as shift (RP_EQUALS < RP_MORE).
    Conflict between rule 70 and token RP_MOREEQUALS resolved as shift (RP_EQUALS < RP_MOREEQUALS).
    Conflict between rule 70 and token DEL_DOT resolved as shift (RP_EQUALS < DEL_DOT).


State 113

   48 expressions: expressions • KW_AND expressions
   49            | expressions • KW_OR expressions
   51            | expressions • DEL_DOT expressions
   58 arithmetic_expressions: expressions • OP_POWER expressions
   59                       | expressions • OP_MULT expressions
   60                       | expressions • OP_DIV expressions
   61                       | expressions • OP_MOD expressions
   62                       | expressions • OP_PLUS expressions
   63                       | expressions • OP_MINUS expressions
   66 relational_expressions: expressions • RP_LESS expressions
   67                       | expressions • RP_LESSEQUALS expressions
   68                       | expressions • RP_MORE expressions
   69                       | expressions • RP_MOREEQUALS expressions
   70                       | expressions • RP_EQUALS expressions
   71                       | expressions • RP_NOTEQUALS expressions
   71                       | expressions RP_NOTEQUALS expressions •  [KW_FOR, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, OP_POWER, RP_EQUALS, RP_NOTEQUALS, DEL_SMCOLON, DEL_RPAR, DEL_COMMA, DEL_RBLOCK, DEL_COLON]

    RP_LESS        shift, and go to state 82
    RP_LESSEQUALS  shift, and go to state 83
    RP_MORE        shift, and go to state 84
    RP_MOREEQUALS  shift, and go to state 85
    DEL_DOT        shift, and go to state 87

    $default  reduce using rule 71 (relational_expressions)

    Conflict between rule 71 and token KW_AND resolved as reduce (KW_AND < RP_NOTEQUALS).
    Conflict between rule 71 and token KW_OR resolved as reduce (KW_OR < RP_NOTEQUALS).
    Conflict between rule 71 and token OP_PLUS resolved as reduce (OP_PLUS < RP_NOTEQUALS).
    Conflict between rule 71 and token OP_MINUS resolved as reduce (OP_MINUS < RP_NOTEQUALS).
    Conflict between rule 71 and token OP_MULT resolved as reduce (OP_MULT < RP_NOTEQUALS).
    Conflict between rule 71 and token OP_DIV resolved as reduce (OP_DIV < RP_NOTEQUALS).
    Conflict between rule 71 and token OP_MOD resolved as reduce (OP_MOD < RP_NOTEQUALS).
    Conflict between rule 71 and token OP_POWER resolved as reduce (OP_POWER < RP_NOTEQUALS).
    Conflict between rule 71 and token RP_EQUALS resolved as reduce (RP_EQUALS < RP_NOTEQUALS).
    Conflict between rule 71 and token RP_NOTEQUALS resolved as reduce (%left RP_NOTEQUALS).
    Conflict between rule 71 and token RP_LESS resolved as shift (RP_NOTEQUALS < RP_LESS).
    Conflict between rule 71 and token RP_LESSEQUALS resolved as shift (RP_NOTEQUALS < RP_LESSEQUALS).
    Conflict between rule 71 and token RP_MORE resolved as shift (RP_NOTEQUALS < RP_MORE).
    Conflict between rule 71 and token RP_MOREEQUALS resolved as shift (RP_NOTEQUALS < RP_MOREEQUALS).
    Conflict between rule 71 and token DEL_DOT resolved as shift (RP_NOTEQUALS < DEL_DOT).


State 114

   48 expressions: expressions • KW_AND expressions
   49            | expressions • KW_OR expressions
   51            | expressions • DEL_DOT expressions
   58 arithmetic_expressions: expressions • OP_POWER expressions
   59                       | expressions • OP_MULT expressions
   60                       | expressions • OP_DIV expressions
   61                       | expressions • OP_MOD expressions
   62                       | expressions • OP_PLUS expressions
   63                       | expressions • OP_MINUS expressions
   66 relational_expressions: expressions • RP_LESS expressions
   66                       | expressions RP_LESS expressions •  [KW_FOR, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, OP_POWER, RP_EQUALS, RP_NOTEQUALS, RP_LESS, DEL_SMCOLON, DEL_RPAR, DEL_COMMA, DEL_RBLOCK, DEL_COLON]
   67                       | expressions • RP_LESSEQUALS expressions
   68                       | expressions • RP_MORE expressions
   69                       | expressions • RP_MOREEQUALS expressions
   70                       | expressions • RP_EQUALS expressions
   71                       | expressions • RP_NOTEQUALS expressions

    RP_LESSEQUALS  shift, and go to state 83
    RP_MORE        shift, and go to state 84
    RP_MOREEQUALS  shift, and go to state 85
    DEL_DOT        shift, and go to state 87

    $default  reduce using rule 66 (relational_expressions)

    Conflict between rule 66 and token KW_AND resolved as reduce (KW_AND < RP_LESS).
    Conflict between rule 66 and token KW_OR resolved as reduce (KW_OR < RP_LESS).
    Conflict between rule 66 and token OP_PLUS resolved as reduce (OP_PLUS < RP_LESS).
    Conflict between rule 66 and token OP_MINUS resolved as reduce (OP_MINUS < RP_LESS).
    Conflict between rule 66 and token OP_MULT resolved as reduce (OP_MULT < RP_LESS).
    Conflict between rule 66 and token OP_DIV resolved as reduce (OP_DIV < RP_LESS).
    Conflict between rule 66 and token OP_MOD resolved as reduce (OP_MOD < RP_LESS).
    Conflict between rule 66 and token OP_POWER resolved as reduce (OP_POWER < RP_LESS).
    Conflict between rule 66 and token RP_EQUALS resolved as reduce (RP_EQUALS < RP_LESS).
    Conflict between rule 66 and token RP_NOTEQUALS resolved as reduce (RP_NOTEQUALS < RP_LESS).
    Conflict between rule 66 and token RP_LESS resolved as reduce (%left RP_LESS).
    Conflict between rule 66 and token RP_LESSEQUALS resolved as shift (RP_LESS < RP_LESSEQUALS).
    Conflict between rule 66 and token RP_MORE resolved as shift (RP_LESS < RP_MORE).
    Conflict between rule 66 and token RP_MOREEQUALS resolved as shift (RP_LESS < RP_MOREEQUALS).
    Conflict between rule 66 and token DEL_DOT resolved as shift (RP_LESS < DEL_DOT).


State 115

   48 expressions: expressions • KW_AND expressions
   49            | expressions • KW_OR expressions
   51            | expressions • DEL_DOT expressions
   58 arithmetic_expressions: expressions • OP_POWER expressions
   59                       | expressions • OP_MULT expressions
   60                       | expressions • OP_DIV expressions
   61                       | expressions • OP_MOD expressions
   62                       | expressions • OP_PLUS expressions
   63                       | expressions • OP_MINUS expressions
   66 relational_expressions: expressions • RP_LESS expressions
   67                       | expressions • RP_LESSEQUALS expressions
   67                       | expressions RP_LESSEQUALS expressions •  [KW_FOR, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, OP_POWER, RP_EQUALS, RP_NOTEQUALS, RP_LESS, RP_LESSEQUALS, DEL_SMCOLON, DEL_RPAR, DEL_COMMA, DEL_RBLOCK, DEL_COLON]
   68                       | expressions • RP_MORE expressions
   69                       | expressions • RP_MOREEQUALS expressions
   70                       | expressions • RP_EQUALS expressions
   71                       | expressions • RP_NOTEQUALS expressions

    RP_MORE        shift, and go to state 84
    RP_MOREEQUALS  shift, and go to state 85
    DEL_DOT        shift, and go to state 87

    $default  reduce using rule 67 (relational_expressions)

    Conflict between rule 67 and token KW_AND resolved as reduce (KW_AND < RP_LESSEQUALS).
    Conflict between rule 67 and token KW_OR resolved as reduce (KW_OR < RP_LESSEQUALS).
    Conflict between rule 67 and token OP_PLUS resolved as reduce (OP_PLUS < RP_LESSEQUALS).
    Conflict between rule 67 and token OP_MINUS resolved as reduce (OP_MINUS < RP_LESSEQUALS).
    Conflict between rule 67 and token OP_MULT resolved as reduce (OP_MULT < RP_LESSEQUALS).
    Conflict between rule 67 and token OP_DIV resolved as reduce (OP_DIV < RP_LESSEQUALS).
    Conflict between rule 67 and token OP_MOD resolved as reduce (OP_MOD < RP_LESSEQUALS).
    Conflict between rule 67 and token OP_POWER resolved as reduce (OP_POWER < RP_LESSEQUALS).
    Conflict between rule 67 and token RP_EQUALS resolved as reduce (RP_EQUALS < RP_LESSEQUALS).
    Conflict between rule 67 and token RP_NOTEQUALS resolved as reduce (RP_NOTEQUALS < RP_LESSEQUALS).
    Conflict between rule 67 and token RP_LESS resolved as reduce (RP_LESS < RP_LESSEQUALS).
    Conflict between rule 67 and token RP_LESSEQUALS resolved as reduce (%left RP_LESSEQUALS).
    Conflict between rule 67 and token RP_MORE resolved as shift (RP_LESSEQUALS < RP_MORE).
    Conflict between rule 67 and token RP_MOREEQUALS resolved as shift (RP_LESSEQUALS < RP_MOREEQUALS).
    Conflict between rule 67 and token DEL_DOT resolved as shift (RP_LESSEQUALS < DEL_DOT).


State 116

   48 expressions: expressions • KW_AND expressions
   49            | expressions • KW_OR expressions
   51            | expressions • DEL_DOT expressions
   58 arithmetic_expressions: expressions • OP_POWER expressions
   59                       | expressions • OP_MULT expressions
   60                       | expressions • OP_DIV expressions
   61                       | expressions • OP_MOD expressions
   62                       | expressions • OP_PLUS expressions
   63                       | expressions • OP_MINUS expressions
   66 relational_expressions: expressions • RP_LESS expressions
   67                       | expressions • RP_LESSEQUALS expressions
   68                       | expressions • RP_MORE expressions
   68                       | expressions RP_MORE expressions •  [KW_FOR, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, OP_POWER, RP_EQUALS, RP_NOTEQUALS, RP_LESS, RP_LESSEQUALS, RP_MORE, DEL_SMCOLON, DEL_RPAR, DEL_COMMA, DEL_RBLOCK, DEL_COLON]
   69                       | expressions • RP_MOREEQUALS expressions
   70                       | expressions • RP_EQUALS expressions
   71                       | expressions • RP_NOTEQUALS expressions

    RP_MOREEQUALS  shift, and go to state 85
    DEL_DOT        shift, and go to state 87

    $default  reduce using rule 68 (relational_expressions)

    Conflict between rule 68 and token KW_AND resolved as reduce (KW_AND < RP_MORE).
    Conflict between rule 68 and token KW_OR resolved as reduce (KW_OR < RP_MORE).
    Conflict between rule 68 and token OP_PLUS resolved as reduce (OP_PLUS < RP_MORE).
    Conflict between rule 68 and token OP_MINUS resolved as reduce (OP_MINUS < RP_MORE).
    Conflict between rule 68 and token OP_MULT resolved as reduce (OP_MULT < RP_MORE).
    Conflict between rule 68 and token OP_DIV resolved as reduce (OP_DIV < RP_MORE).
    Conflict between rule 68 and token OP_MOD resolved as reduce (OP_MOD < RP_MORE).
    Conflict between rule 68 and token OP_POWER resolved as reduce (OP_POWER < RP_MORE).
    Conflict between rule 68 and token RP_EQUALS resolved as reduce (RP_EQUALS < RP_MORE).
    Conflict between rule 68 and token RP_NOTEQUALS resolved as reduce (RP_NOTEQUALS < RP_MORE).
    Conflict between rule 68 and token RP_LESS resolved as reduce (RP_LESS < RP_MORE).
    Conflict between rule 68 and token RP_LESSEQUALS resolved as reduce (RP_LESSEQUALS < RP_MORE).
    Conflict between rule 68 and token RP_MORE resolved as reduce (%left RP_MORE).
    Conflict between rule 68 and token RP_MOREEQUALS resolved as shift (RP_MORE < RP_MOREEQUALS).
    Conflict between rule 68 and token DEL_DOT resolved as shift (RP_MORE < DEL_DOT).


State 117

   48 expressions: expressions • KW_AND expressions
   49            | expressions • KW_OR expressions
   51            | expressions • DEL_DOT expressions
   58 arithmetic_expressions: expressions • OP_POWER expressions
   59                       | expressions • OP_MULT expressions
   60                       | expressions • OP_DIV expressions
   61                       | expressions • OP_MOD expressions
   62                       | expressions • OP_PLUS expressions
   63                       | expressions • OP_MINUS expressions
   66 relational_expressions: expressions • RP_LESS expressions
   67                       | expressions • RP_LESSEQUALS expressions
   68                       | expressions • RP_MORE expressions
   69                       | expressions • RP_MOREEQUALS expressions
   69                       | expressions RP_MOREEQUALS expressions •  [KW_FOR, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, OP_POWER, RP_EQUALS, RP_NOTEQUALS, RP_LESS, RP_LESSEQUALS, RP_MORE, RP_MOREEQUALS, DEL_SMCOLON, DEL_RPAR, DEL_COMMA, DEL_RBLOCK, DEL_COLON]
   70                       | expressions • RP_EQUALS expressions
   71                       | expressions • RP_NOTEQUALS expressions

    DEL_DOT  shift, and go to state 87

    $default  reduce using rule 69 (relational_expressions)

    Conflict between rule 69 and token KW_AND resolved as reduce (KW_AND < RP_MOREEQUALS).
    Conflict between rule 69 and token KW_OR resolved as reduce (KW_OR < RP_MOREEQUALS).
    Conflict between rule 69 and token OP_PLUS resolved as reduce (OP_PLUS < RP_MOREEQUALS).
    Conflict between rule 69 and token OP_MINUS resolved as reduce (OP_MINUS < RP_MOREEQUALS).
    Conflict between rule 69 and token OP_MULT resolved as reduce (OP_MULT < RP_MOREEQUALS).
    Conflict between rule 69 and token OP_DIV resolved as reduce (OP_DIV < RP_MOREEQUALS).
    Conflict between rule 69 and token OP_MOD resolved as reduce (OP_MOD < RP_MOREEQUALS).
    Conflict between rule 69 and token OP_POWER resolved as reduce (OP_POWER < RP_MOREEQUALS).
    Conflict between rule 69 and token RP_EQUALS resolved as reduce (RP_EQUALS < RP_MOREEQUALS).
    Conflict between rule 69 and token RP_NOTEQUALS resolved as reduce (RP_NOTEQUALS < RP_MOREEQUALS).
    Conflict between rule 69 and token RP_LESS resolved as reduce (RP_LESS < RP_MOREEQUALS).
    Conflict between rule 69 and token RP_LESSEQUALS resolved as reduce (RP_LESSEQUALS < RP_MOREEQUALS).
    Conflict between rule 69 and token RP_MORE resolved as reduce (RP_MORE < RP_MOREEQUALS).
    Conflict between rule 69 and token RP_MOREEQUALS resolved as reduce (%left RP_MOREEQUALS).
    Conflict between rule 69 and token DEL_DOT resolved as shift (RP_MOREEQUALS < DEL_DOT).


State 118

    5 types: DEL_LBLOCK • DEL_RBLOCK basic_types

    DEL_RBLOCK  shift, and go to state 158


State 119

   22 constant_declarations: KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types • DEL_SMCOLON

    DEL_SMCOLON  shift, and go to state 159


State 120

    6 types: basic_types •

    $default  reduce using rule 6 (types)


State 121

   48 expressions: expressions • KW_AND expressions
   49            | expressions • KW_OR expressions
   51            | expressions • DEL_DOT expressions
   51            | expressions DEL_DOT expressions •  [KW_FOR, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, OP_POWER, RP_EQUALS, RP_NOTEQUALS, RP_LESS, RP_LESSEQUALS, RP_MORE, RP_MOREEQUALS, DEL_SMCOLON, DEL_RPAR, DEL_COMMA, DEL_RBLOCK, DEL_COLON, DEL_DOT]
   58 arithmetic_expressions: expressions • OP_POWER expressions
   59                       | expressions • OP_MULT expressions
   60                       | expressions • OP_DIV expressions
   61                       | expressions • OP_MOD expressions
   62                       | expressions • OP_PLUS expressions
   63                       | expressions • OP_MINUS expressions
   66 relational_expressions: expressions • RP_LESS expressions
   67                       | expressions • RP_LESSEQUALS expressions
   68                       | expressions • RP_MORE expressions
   69                       | expressions • RP_MOREEQUALS expressions
   70                       | expressions • RP_EQUALS expressions
   71                       | expressions • RP_NOTEQUALS expressions

    $default  reduce using rule 51 (expressions)

    Conflict between rule 51 and token KW_AND resolved as reduce (KW_AND < DEL_DOT).
    Conflict between rule 51 and token KW_OR resolved as reduce (KW_OR < DEL_DOT).
    Conflict between rule 51 and token OP_PLUS resolved as reduce (OP_PLUS < DEL_DOT).
    Conflict between rule 51 and token OP_MINUS resolved as reduce (OP_MINUS < DEL_DOT).
    Conflict between rule 51 and token OP_MULT resolved as reduce (OP_MULT < DEL_DOT).
    Conflict between rule 51 and token OP_DIV resolved as reduce (OP_DIV < DEL_DOT).
    Conflict between rule 51 and token OP_MOD resolved as reduce (OP_MOD < DEL_DOT).
    Conflict between rule 51 and token OP_POWER resolved as reduce (OP_POWER < DEL_DOT).
    Conflict between rule 51 and token RP_EQUALS resolved as reduce (RP_EQUALS < DEL_DOT).
    Conflict between rule 51 and token RP_NOTEQUALS resolved as reduce (RP_NOTEQUALS < DEL_DOT).
    Conflict between rule 51 and token RP_LESS resolved as reduce (RP_LESS < DEL_DOT).
    Conflict between rule 51 and token RP_LESSEQUALS resolved as reduce (RP_LESSEQUALS < DEL_DOT).
    Conflict between rule 51 and token RP_MORE resolved as reduce (RP_MORE < DEL_DOT).
    Conflict between rule 51 and token RP_MOREEQUALS resolved as reduce (RP_MOREEQUALS < DEL_DOT).
    Conflict between rule 51 and token DEL_DOT resolved as reduce (%left DEL_DOT).


State 122

   27 parameter_declarations: TK_IDENTIFIER DEL_LBLOCK DEL_RBLOCK • DEL_COLON types
   28                       | TK_IDENTIFIER DEL_LBLOCK DEL_RBLOCK • DEL_COLON types DEL_COMMA parameter_declarations

    DEL_COLON  shift, and go to state 160


State 123

   26 parameter_declarations: TK_IDENTIFIER DEL_COLON types •  [DEL_RPAR]
   29                       | TK_IDENTIFIER DEL_COLON types • DEL_COMMA parameter_declarations

    DEL_COMMA  shift, and go to state 161

    $default  reduce using rule 26 (parameter_declarations)


State 124

    5 types: • DEL_LBLOCK DEL_RBLOCK basic_types
    6      | • basic_types
    7 basic_types: • KW_INT
    8            | • KW_BOOLEAN
    9            | • KW_SCALAR
   10            | • KW_STR
   24 functions: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN • types DEL_COLON body KW_ENDDEF DEL_SMCOLON

    KW_INT      shift, and go to state 32
    KW_SCALAR   shift, and go to state 33
    KW_STR      shift, and go to state 34
    KW_BOOLEAN  shift, and go to state 35
    DEL_LBLOCK  shift, and go to state 118

    types        go to state 162
    basic_types  go to state 120


State 125

   11 identifiers: • TK_IDENTIFIER
   12            | • identifiers DEL_COMMA TK_IDENTIFIER
   19 variable_declarations: • identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK DEL_COLON basic_types DEL_SMCOLON
   21 comp_variables: • identifiers DEL_COLON TK_IDENTIFIER DEL_SMCOLON
   22 constant_declarations: • KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON
   23 functions: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR DEL_COLON • body KW_ENDDEF DEL_SMCOLON
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   72 assign_expressions: • identifier_expressions AP_ASSIGN expressions
   73                   | • identifier_expressions AP_PLUSASSIGN expressions
   74                   | • identifier_expressions AP_MINASSIGN expressions
   75                   | • identifier_expressions AP_MULASSIGN expressions
   76                   | • identifier_expressions AP_DIVASSIGN expressions
   77                   | • identifier_expressions AP_MODASSIGN expressions
   78 statements: • if_statement DEL_SMCOLON
   79           | • for_statement DEL_SMCOLON
   80           | • array_statement DEL_SMCOLON
   81           | • while_statement DEL_SMCOLON
   82           | • KW_BREAK DEL_SMCOLON
   83           | • KW_CONTINUE DEL_SMCOLON
   84           | • assign_expressions DEL_SMCOLON
   85           | • return_statement DEL_SMCOLON
   86           | • function_statement DEL_SMCOLON
   93 if_statement: • KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   94             | • KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE DEL_COLON command_statements KW_ENDIF
   95 for_statement: • KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   96              | • KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   97 array_statement: • integral_array
   98                | • other_array
   99 integral_array: • TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
  100 other_array: • TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON types KW_IN TK_IDENTIFIER KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types
  101 while_statement: • KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE
  102 return_statement: • KW_RETURN
  103                 | • KW_RETURN expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR
  108 body: • statements
  109     | • variable_declarations
  110     | • constant_declarations
  111     | • comp_variables
  112     | • body statements
  113     | • body variable_declarations
  114     | • body constant_declarations
  115     | • body comp_variables

    TK_IDENTIFIER  shift, and go to state 126
    KW_CONST       shift, and go to state 2
    KW_IF          shift, and go to state 127
    KW_FOR         shift, and go to state 128
    KW_WHILE       shift, and go to state 129
    KW_BREAK       shift, and go to state 130
    KW_CONTINUE    shift, and go to state 131
    KW_RETURN      shift, and go to state 132
    AP_HASHASSIGN  shift, and go to state 47

    identifiers             go to state 133
    variable_declarations   go to state 134
    comp_variables          go to state 135
    constant_declarations   go to state 136
    identifier_expressions  go to state 137
    assign_expressions      go to state 138
    statements              go to state 139
    if_statement            go to state 140
    for_statement           go to state 141
    array_statement         go to state 142
    integral_array          go to state 143
    other_array             go to state 144
    while_statement         go to state 145
    return_statement        go to state 146
    function_statement      go to state 147
    body                    go to state 163


State 126

   11 identifiers: TK_IDENTIFIER •  [DEL_COMMA, DEL_COLON]
   20 variable_declarations: TK_IDENTIFIER • DEL_LBLOCK TK_INTEGER DEL_RBLOCK DEL_COLON basic_types DEL_SMCOLON
   52 identifier_expressions: TK_IDENTIFIER •  [AP_ASSIGN, AP_PLUSASSIGN, AP_MINASSIGN, AP_MULASSIGN, AP_DIVASSIGN, AP_MODASSIGN]
   54                       | TK_IDENTIFIER • DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | TK_IDENTIFIER • DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   99 integral_array: TK_IDENTIFIER • AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
  100 other_array: TK_IDENTIFIER • AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON types KW_IN TK_IDENTIFIER KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types
  104 function_statement: TK_IDENTIFIER • DEL_LPAR function_arg DEL_RPAR

    AP_COLONASSIGN  shift, and go to state 164
    DEL_LPAR        shift, and go to state 65
    DEL_LBLOCK      shift, and go to state 165

    DEL_COMMA  reduce using rule 11 (identifiers)
    DEL_COLON  reduce using rule 11 (identifiers)
    $default   reduce using rule 52 (identifier_expressions)


State 127

   93 if_statement: KW_IF • DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   94             | KW_IF • DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE DEL_COLON command_statements KW_ENDIF

    DEL_LPAR  shift, and go to state 166


State 128

   11 identifiers: • TK_IDENTIFIER
   12            | • identifiers DEL_COMMA TK_IDENTIFIER
   95 for_statement: KW_FOR • identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   96              | KW_FOR • identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR

    TK_IDENTIFIER  shift, and go to state 16

    identifiers  go to state 167


State 129

  101 while_statement: KW_WHILE • DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE

    DEL_LPAR  shift, and go to state 168


State 130

   82 statements: KW_BREAK • DEL_SMCOLON

    DEL_SMCOLON  shift, and go to state 169


State 131

   83 statements: KW_CONTINUE • DEL_SMCOLON

    DEL_SMCOLON  shift, and go to state 170


State 132

   40 expressions: • identifier_expressions
   41            | • TK_STRING
   42            | • KW_TRUE
   43            | • KW_FALSE
   44            | • function_statement
   45            | • arithmetic_expressions
   46            | • relational_expressions
   47            | • KW_NOT expressions
   48            | • expressions KW_AND expressions
   49            | • expressions KW_OR expressions
   50            | • DEL_LPAR expressions DEL_RPAR
   51            | • expressions DEL_DOT expressions
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   56 arithmetic_expressions: • TK_INTEGER
   57                       | • TK_FLOAT
   58                       | • expressions OP_POWER expressions
   59                       | • expressions OP_MULT expressions
   60                       | • expressions OP_DIV expressions
   61                       | • expressions OP_MOD expressions
   62                       | • expressions OP_PLUS expressions
   63                       | • expressions OP_MINUS expressions
   64                       | • OP_PLUS expressions
   65                       | • OP_MINUS expressions
   66 relational_expressions: • expressions RP_LESS expressions
   67                       | • expressions RP_LESSEQUALS expressions
   68                       | • expressions RP_MORE expressions
   69                       | • expressions RP_MOREEQUALS expressions
   70                       | • expressions RP_EQUALS expressions
   71                       | • expressions RP_NOTEQUALS expressions
  102 return_statement: KW_RETURN •  [DEL_SMCOLON]
  103                 | KW_RETURN • expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    AP_HASHASSIGN  shift, and go to state 47
    DEL_LPAR       shift, and go to state 48

    $default  reduce using rule 102 (return_statement)

    expressions             go to state 171
    identifier_expressions  go to state 50
    arithmetic_expressions  go to state 51
    relational_expressions  go to state 52
    function_statement      go to state 53


State 133

   12 identifiers: identifiers • DEL_COMMA TK_IDENTIFIER
   19 variable_declarations: identifiers • DEL_COLON basic_types DEL_SMCOLON
   21 comp_variables: identifiers • DEL_COLON TK_IDENTIFIER DEL_SMCOLON

    DEL_COMMA  shift, and go to state 22
    DEL_COLON  shift, and go to state 172


State 134

  109 body: variable_declarations •

    $default  reduce using rule 109 (body)


State 135

  111 body: comp_variables •

    $default  reduce using rule 111 (body)


State 136

  110 body: constant_declarations •

    $default  reduce using rule 110 (body)


State 137

   72 assign_expressions: identifier_expressions • AP_ASSIGN expressions
   73                   | identifier_expressions • AP_PLUSASSIGN expressions
   74                   | identifier_expressions • AP_MINASSIGN expressions
   75                   | identifier_expressions • AP_MULASSIGN expressions
   76                   | identifier_expressions • AP_DIVASSIGN expressions
   77                   | identifier_expressions • AP_MODASSIGN expressions

    AP_ASSIGN      shift, and go to state 173
    AP_PLUSASSIGN  shift, and go to state 174
    AP_MINASSIGN   shift, and go to state 175
    AP_MULASSIGN   shift, and go to state 176
    AP_DIVASSIGN   shift, and go to state 177
    AP_MODASSIGN   shift, and go to state 178


State 138

   84 statements: assign_expressions • DEL_SMCOLON

    DEL_SMCOLON  shift, and go to state 179


State 139

  108 body: statements •

    $default  reduce using rule 108 (body)


State 140

   78 statements: if_statement • DEL_SMCOLON

    DEL_SMCOLON  shift, and go to state 180


State 141

   79 statements: for_statement • DEL_SMCOLON

    DEL_SMCOLON  shift, and go to state 181


State 142

   80 statements: array_statement • DEL_SMCOLON

    DEL_SMCOLON  shift, and go to state 182


State 143

   97 array_statement: integral_array •

    $default  reduce using rule 97 (array_statement)


State 144

   98 array_statement: other_array •

    $default  reduce using rule 98 (array_statement)


State 145

   81 statements: while_statement • DEL_SMCOLON

    DEL_SMCOLON  shift, and go to state 183


State 146

   85 statements: return_statement • DEL_SMCOLON

    DEL_SMCOLON  shift, and go to state 184


State 147

   86 statements: function_statement • DEL_SMCOLON

    DEL_SMCOLON  shift, and go to state 185


State 148

    4 main: KW_DEF KW_MAIN DEL_LPAR DEL_RPAR DEL_COLON body • KW_ENDDEF DEL_SMCOLON
   11 identifiers: • TK_IDENTIFIER
   12            | • identifiers DEL_COMMA TK_IDENTIFIER
   19 variable_declarations: • identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK DEL_COLON basic_types DEL_SMCOLON
   21 comp_variables: • identifiers DEL_COLON TK_IDENTIFIER DEL_SMCOLON
   22 constant_declarations: • KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   72 assign_expressions: • identifier_expressions AP_ASSIGN expressions
   73                   | • identifier_expressions AP_PLUSASSIGN expressions
   74                   | • identifier_expressions AP_MINASSIGN expressions
   75                   | • identifier_expressions AP_MULASSIGN expressions
   76                   | • identifier_expressions AP_DIVASSIGN expressions
   77                   | • identifier_expressions AP_MODASSIGN expressions
   78 statements: • if_statement DEL_SMCOLON
   79           | • for_statement DEL_SMCOLON
   80           | • array_statement DEL_SMCOLON
   81           | • while_statement DEL_SMCOLON
   82           | • KW_BREAK DEL_SMCOLON
   83           | • KW_CONTINUE DEL_SMCOLON
   84           | • assign_expressions DEL_SMCOLON
   85           | • return_statement DEL_SMCOLON
   86           | • function_statement DEL_SMCOLON
   93 if_statement: • KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   94             | • KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE DEL_COLON command_statements KW_ENDIF
   95 for_statement: • KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   96              | • KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   97 array_statement: • integral_array
   98                | • other_array
   99 integral_array: • TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
  100 other_array: • TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON types KW_IN TK_IDENTIFIER KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types
  101 while_statement: • KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE
  102 return_statement: • KW_RETURN
  103                 | • KW_RETURN expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR
  112 body: body • statements
  113     | body • variable_declarations
  114     | body • constant_declarations
  115     | body • comp_variables

    TK_IDENTIFIER  shift, and go to state 126
    KW_CONST       shift, and go to state 2
    KW_IF          shift, and go to state 127
    KW_FOR         shift, and go to state 128
    KW_WHILE       shift, and go to state 129
    KW_BREAK       shift, and go to state 130
    KW_CONTINUE    shift, and go to state 131
    KW_ENDDEF      shift, and go to state 186
    KW_RETURN      shift, and go to state 132
    AP_HASHASSIGN  shift, and go to state 47

    identifiers             go to state 133
    variable_declarations   go to state 187
    comp_variables          go to state 188
    constant_declarations   go to state 189
    identifier_expressions  go to state 137
    assign_expressions      go to state 138
    statements              go to state 190
    if_statement            go to state 140
    for_statement           go to state 141
    array_statement         go to state 142
    integral_array          go to state 143
    other_array             go to state 144
    while_statement         go to state 145
    return_statement        go to state 146
    function_statement      go to state 147


State 149

   25 parameter_declarations: ε •  [DEL_RPAR]
   26                       | • TK_IDENTIFIER DEL_COLON types
   27                       | • TK_IDENTIFIER DEL_LBLOCK DEL_RBLOCK DEL_COLON types
   28                       | • TK_IDENTIFIER DEL_LBLOCK DEL_RBLOCK DEL_COLON types DEL_COMMA parameter_declarations
   29                       | • TK_IDENTIFIER DEL_COLON types DEL_COMMA parameter_declarations
   38 comp_functions: KW_DEF TK_IDENTIFIER DEL_LPAR • parameter_declarations DEL_RPAR DEL_COLON body KW_ENDDEF DEL_SMCOLON
   39               | KW_DEF TK_IDENTIFIER DEL_LPAR • parameter_declarations DEL_RPAR AP_ARROWASSIGN types DEL_COLON body KW_ENDDEF DEL_SMCOLON

    TK_IDENTIFIER  shift, and go to state 54

    $default  reduce using rule 25 (parameter_declarations)

    parameter_declarations  go to state 191


State 150

   36 comp_identifiers: • AP_HASHASSIGN TK_IDENTIFIER
   37                 | • AP_HASHASSIGN TK_IDENTIFIER DEL_COMMA comp_identifiers
   37                 | AP_HASHASSIGN TK_IDENTIFIER DEL_COMMA • comp_identifiers

    AP_HASHASSIGN  shift, and go to state 58

    comp_identifiers  go to state 192


State 151

   30 complex_type_declarations: KW_COMP TK_IDENTIFIER DEL_COLON comp_body KW_ENDCOMP DEL_SMCOLON •

    $default  reduce using rule 30 (complex_type_declarations)


State 152

   35 comp_variable_declarations: comp_identifiers DEL_COLON types • DEL_SMCOLON

    DEL_SMCOLON  shift, and go to state 193


State 153

   20 variable_declarations: TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK DEL_COLON basic_types DEL_SMCOLON •

    $default  reduce using rule 20 (variable_declarations)


State 154

  104 function_statement: TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR •

    $default  reduce using rule 104 (function_statement)


State 155

   40 expressions: • identifier_expressions
   41            | • TK_STRING
   42            | • KW_TRUE
   43            | • KW_FALSE
   44            | • function_statement
   45            | • arithmetic_expressions
   46            | • relational_expressions
   47            | • KW_NOT expressions
   48            | • expressions KW_AND expressions
   49            | • expressions KW_OR expressions
   50            | • DEL_LPAR expressions DEL_RPAR
   51            | • expressions DEL_DOT expressions
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   56 arithmetic_expressions: • TK_INTEGER
   57                       | • TK_FLOAT
   58                       | • expressions OP_POWER expressions
   59                       | • expressions OP_MULT expressions
   60                       | • expressions OP_DIV expressions
   61                       | • expressions OP_MOD expressions
   62                       | • expressions OP_PLUS expressions
   63                       | • expressions OP_MINUS expressions
   64                       | • OP_PLUS expressions
   65                       | • OP_MINUS expressions
   66 relational_expressions: • expressions RP_LESS expressions
   67                       | • expressions RP_LESSEQUALS expressions
   68                       | • expressions RP_MORE expressions
   69                       | • expressions RP_MOREEQUALS expressions
   70                       | • expressions RP_EQUALS expressions
   71                       | • expressions RP_NOTEQUALS expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR
  107 function_arg: function_arg DEL_COMMA • expressions

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    AP_HASHASSIGN  shift, and go to state 47
    DEL_LPAR       shift, and go to state 48

    expressions             go to state 194
    identifier_expressions  go to state 50
    arithmetic_expressions  go to state 51
    relational_expressions  go to state 52
    function_statement      go to state 53


State 156

   55 identifier_expressions: TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK •

    $default  reduce using rule 55 (identifier_expressions)


State 157

   54 identifier_expressions: TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK •

    $default  reduce using rule 54 (identifier_expressions)


State 158

    5 types: DEL_LBLOCK DEL_RBLOCK • basic_types
    7 basic_types: • KW_INT
    8            | • KW_BOOLEAN
    9            | • KW_SCALAR
   10            | • KW_STR

    KW_INT      shift, and go to state 32
    KW_SCALAR   shift, and go to state 33
    KW_STR      shift, and go to state 34
    KW_BOOLEAN  shift, and go to state 35

    basic_types  go to state 195


State 159

   22 constant_declarations: KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON •

    $default  reduce using rule 22 (constant_declarations)


State 160

    5 types: • DEL_LBLOCK DEL_RBLOCK basic_types
    6      | • basic_types
    7 basic_types: • KW_INT
    8            | • KW_BOOLEAN
    9            | • KW_SCALAR
   10            | • KW_STR
   27 parameter_declarations: TK_IDENTIFIER DEL_LBLOCK DEL_RBLOCK DEL_COLON • types
   28                       | TK_IDENTIFIER DEL_LBLOCK DEL_RBLOCK DEL_COLON • types DEL_COMMA parameter_declarations

    KW_INT      shift, and go to state 32
    KW_SCALAR   shift, and go to state 33
    KW_STR      shift, and go to state 34
    KW_BOOLEAN  shift, and go to state 35
    DEL_LBLOCK  shift, and go to state 118

    types        go to state 196
    basic_types  go to state 120


State 161

   25 parameter_declarations: ε •  [DEL_RPAR]
   26                       | • TK_IDENTIFIER DEL_COLON types
   27                       | • TK_IDENTIFIER DEL_LBLOCK DEL_RBLOCK DEL_COLON types
   28                       | • TK_IDENTIFIER DEL_LBLOCK DEL_RBLOCK DEL_COLON types DEL_COMMA parameter_declarations
   29                       | • TK_IDENTIFIER DEL_COLON types DEL_COMMA parameter_declarations
   29                       | TK_IDENTIFIER DEL_COLON types DEL_COMMA • parameter_declarations

    TK_IDENTIFIER  shift, and go to state 54

    $default  reduce using rule 25 (parameter_declarations)

    parameter_declarations  go to state 197


State 162

   24 functions: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN types • DEL_COLON body KW_ENDDEF DEL_SMCOLON

    DEL_COLON  shift, and go to state 198


State 163

   11 identifiers: • TK_IDENTIFIER
   12            | • identifiers DEL_COMMA TK_IDENTIFIER
   19 variable_declarations: • identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK DEL_COLON basic_types DEL_SMCOLON
   21 comp_variables: • identifiers DEL_COLON TK_IDENTIFIER DEL_SMCOLON
   22 constant_declarations: • KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON
   23 functions: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR DEL_COLON body • KW_ENDDEF DEL_SMCOLON
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   72 assign_expressions: • identifier_expressions AP_ASSIGN expressions
   73                   | • identifier_expressions AP_PLUSASSIGN expressions
   74                   | • identifier_expressions AP_MINASSIGN expressions
   75                   | • identifier_expressions AP_MULASSIGN expressions
   76                   | • identifier_expressions AP_DIVASSIGN expressions
   77                   | • identifier_expressions AP_MODASSIGN expressions
   78 statements: • if_statement DEL_SMCOLON
   79           | • for_statement DEL_SMCOLON
   80           | • array_statement DEL_SMCOLON
   81           | • while_statement DEL_SMCOLON
   82           | • KW_BREAK DEL_SMCOLON
   83           | • KW_CONTINUE DEL_SMCOLON
   84           | • assign_expressions DEL_SMCOLON
   85           | • return_statement DEL_SMCOLON
   86           | • function_statement DEL_SMCOLON
   93 if_statement: • KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   94             | • KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE DEL_COLON command_statements KW_ENDIF
   95 for_statement: • KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   96              | • KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   97 array_statement: • integral_array
   98                | • other_array
   99 integral_array: • TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
  100 other_array: • TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON types KW_IN TK_IDENTIFIER KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types
  101 while_statement: • KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE
  102 return_statement: • KW_RETURN
  103                 | • KW_RETURN expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR
  112 body: body • statements
  113     | body • variable_declarations
  114     | body • constant_declarations
  115     | body • comp_variables

    TK_IDENTIFIER  shift, and go to state 126
    KW_CONST       shift, and go to state 2
    KW_IF          shift, and go to state 127
    KW_FOR         shift, and go to state 128
    KW_WHILE       shift, and go to state 129
    KW_BREAK       shift, and go to state 130
    KW_CONTINUE    shift, and go to state 131
    KW_ENDDEF      shift, and go to state 199
    KW_RETURN      shift, and go to state 132
    AP_HASHASSIGN  shift, and go to state 47

    identifiers             go to state 133
    variable_declarations   go to state 187
    comp_variables          go to state 188
    constant_declarations   go to state 189
    identifier_expressions  go to state 137
    assign_expressions      go to state 138
    statements              go to state 190
    if_statement            go to state 140
    for_statement           go to state 141
    array_statement         go to state 142
    integral_array          go to state 143
    other_array             go to state 144
    while_statement         go to state 145
    return_statement        go to state 146
    function_statement      go to state 147


State 164

   99 integral_array: TK_IDENTIFIER AP_COLONASSIGN • DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
  100 other_array: TK_IDENTIFIER AP_COLONASSIGN • DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON types KW_IN TK_IDENTIFIER KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types

    DEL_LBLOCK  shift, and go to state 200


State 165

   20 variable_declarations: TK_IDENTIFIER DEL_LBLOCK • TK_INTEGER DEL_RBLOCK DEL_COLON basic_types DEL_SMCOLON
   54 identifier_expressions: TK_IDENTIFIER DEL_LBLOCK • TK_INTEGER DEL_RBLOCK
   55                       | TK_IDENTIFIER DEL_LBLOCK • TK_IDENTIFIER DEL_RBLOCK

    TK_IDENTIFIER  shift, and go to state 101
    TK_INTEGER     shift, and go to state 201


State 166

   40 expressions: • identifier_expressions
   41            | • TK_STRING
   42            | • KW_TRUE
   43            | • KW_FALSE
   44            | • function_statement
   45            | • arithmetic_expressions
   46            | • relational_expressions
   47            | • KW_NOT expressions
   48            | • expressions KW_AND expressions
   49            | • expressions KW_OR expressions
   50            | • DEL_LPAR expressions DEL_RPAR
   51            | • expressions DEL_DOT expressions
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   56 arithmetic_expressions: • TK_INTEGER
   57                       | • TK_FLOAT
   58                       | • expressions OP_POWER expressions
   59                       | • expressions OP_MULT expressions
   60                       | • expressions OP_DIV expressions
   61                       | • expressions OP_MOD expressions
   62                       | • expressions OP_PLUS expressions
   63                       | • expressions OP_MINUS expressions
   64                       | • OP_PLUS expressions
   65                       | • OP_MINUS expressions
   66 relational_expressions: • expressions RP_LESS expressions
   67                       | • expressions RP_LESSEQUALS expressions
   68                       | • expressions RP_MORE expressions
   69                       | • expressions RP_MOREEQUALS expressions
   70                       | • expressions RP_EQUALS expressions
   71                       | • expressions RP_NOTEQUALS expressions
   93 if_statement: KW_IF DEL_LPAR • expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   94             | KW_IF DEL_LPAR • expressions DEL_RPAR DEL_COLON command_statements KW_ELSE DEL_COLON command_statements KW_ENDIF
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    AP_HASHASSIGN  shift, and go to state 47
    DEL_LPAR       shift, and go to state 48

    expressions             go to state 202
    identifier_expressions  go to state 50
    arithmetic_expressions  go to state 51
    relational_expressions  go to state 52
    function_statement      go to state 53


State 167

   12 identifiers: identifiers • DEL_COMMA TK_IDENTIFIER
   95 for_statement: KW_FOR identifiers • KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   96              | KW_FOR identifiers • KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR

    KW_IN      shift, and go to state 203
    DEL_COMMA  shift, and go to state 22


State 168

   40 expressions: • identifier_expressions
   41            | • TK_STRING
   42            | • KW_TRUE
   43            | • KW_FALSE
   44            | • function_statement
   45            | • arithmetic_expressions
   46            | • relational_expressions
   47            | • KW_NOT expressions
   48            | • expressions KW_AND expressions
   49            | • expressions KW_OR expressions
   50            | • DEL_LPAR expressions DEL_RPAR
   51            | • expressions DEL_DOT expressions
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   56 arithmetic_expressions: • TK_INTEGER
   57                       | • TK_FLOAT
   58                       | • expressions OP_POWER expressions
   59                       | • expressions OP_MULT expressions
   60                       | • expressions OP_DIV expressions
   61                       | • expressions OP_MOD expressions
   62                       | • expressions OP_PLUS expressions
   63                       | • expressions OP_MINUS expressions
   64                       | • OP_PLUS expressions
   65                       | • OP_MINUS expressions
   66 relational_expressions: • expressions RP_LESS expressions
   67                       | • expressions RP_LESSEQUALS expressions
   68                       | • expressions RP_MORE expressions
   69                       | • expressions RP_MOREEQUALS expressions
   70                       | • expressions RP_EQUALS expressions
   71                       | • expressions RP_NOTEQUALS expressions
  101 while_statement: KW_WHILE DEL_LPAR • expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    AP_HASHASSIGN  shift, and go to state 47
    DEL_LPAR       shift, and go to state 48

    expressions             go to state 204
    identifier_expressions  go to state 50
    arithmetic_expressions  go to state 51
    relational_expressions  go to state 52
    function_statement      go to state 53


State 169

   82 statements: KW_BREAK DEL_SMCOLON •

    $default  reduce using rule 82 (statements)


State 170

   83 statements: KW_CONTINUE DEL_SMCOLON •

    $default  reduce using rule 83 (statements)


State 171

   48 expressions: expressions • KW_AND expressions
   49            | expressions • KW_OR expressions
   51            | expressions • DEL_DOT expressions
   58 arithmetic_expressions: expressions • OP_POWER expressions
   59                       | expressions • OP_MULT expressions
   60                       | expressions • OP_DIV expressions
   61                       | expressions • OP_MOD expressions
   62                       | expressions • OP_PLUS expressions
   63                       | expressions • OP_MINUS expressions
   66 relational_expressions: expressions • RP_LESS expressions
   67                       | expressions • RP_LESSEQUALS expressions
   68                       | expressions • RP_MORE expressions
   69                       | expressions • RP_MOREEQUALS expressions
   70                       | expressions • RP_EQUALS expressions
   71                       | expressions • RP_NOTEQUALS expressions
  103 return_statement: KW_RETURN expressions •  [DEL_SMCOLON]

    KW_AND         shift, and go to state 72
    KW_OR          shift, and go to state 73
    OP_PLUS        shift, and go to state 74
    OP_MINUS       shift, and go to state 75
    OP_MULT        shift, and go to state 76
    OP_DIV         shift, and go to state 77
    OP_MOD         shift, and go to state 78
    OP_POWER       shift, and go to state 79
    RP_EQUALS      shift, and go to state 80
    RP_NOTEQUALS   shift, and go to state 81
    RP_LESS        shift, and go to state 82
    RP_LESSEQUALS  shift, and go to state 83
    RP_MORE        shift, and go to state 84
    RP_MOREEQUALS  shift, and go to state 85
    DEL_DOT        shift, and go to state 87

    $default  reduce using rule 103 (return_statement)


State 172

    7 basic_types: • KW_INT
    8            | • KW_BOOLEAN
    9            | • KW_SCALAR
   10            | • KW_STR
   19 variable_declarations: identifiers DEL_COLON • basic_types DEL_SMCOLON
   21 comp_variables: identifiers DEL_COLON • TK_IDENTIFIER DEL_SMCOLON

    TK_IDENTIFIER  shift, and go to state 205
    KW_INT         shift, and go to state 32
    KW_SCALAR      shift, and go to state 33
    KW_STR         shift, and go to state 34
    KW_BOOLEAN     shift, and go to state 35

    basic_types  go to state 36


State 173

   40 expressions: • identifier_expressions
   41            | • TK_STRING
   42            | • KW_TRUE
   43            | • KW_FALSE
   44            | • function_statement
   45            | • arithmetic_expressions
   46            | • relational_expressions
   47            | • KW_NOT expressions
   48            | • expressions KW_AND expressions
   49            | • expressions KW_OR expressions
   50            | • DEL_LPAR expressions DEL_RPAR
   51            | • expressions DEL_DOT expressions
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   56 arithmetic_expressions: • TK_INTEGER
   57                       | • TK_FLOAT
   58                       | • expressions OP_POWER expressions
   59                       | • expressions OP_MULT expressions
   60                       | • expressions OP_DIV expressions
   61                       | • expressions OP_MOD expressions
   62                       | • expressions OP_PLUS expressions
   63                       | • expressions OP_MINUS expressions
   64                       | • OP_PLUS expressions
   65                       | • OP_MINUS expressions
   66 relational_expressions: • expressions RP_LESS expressions
   67                       | • expressions RP_LESSEQUALS expressions
   68                       | • expressions RP_MORE expressions
   69                       | • expressions RP_MOREEQUALS expressions
   70                       | • expressions RP_EQUALS expressions
   71                       | • expressions RP_NOTEQUALS expressions
   72 assign_expressions: identifier_expressions AP_ASSIGN • expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    AP_HASHASSIGN  shift, and go to state 47
    DEL_LPAR       shift, and go to state 48

    expressions             go to state 206
    identifier_expressions  go to state 50
    arithmetic_expressions  go to state 51
    relational_expressions  go to state 52
    function_statement      go to state 53


State 174

   40 expressions: • identifier_expressions
   41            | • TK_STRING
   42            | • KW_TRUE
   43            | • KW_FALSE
   44            | • function_statement
   45            | • arithmetic_expressions
   46            | • relational_expressions
   47            | • KW_NOT expressions
   48            | • expressions KW_AND expressions
   49            | • expressions KW_OR expressions
   50            | • DEL_LPAR expressions DEL_RPAR
   51            | • expressions DEL_DOT expressions
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   56 arithmetic_expressions: • TK_INTEGER
   57                       | • TK_FLOAT
   58                       | • expressions OP_POWER expressions
   59                       | • expressions OP_MULT expressions
   60                       | • expressions OP_DIV expressions
   61                       | • expressions OP_MOD expressions
   62                       | • expressions OP_PLUS expressions
   63                       | • expressions OP_MINUS expressions
   64                       | • OP_PLUS expressions
   65                       | • OP_MINUS expressions
   66 relational_expressions: • expressions RP_LESS expressions
   67                       | • expressions RP_LESSEQUALS expressions
   68                       | • expressions RP_MORE expressions
   69                       | • expressions RP_MOREEQUALS expressions
   70                       | • expressions RP_EQUALS expressions
   71                       | • expressions RP_NOTEQUALS expressions
   73 assign_expressions: identifier_expressions AP_PLUSASSIGN • expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    AP_HASHASSIGN  shift, and go to state 47
    DEL_LPAR       shift, and go to state 48

    expressions             go to state 207
    identifier_expressions  go to state 50
    arithmetic_expressions  go to state 51
    relational_expressions  go to state 52
    function_statement      go to state 53


State 175

   40 expressions: • identifier_expressions
   41            | • TK_STRING
   42            | • KW_TRUE
   43            | • KW_FALSE
   44            | • function_statement
   45            | • arithmetic_expressions
   46            | • relational_expressions
   47            | • KW_NOT expressions
   48            | • expressions KW_AND expressions
   49            | • expressions KW_OR expressions
   50            | • DEL_LPAR expressions DEL_RPAR
   51            | • expressions DEL_DOT expressions
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   56 arithmetic_expressions: • TK_INTEGER
   57                       | • TK_FLOAT
   58                       | • expressions OP_POWER expressions
   59                       | • expressions OP_MULT expressions
   60                       | • expressions OP_DIV expressions
   61                       | • expressions OP_MOD expressions
   62                       | • expressions OP_PLUS expressions
   63                       | • expressions OP_MINUS expressions
   64                       | • OP_PLUS expressions
   65                       | • OP_MINUS expressions
   66 relational_expressions: • expressions RP_LESS expressions
   67                       | • expressions RP_LESSEQUALS expressions
   68                       | • expressions RP_MORE expressions
   69                       | • expressions RP_MOREEQUALS expressions
   70                       | • expressions RP_EQUALS expressions
   71                       | • expressions RP_NOTEQUALS expressions
   74 assign_expressions: identifier_expressions AP_MINASSIGN • expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    AP_HASHASSIGN  shift, and go to state 47
    DEL_LPAR       shift, and go to state 48

    expressions             go to state 208
    identifier_expressions  go to state 50
    arithmetic_expressions  go to state 51
    relational_expressions  go to state 52
    function_statement      go to state 53


State 176

   40 expressions: • identifier_expressions
   41            | • TK_STRING
   42            | • KW_TRUE
   43            | • KW_FALSE
   44            | • function_statement
   45            | • arithmetic_expressions
   46            | • relational_expressions
   47            | • KW_NOT expressions
   48            | • expressions KW_AND expressions
   49            | • expressions KW_OR expressions
   50            | • DEL_LPAR expressions DEL_RPAR
   51            | • expressions DEL_DOT expressions
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   56 arithmetic_expressions: • TK_INTEGER
   57                       | • TK_FLOAT
   58                       | • expressions OP_POWER expressions
   59                       | • expressions OP_MULT expressions
   60                       | • expressions OP_DIV expressions
   61                       | • expressions OP_MOD expressions
   62                       | • expressions OP_PLUS expressions
   63                       | • expressions OP_MINUS expressions
   64                       | • OP_PLUS expressions
   65                       | • OP_MINUS expressions
   66 relational_expressions: • expressions RP_LESS expressions
   67                       | • expressions RP_LESSEQUALS expressions
   68                       | • expressions RP_MORE expressions
   69                       | • expressions RP_MOREEQUALS expressions
   70                       | • expressions RP_EQUALS expressions
   71                       | • expressions RP_NOTEQUALS expressions
   75 assign_expressions: identifier_expressions AP_MULASSIGN • expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    AP_HASHASSIGN  shift, and go to state 47
    DEL_LPAR       shift, and go to state 48

    expressions             go to state 209
    identifier_expressions  go to state 50
    arithmetic_expressions  go to state 51
    relational_expressions  go to state 52
    function_statement      go to state 53


State 177

   40 expressions: • identifier_expressions
   41            | • TK_STRING
   42            | • KW_TRUE
   43            | • KW_FALSE
   44            | • function_statement
   45            | • arithmetic_expressions
   46            | • relational_expressions
   47            | • KW_NOT expressions
   48            | • expressions KW_AND expressions
   49            | • expressions KW_OR expressions
   50            | • DEL_LPAR expressions DEL_RPAR
   51            | • expressions DEL_DOT expressions
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   56 arithmetic_expressions: • TK_INTEGER
   57                       | • TK_FLOAT
   58                       | • expressions OP_POWER expressions
   59                       | • expressions OP_MULT expressions
   60                       | • expressions OP_DIV expressions
   61                       | • expressions OP_MOD expressions
   62                       | • expressions OP_PLUS expressions
   63                       | • expressions OP_MINUS expressions
   64                       | • OP_PLUS expressions
   65                       | • OP_MINUS expressions
   66 relational_expressions: • expressions RP_LESS expressions
   67                       | • expressions RP_LESSEQUALS expressions
   68                       | • expressions RP_MORE expressions
   69                       | • expressions RP_MOREEQUALS expressions
   70                       | • expressions RP_EQUALS expressions
   71                       | • expressions RP_NOTEQUALS expressions
   76 assign_expressions: identifier_expressions AP_DIVASSIGN • expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    AP_HASHASSIGN  shift, and go to state 47
    DEL_LPAR       shift, and go to state 48

    expressions             go to state 210
    identifier_expressions  go to state 50
    arithmetic_expressions  go to state 51
    relational_expressions  go to state 52
    function_statement      go to state 53


State 178

   40 expressions: • identifier_expressions
   41            | • TK_STRING
   42            | • KW_TRUE
   43            | • KW_FALSE
   44            | • function_statement
   45            | • arithmetic_expressions
   46            | • relational_expressions
   47            | • KW_NOT expressions
   48            | • expressions KW_AND expressions
   49            | • expressions KW_OR expressions
   50            | • DEL_LPAR expressions DEL_RPAR
   51            | • expressions DEL_DOT expressions
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   56 arithmetic_expressions: • TK_INTEGER
   57                       | • TK_FLOAT
   58                       | • expressions OP_POWER expressions
   59                       | • expressions OP_MULT expressions
   60                       | • expressions OP_DIV expressions
   61                       | • expressions OP_MOD expressions
   62                       | • expressions OP_PLUS expressions
   63                       | • expressions OP_MINUS expressions
   64                       | • OP_PLUS expressions
   65                       | • OP_MINUS expressions
   66 relational_expressions: • expressions RP_LESS expressions
   67                       | • expressions RP_LESSEQUALS expressions
   68                       | • expressions RP_MORE expressions
   69                       | • expressions RP_MOREEQUALS expressions
   70                       | • expressions RP_EQUALS expressions
   71                       | • expressions RP_NOTEQUALS expressions
   77 assign_expressions: identifier_expressions AP_MODASSIGN • expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    AP_HASHASSIGN  shift, and go to state 47
    DEL_LPAR       shift, and go to state 48

    expressions             go to state 211
    identifier_expressions  go to state 50
    arithmetic_expressions  go to state 51
    relational_expressions  go to state 52
    function_statement      go to state 53


State 179

   84 statements: assign_expressions DEL_SMCOLON •

    $default  reduce using rule 84 (statements)


State 180

   78 statements: if_statement DEL_SMCOLON •

    $default  reduce using rule 78 (statements)


State 181

   79 statements: for_statement DEL_SMCOLON •

    $default  reduce using rule 79 (statements)


State 182

   80 statements: array_statement DEL_SMCOLON •

    $default  reduce using rule 80 (statements)


State 183

   81 statements: while_statement DEL_SMCOLON •

    $default  reduce using rule 81 (statements)


State 184

   85 statements: return_statement DEL_SMCOLON •

    $default  reduce using rule 85 (statements)


State 185

   86 statements: function_statement DEL_SMCOLON •

    $default  reduce using rule 86 (statements)


State 186

    4 main: KW_DEF KW_MAIN DEL_LPAR DEL_RPAR DEL_COLON body KW_ENDDEF • DEL_SMCOLON

    DEL_SMCOLON  shift, and go to state 212


State 187

  113 body: body variable_declarations •

    $default  reduce using rule 113 (body)


State 188

  115 body: body comp_variables •

    $default  reduce using rule 115 (body)


State 189

  114 body: body constant_declarations •

    $default  reduce using rule 114 (body)


State 190

  112 body: body statements •

    $default  reduce using rule 112 (body)


State 191

   38 comp_functions: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations • DEL_RPAR DEL_COLON body KW_ENDDEF DEL_SMCOLON
   39               | KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations • DEL_RPAR AP_ARROWASSIGN types DEL_COLON body KW_ENDDEF DEL_SMCOLON

    DEL_RPAR  shift, and go to state 213


State 192

   37 comp_identifiers: AP_HASHASSIGN TK_IDENTIFIER DEL_COMMA comp_identifiers •

    $default  reduce using rule 37 (comp_identifiers)


State 193

   35 comp_variable_declarations: comp_identifiers DEL_COLON types DEL_SMCOLON •

    $default  reduce using rule 35 (comp_variable_declarations)


State 194

   48 expressions: expressions • KW_AND expressions
   49            | expressions • KW_OR expressions
   51            | expressions • DEL_DOT expressions
   58 arithmetic_expressions: expressions • OP_POWER expressions
   59                       | expressions • OP_MULT expressions
   60                       | expressions • OP_DIV expressions
   61                       | expressions • OP_MOD expressions
   62                       | expressions • OP_PLUS expressions
   63                       | expressions • OP_MINUS expressions
   66 relational_expressions: expressions • RP_LESS expressions
   67                       | expressions • RP_LESSEQUALS expressions
   68                       | expressions • RP_MORE expressions
   69                       | expressions • RP_MOREEQUALS expressions
   70                       | expressions • RP_EQUALS expressions
   71                       | expressions • RP_NOTEQUALS expressions
  107 function_arg: function_arg DEL_COMMA expressions •  [DEL_RPAR, DEL_COMMA]

    KW_AND         shift, and go to state 72
    KW_OR          shift, and go to state 73
    OP_PLUS        shift, and go to state 74
    OP_MINUS       shift, and go to state 75
    OP_MULT        shift, and go to state 76
    OP_DIV         shift, and go to state 77
    OP_MOD         shift, and go to state 78
    OP_POWER       shift, and go to state 79
    RP_EQUALS      shift, and go to state 80
    RP_NOTEQUALS   shift, and go to state 81
    RP_LESS        shift, and go to state 82
    RP_LESSEQUALS  shift, and go to state 83
    RP_MORE        shift, and go to state 84
    RP_MOREEQUALS  shift, and go to state 85
    DEL_DOT        shift, and go to state 87

    $default  reduce using rule 107 (function_arg)


State 195

    5 types: DEL_LBLOCK DEL_RBLOCK basic_types •

    $default  reduce using rule 5 (types)


State 196

   27 parameter_declarations: TK_IDENTIFIER DEL_LBLOCK DEL_RBLOCK DEL_COLON types •  [DEL_RPAR]
   28                       | TK_IDENTIFIER DEL_LBLOCK DEL_RBLOCK DEL_COLON types • DEL_COMMA parameter_declarations

    DEL_COMMA  shift, and go to state 214

    $default  reduce using rule 27 (parameter_declarations)


State 197

   29 parameter_declarations: TK_IDENTIFIER DEL_COLON types DEL_COMMA parameter_declarations •

    $default  reduce using rule 29 (parameter_declarations)


State 198

   11 identifiers: • TK_IDENTIFIER
   12            | • identifiers DEL_COMMA TK_IDENTIFIER
   19 variable_declarations: • identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK DEL_COLON basic_types DEL_SMCOLON
   21 comp_variables: • identifiers DEL_COLON TK_IDENTIFIER DEL_SMCOLON
   22 constant_declarations: • KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON
   24 functions: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN types DEL_COLON • body KW_ENDDEF DEL_SMCOLON
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   72 assign_expressions: • identifier_expressions AP_ASSIGN expressions
   73                   | • identifier_expressions AP_PLUSASSIGN expressions
   74                   | • identifier_expressions AP_MINASSIGN expressions
   75                   | • identifier_expressions AP_MULASSIGN expressions
   76                   | • identifier_expressions AP_DIVASSIGN expressions
   77                   | • identifier_expressions AP_MODASSIGN expressions
   78 statements: • if_statement DEL_SMCOLON
   79           | • for_statement DEL_SMCOLON
   80           | • array_statement DEL_SMCOLON
   81           | • while_statement DEL_SMCOLON
   82           | • KW_BREAK DEL_SMCOLON
   83           | • KW_CONTINUE DEL_SMCOLON
   84           | • assign_expressions DEL_SMCOLON
   85           | • return_statement DEL_SMCOLON
   86           | • function_statement DEL_SMCOLON
   93 if_statement: • KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   94             | • KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE DEL_COLON command_statements KW_ENDIF
   95 for_statement: • KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   96              | • KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   97 array_statement: • integral_array
   98                | • other_array
   99 integral_array: • TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
  100 other_array: • TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON types KW_IN TK_IDENTIFIER KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types
  101 while_statement: • KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE
  102 return_statement: • KW_RETURN
  103                 | • KW_RETURN expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR
  108 body: • statements
  109     | • variable_declarations
  110     | • constant_declarations
  111     | • comp_variables
  112     | • body statements
  113     | • body variable_declarations
  114     | • body constant_declarations
  115     | • body comp_variables

    TK_IDENTIFIER  shift, and go to state 126
    KW_CONST       shift, and go to state 2
    KW_IF          shift, and go to state 127
    KW_FOR         shift, and go to state 128
    KW_WHILE       shift, and go to state 129
    KW_BREAK       shift, and go to state 130
    KW_CONTINUE    shift, and go to state 131
    KW_RETURN      shift, and go to state 132
    AP_HASHASSIGN  shift, and go to state 47

    identifiers             go to state 133
    variable_declarations   go to state 134
    comp_variables          go to state 135
    constant_declarations   go to state 136
    identifier_expressions  go to state 137
    assign_expressions      go to state 138
    statements              go to state 139
    if_statement            go to state 140
    for_statement           go to state 141
    array_statement         go to state 142
    integral_array          go to state 143
    other_array             go to state 144
    while_statement         go to state 145
    return_statement        go to state 146
    function_statement      go to state 147
    body                    go to state 215


State 199

   23 functions: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR DEL_COLON body KW_ENDDEF • DEL_SMCOLON

    DEL_SMCOLON  shift, and go to state 216


State 200

   40 expressions: • identifier_expressions
   41            | • TK_STRING
   42            | • KW_TRUE
   43            | • KW_FALSE
   44            | • function_statement
   45            | • arithmetic_expressions
   46            | • relational_expressions
   47            | • KW_NOT expressions
   48            | • expressions KW_AND expressions
   49            | • expressions KW_OR expressions
   50            | • DEL_LPAR expressions DEL_RPAR
   51            | • expressions DEL_DOT expressions
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   56 arithmetic_expressions: • TK_INTEGER
   57                       | • TK_FLOAT
   58                       | • expressions OP_POWER expressions
   59                       | • expressions OP_MULT expressions
   60                       | • expressions OP_DIV expressions
   61                       | • expressions OP_MOD expressions
   62                       | • expressions OP_PLUS expressions
   63                       | • expressions OP_MINUS expressions
   64                       | • OP_PLUS expressions
   65                       | • OP_MINUS expressions
   66 relational_expressions: • expressions RP_LESS expressions
   67                       | • expressions RP_LESSEQUALS expressions
   68                       | • expressions RP_MORE expressions
   69                       | • expressions RP_MOREEQUALS expressions
   70                       | • expressions RP_EQUALS expressions
   71                       | • expressions RP_NOTEQUALS expressions
   99 integral_array: TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK • expressions KW_FOR TK_IDENTIFIER DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
  100 other_array: TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK • expressions KW_FOR TK_IDENTIFIER DEL_COLON types KW_IN TK_IDENTIFIER KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    AP_HASHASSIGN  shift, and go to state 47
    DEL_LPAR       shift, and go to state 48

    expressions             go to state 217
    identifier_expressions  go to state 50
    arithmetic_expressions  go to state 51
    relational_expressions  go to state 52
    function_statement      go to state 53


State 201

   20 variable_declarations: TK_IDENTIFIER DEL_LBLOCK TK_INTEGER • DEL_RBLOCK DEL_COLON basic_types DEL_SMCOLON
   54 identifier_expressions: TK_IDENTIFIER DEL_LBLOCK TK_INTEGER • DEL_RBLOCK

    DEL_RBLOCK  shift, and go to state 218


State 202

   48 expressions: expressions • KW_AND expressions
   49            | expressions • KW_OR expressions
   51            | expressions • DEL_DOT expressions
   58 arithmetic_expressions: expressions • OP_POWER expressions
   59                       | expressions • OP_MULT expressions
   60                       | expressions • OP_DIV expressions
   61                       | expressions • OP_MOD expressions
   62                       | expressions • OP_PLUS expressions
   63                       | expressions • OP_MINUS expressions
   66 relational_expressions: expressions • RP_LESS expressions
   67                       | expressions • RP_LESSEQUALS expressions
   68                       | expressions • RP_MORE expressions
   69                       | expressions • RP_MOREEQUALS expressions
   70                       | expressions • RP_EQUALS expressions
   71                       | expressions • RP_NOTEQUALS expressions
   93 if_statement: KW_IF DEL_LPAR expressions • DEL_RPAR DEL_COLON command_statements KW_ENDIF
   94             | KW_IF DEL_LPAR expressions • DEL_RPAR DEL_COLON command_statements KW_ELSE DEL_COLON command_statements KW_ENDIF

    KW_AND         shift, and go to state 72
    KW_OR          shift, and go to state 73
    OP_PLUS        shift, and go to state 74
    OP_MINUS       shift, and go to state 75
    OP_MULT        shift, and go to state 76
    OP_DIV         shift, and go to state 77
    OP_MOD         shift, and go to state 78
    OP_POWER       shift, and go to state 79
    RP_EQUALS      shift, and go to state 80
    RP_NOTEQUALS   shift, and go to state 81
    RP_LESS        shift, and go to state 82
    RP_LESSEQUALS  shift, and go to state 83
    RP_MORE        shift, and go to state 84
    RP_MOREEQUALS  shift, and go to state 85
    DEL_RPAR       shift, and go to state 219
    DEL_DOT        shift, and go to state 87


State 203

   95 for_statement: KW_FOR identifiers KW_IN • DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   96              | KW_FOR identifiers KW_IN • DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR

    DEL_LBLOCK  shift, and go to state 220


State 204

   48 expressions: expressions • KW_AND expressions
   49            | expressions • KW_OR expressions
   51            | expressions • DEL_DOT expressions
   58 arithmetic_expressions: expressions • OP_POWER expressions
   59                       | expressions • OP_MULT expressions
   60                       | expressions • OP_DIV expressions
   61                       | expressions • OP_MOD expressions
   62                       | expressions • OP_PLUS expressions
   63                       | expressions • OP_MINUS expressions
   66 relational_expressions: expressions • RP_LESS expressions
   67                       | expressions • RP_LESSEQUALS expressions
   68                       | expressions • RP_MORE expressions
   69                       | expressions • RP_MOREEQUALS expressions
   70                       | expressions • RP_EQUALS expressions
   71                       | expressions • RP_NOTEQUALS expressions
  101 while_statement: KW_WHILE DEL_LPAR expressions • DEL_RPAR DEL_COLON command_statements KW_ENDWHILE

    KW_AND         shift, and go to state 72
    KW_OR          shift, and go to state 73
    OP_PLUS        shift, and go to state 74
    OP_MINUS       shift, and go to state 75
    OP_MULT        shift, and go to state 76
    OP_DIV         shift, and go to state 77
    OP_MOD         shift, and go to state 78
    OP_POWER       shift, and go to state 79
    RP_EQUALS      shift, and go to state 80
    RP_NOTEQUALS   shift, and go to state 81
    RP_LESS        shift, and go to state 82
    RP_LESSEQUALS  shift, and go to state 83
    RP_MORE        shift, and go to state 84
    RP_MOREEQUALS  shift, and go to state 85
    DEL_RPAR       shift, and go to state 221
    DEL_DOT        shift, and go to state 87


State 205

   21 comp_variables: identifiers DEL_COLON TK_IDENTIFIER • DEL_SMCOLON

    DEL_SMCOLON  shift, and go to state 222


State 206

   48 expressions: expressions • KW_AND expressions
   49            | expressions • KW_OR expressions
   51            | expressions • DEL_DOT expressions
   58 arithmetic_expressions: expressions • OP_POWER expressions
   59                       | expressions • OP_MULT expressions
   60                       | expressions • OP_DIV expressions
   61                       | expressions • OP_MOD expressions
   62                       | expressions • OP_PLUS expressions
   63                       | expressions • OP_MINUS expressions
   66 relational_expressions: expressions • RP_LESS expressions
   67                       | expressions • RP_LESSEQUALS expressions
   68                       | expressions • RP_MORE expressions
   69                       | expressions • RP_MOREEQUALS expressions
   70                       | expressions • RP_EQUALS expressions
   71                       | expressions • RP_NOTEQUALS expressions
   72 assign_expressions: identifier_expressions AP_ASSIGN expressions •  [DEL_SMCOLON]

    KW_AND         shift, and go to state 72
    KW_OR          shift, and go to state 73
    OP_PLUS        shift, and go to state 74
    OP_MINUS       shift, and go to state 75
    OP_MULT        shift, and go to state 76
    OP_DIV         shift, and go to state 77
    OP_MOD         shift, and go to state 78
    OP_POWER       shift, and go to state 79
    RP_EQUALS      shift, and go to state 80
    RP_NOTEQUALS   shift, and go to state 81
    RP_LESS        shift, and go to state 82
    RP_LESSEQUALS  shift, and go to state 83
    RP_MORE        shift, and go to state 84
    RP_MOREEQUALS  shift, and go to state 85
    DEL_DOT        shift, and go to state 87

    $default  reduce using rule 72 (assign_expressions)


State 207

   48 expressions: expressions • KW_AND expressions
   49            | expressions • KW_OR expressions
   51            | expressions • DEL_DOT expressions
   58 arithmetic_expressions: expressions • OP_POWER expressions
   59                       | expressions • OP_MULT expressions
   60                       | expressions • OP_DIV expressions
   61                       | expressions • OP_MOD expressions
   62                       | expressions • OP_PLUS expressions
   63                       | expressions • OP_MINUS expressions
   66 relational_expressions: expressions • RP_LESS expressions
   67                       | expressions • RP_LESSEQUALS expressions
   68                       | expressions • RP_MORE expressions
   69                       | expressions • RP_MOREEQUALS expressions
   70                       | expressions • RP_EQUALS expressions
   71                       | expressions • RP_NOTEQUALS expressions
   73 assign_expressions: identifier_expressions AP_PLUSASSIGN expressions •  [DEL_SMCOLON]

    KW_AND         shift, and go to state 72
    KW_OR          shift, and go to state 73
    OP_PLUS        shift, and go to state 74
    OP_MINUS       shift, and go to state 75
    OP_MULT        shift, and go to state 76
    OP_DIV         shift, and go to state 77
    OP_MOD         shift, and go to state 78
    OP_POWER       shift, and go to state 79
    RP_EQUALS      shift, and go to state 80
    RP_NOTEQUALS   shift, and go to state 81
    RP_LESS        shift, and go to state 82
    RP_LESSEQUALS  shift, and go to state 83
    RP_MORE        shift, and go to state 84
    RP_MOREEQUALS  shift, and go to state 85
    DEL_DOT        shift, and go to state 87

    $default  reduce using rule 73 (assign_expressions)


State 208

   48 expressions: expressions • KW_AND expressions
   49            | expressions • KW_OR expressions
   51            | expressions • DEL_DOT expressions
   58 arithmetic_expressions: expressions • OP_POWER expressions
   59                       | expressions • OP_MULT expressions
   60                       | expressions • OP_DIV expressions
   61                       | expressions • OP_MOD expressions
   62                       | expressions • OP_PLUS expressions
   63                       | expressions • OP_MINUS expressions
   66 relational_expressions: expressions • RP_LESS expressions
   67                       | expressions • RP_LESSEQUALS expressions
   68                       | expressions • RP_MORE expressions
   69                       | expressions • RP_MOREEQUALS expressions
   70                       | expressions • RP_EQUALS expressions
   71                       | expressions • RP_NOTEQUALS expressions
   74 assign_expressions: identifier_expressions AP_MINASSIGN expressions •  [DEL_SMCOLON]

    KW_AND         shift, and go to state 72
    KW_OR          shift, and go to state 73
    OP_PLUS        shift, and go to state 74
    OP_MINUS       shift, and go to state 75
    OP_MULT        shift, and go to state 76
    OP_DIV         shift, and go to state 77
    OP_MOD         shift, and go to state 78
    OP_POWER       shift, and go to state 79
    RP_EQUALS      shift, and go to state 80
    RP_NOTEQUALS   shift, and go to state 81
    RP_LESS        shift, and go to state 82
    RP_LESSEQUALS  shift, and go to state 83
    RP_MORE        shift, and go to state 84
    RP_MOREEQUALS  shift, and go to state 85
    DEL_DOT        shift, and go to state 87

    $default  reduce using rule 74 (assign_expressions)


State 209

   48 expressions: expressions • KW_AND expressions
   49            | expressions • KW_OR expressions
   51            | expressions • DEL_DOT expressions
   58 arithmetic_expressions: expressions • OP_POWER expressions
   59                       | expressions • OP_MULT expressions
   60                       | expressions • OP_DIV expressions
   61                       | expressions • OP_MOD expressions
   62                       | expressions • OP_PLUS expressions
   63                       | expressions • OP_MINUS expressions
   66 relational_expressions: expressions • RP_LESS expressions
   67                       | expressions • RP_LESSEQUALS expressions
   68                       | expressions • RP_MORE expressions
   69                       | expressions • RP_MOREEQUALS expressions
   70                       | expressions • RP_EQUALS expressions
   71                       | expressions • RP_NOTEQUALS expressions
   75 assign_expressions: identifier_expressions AP_MULASSIGN expressions •  [DEL_SMCOLON]

    KW_AND         shift, and go to state 72
    KW_OR          shift, and go to state 73
    OP_PLUS        shift, and go to state 74
    OP_MINUS       shift, and go to state 75
    OP_MULT        shift, and go to state 76
    OP_DIV         shift, and go to state 77
    OP_MOD         shift, and go to state 78
    OP_POWER       shift, and go to state 79
    RP_EQUALS      shift, and go to state 80
    RP_NOTEQUALS   shift, and go to state 81
    RP_LESS        shift, and go to state 82
    RP_LESSEQUALS  shift, and go to state 83
    RP_MORE        shift, and go to state 84
    RP_MOREEQUALS  shift, and go to state 85
    DEL_DOT        shift, and go to state 87

    $default  reduce using rule 75 (assign_expressions)


State 210

   48 expressions: expressions • KW_AND expressions
   49            | expressions • KW_OR expressions
   51            | expressions • DEL_DOT expressions
   58 arithmetic_expressions: expressions • OP_POWER expressions
   59                       | expressions • OP_MULT expressions
   60                       | expressions • OP_DIV expressions
   61                       | expressions • OP_MOD expressions
   62                       | expressions • OP_PLUS expressions
   63                       | expressions • OP_MINUS expressions
   66 relational_expressions: expressions • RP_LESS expressions
   67                       | expressions • RP_LESSEQUALS expressions
   68                       | expressions • RP_MORE expressions
   69                       | expressions • RP_MOREEQUALS expressions
   70                       | expressions • RP_EQUALS expressions
   71                       | expressions • RP_NOTEQUALS expressions
   76 assign_expressions: identifier_expressions AP_DIVASSIGN expressions •  [DEL_SMCOLON]

    KW_AND         shift, and go to state 72
    KW_OR          shift, and go to state 73
    OP_PLUS        shift, and go to state 74
    OP_MINUS       shift, and go to state 75
    OP_MULT        shift, and go to state 76
    OP_DIV         shift, and go to state 77
    OP_MOD         shift, and go to state 78
    OP_POWER       shift, and go to state 79
    RP_EQUALS      shift, and go to state 80
    RP_NOTEQUALS   shift, and go to state 81
    RP_LESS        shift, and go to state 82
    RP_LESSEQUALS  shift, and go to state 83
    RP_MORE        shift, and go to state 84
    RP_MOREEQUALS  shift, and go to state 85
    DEL_DOT        shift, and go to state 87

    $default  reduce using rule 76 (assign_expressions)


State 211

   48 expressions: expressions • KW_AND expressions
   49            | expressions • KW_OR expressions
   51            | expressions • DEL_DOT expressions
   58 arithmetic_expressions: expressions • OP_POWER expressions
   59                       | expressions • OP_MULT expressions
   60                       | expressions • OP_DIV expressions
   61                       | expressions • OP_MOD expressions
   62                       | expressions • OP_PLUS expressions
   63                       | expressions • OP_MINUS expressions
   66 relational_expressions: expressions • RP_LESS expressions
   67                       | expressions • RP_LESSEQUALS expressions
   68                       | expressions • RP_MORE expressions
   69                       | expressions • RP_MOREEQUALS expressions
   70                       | expressions • RP_EQUALS expressions
   71                       | expressions • RP_NOTEQUALS expressions
   77 assign_expressions: identifier_expressions AP_MODASSIGN expressions •  [DEL_SMCOLON]

    KW_AND         shift, and go to state 72
    KW_OR          shift, and go to state 73
    OP_PLUS        shift, and go to state 74
    OP_MINUS       shift, and go to state 75
    OP_MULT        shift, and go to state 76
    OP_DIV         shift, and go to state 77
    OP_MOD         shift, and go to state 78
    OP_POWER       shift, and go to state 79
    RP_EQUALS      shift, and go to state 80
    RP_NOTEQUALS   shift, and go to state 81
    RP_LESS        shift, and go to state 82
    RP_LESSEQUALS  shift, and go to state 83
    RP_MORE        shift, and go to state 84
    RP_MOREEQUALS  shift, and go to state 85
    DEL_DOT        shift, and go to state 87

    $default  reduce using rule 77 (assign_expressions)


State 212

    4 main: KW_DEF KW_MAIN DEL_LPAR DEL_RPAR DEL_COLON body KW_ENDDEF DEL_SMCOLON •

    $default  reduce using rule 4 (main)


State 213

   38 comp_functions: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR • DEL_COLON body KW_ENDDEF DEL_SMCOLON
   39               | KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR • AP_ARROWASSIGN types DEL_COLON body KW_ENDDEF DEL_SMCOLON

    AP_ARROWASSIGN  shift, and go to state 223
    DEL_COLON       shift, and go to state 224


State 214

   25 parameter_declarations: ε •  [DEL_RPAR]
   26                       | • TK_IDENTIFIER DEL_COLON types
   27                       | • TK_IDENTIFIER DEL_LBLOCK DEL_RBLOCK DEL_COLON types
   28                       | • TK_IDENTIFIER DEL_LBLOCK DEL_RBLOCK DEL_COLON types DEL_COMMA parameter_declarations
   28                       | TK_IDENTIFIER DEL_LBLOCK DEL_RBLOCK DEL_COLON types DEL_COMMA • parameter_declarations
   29                       | • TK_IDENTIFIER DEL_COLON types DEL_COMMA parameter_declarations

    TK_IDENTIFIER  shift, and go to state 54

    $default  reduce using rule 25 (parameter_declarations)

    parameter_declarations  go to state 225


State 215

   11 identifiers: • TK_IDENTIFIER
   12            | • identifiers DEL_COMMA TK_IDENTIFIER
   19 variable_declarations: • identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK DEL_COLON basic_types DEL_SMCOLON
   21 comp_variables: • identifiers DEL_COLON TK_IDENTIFIER DEL_SMCOLON
   22 constant_declarations: • KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON
   24 functions: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN types DEL_COLON body • KW_ENDDEF DEL_SMCOLON
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   72 assign_expressions: • identifier_expressions AP_ASSIGN expressions
   73                   | • identifier_expressions AP_PLUSASSIGN expressions
   74                   | • identifier_expressions AP_MINASSIGN expressions
   75                   | • identifier_expressions AP_MULASSIGN expressions
   76                   | • identifier_expressions AP_DIVASSIGN expressions
   77                   | • identifier_expressions AP_MODASSIGN expressions
   78 statements: • if_statement DEL_SMCOLON
   79           | • for_statement DEL_SMCOLON
   80           | • array_statement DEL_SMCOLON
   81           | • while_statement DEL_SMCOLON
   82           | • KW_BREAK DEL_SMCOLON
   83           | • KW_CONTINUE DEL_SMCOLON
   84           | • assign_expressions DEL_SMCOLON
   85           | • return_statement DEL_SMCOLON
   86           | • function_statement DEL_SMCOLON
   93 if_statement: • KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   94             | • KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE DEL_COLON command_statements KW_ENDIF
   95 for_statement: • KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   96              | • KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   97 array_statement: • integral_array
   98                | • other_array
   99 integral_array: • TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
  100 other_array: • TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON types KW_IN TK_IDENTIFIER KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types
  101 while_statement: • KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE
  102 return_statement: • KW_RETURN
  103                 | • KW_RETURN expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR
  112 body: body • statements
  113     | body • variable_declarations
  114     | body • constant_declarations
  115     | body • comp_variables

    TK_IDENTIFIER  shift, and go to state 126
    KW_CONST       shift, and go to state 2
    KW_IF          shift, and go to state 127
    KW_FOR         shift, and go to state 128
    KW_WHILE       shift, and go to state 129
    KW_BREAK       shift, and go to state 130
    KW_CONTINUE    shift, and go to state 131
    KW_ENDDEF      shift, and go to state 226
    KW_RETURN      shift, and go to state 132
    AP_HASHASSIGN  shift, and go to state 47

    identifiers             go to state 133
    variable_declarations   go to state 187
    comp_variables          go to state 188
    constant_declarations   go to state 189
    identifier_expressions  go to state 137
    assign_expressions      go to state 138
    statements              go to state 190
    if_statement            go to state 140
    for_statement           go to state 141
    array_statement         go to state 142
    integral_array          go to state 143
    other_array             go to state 144
    while_statement         go to state 145
    return_statement        go to state 146
    function_statement      go to state 147


State 216

   23 functions: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR DEL_COLON body KW_ENDDEF DEL_SMCOLON •

    $default  reduce using rule 23 (functions)


State 217

   48 expressions: expressions • KW_AND expressions
   49            | expressions • KW_OR expressions
   51            | expressions • DEL_DOT expressions
   58 arithmetic_expressions: expressions • OP_POWER expressions
   59                       | expressions • OP_MULT expressions
   60                       | expressions • OP_DIV expressions
   61                       | expressions • OP_MOD expressions
   62                       | expressions • OP_PLUS expressions
   63                       | expressions • OP_MINUS expressions
   66 relational_expressions: expressions • RP_LESS expressions
   67                       | expressions • RP_LESSEQUALS expressions
   68                       | expressions • RP_MORE expressions
   69                       | expressions • RP_MOREEQUALS expressions
   70                       | expressions • RP_EQUALS expressions
   71                       | expressions • RP_NOTEQUALS expressions
   99 integral_array: TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions • KW_FOR TK_IDENTIFIER DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
  100 other_array: TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions • KW_FOR TK_IDENTIFIER DEL_COLON types KW_IN TK_IDENTIFIER KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types

    KW_FOR         shift, and go to state 227
    KW_AND         shift, and go to state 72
    KW_OR          shift, and go to state 73
    OP_PLUS        shift, and go to state 74
    OP_MINUS       shift, and go to state 75
    OP_MULT        shift, and go to state 76
    OP_DIV         shift, and go to state 77
    OP_MOD         shift, and go to state 78
    OP_POWER       shift, and go to state 79
    RP_EQUALS      shift, and go to state 80
    RP_NOTEQUALS   shift, and go to state 81
    RP_LESS        shift, and go to state 82
    RP_LESSEQUALS  shift, and go to state 83
    RP_MORE        shift, and go to state 84
    RP_MOREEQUALS  shift, and go to state 85
    DEL_DOT        shift, and go to state 87


State 218

   20 variable_declarations: TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK • DEL_COLON basic_types DEL_SMCOLON
   54 identifier_expressions: TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK •  [AP_ASSIGN, AP_PLUSASSIGN, AP_MINASSIGN, AP_MULASSIGN, AP_DIVASSIGN, AP_MODASSIGN]

    DEL_COLON  shift, and go to state 64

    $default  reduce using rule 54 (identifier_expressions)


State 219

   93 if_statement: KW_IF DEL_LPAR expressions DEL_RPAR • DEL_COLON command_statements KW_ENDIF
   94             | KW_IF DEL_LPAR expressions DEL_RPAR • DEL_COLON command_statements KW_ELSE DEL_COLON command_statements KW_ENDIF

    DEL_COLON  shift, and go to state 228


State 220

   40 expressions: • identifier_expressions
   41            | • TK_STRING
   42            | • KW_TRUE
   43            | • KW_FALSE
   44            | • function_statement
   45            | • arithmetic_expressions
   46            | • relational_expressions
   47            | • KW_NOT expressions
   48            | • expressions KW_AND expressions
   49            | • expressions KW_OR expressions
   50            | • DEL_LPAR expressions DEL_RPAR
   51            | • expressions DEL_DOT expressions
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   56 arithmetic_expressions: • TK_INTEGER
   57                       | • TK_FLOAT
   58                       | • expressions OP_POWER expressions
   59                       | • expressions OP_MULT expressions
   60                       | • expressions OP_DIV expressions
   61                       | • expressions OP_MOD expressions
   62                       | • expressions OP_PLUS expressions
   63                       | • expressions OP_MINUS expressions
   64                       | • OP_PLUS expressions
   65                       | • OP_MINUS expressions
   66 relational_expressions: • expressions RP_LESS expressions
   67                       | • expressions RP_LESSEQUALS expressions
   68                       | • expressions RP_MORE expressions
   69                       | • expressions RP_MOREEQUALS expressions
   70                       | • expressions RP_EQUALS expressions
   71                       | • expressions RP_NOTEQUALS expressions
   95 for_statement: KW_FOR identifiers KW_IN DEL_LBLOCK • expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   96              | KW_FOR identifiers KW_IN DEL_LBLOCK • expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    AP_HASHASSIGN  shift, and go to state 47
    DEL_LPAR       shift, and go to state 48

    expressions             go to state 229
    identifier_expressions  go to state 50
    arithmetic_expressions  go to state 51
    relational_expressions  go to state 52
    function_statement      go to state 53


State 221

  101 while_statement: KW_WHILE DEL_LPAR expressions DEL_RPAR • DEL_COLON command_statements KW_ENDWHILE

    DEL_COLON  shift, and go to state 230


State 222

   21 comp_variables: identifiers DEL_COLON TK_IDENTIFIER DEL_SMCOLON •

    $default  reduce using rule 21 (comp_variables)


State 223

    5 types: • DEL_LBLOCK DEL_RBLOCK basic_types
    6      | • basic_types
    7 basic_types: • KW_INT
    8            | • KW_BOOLEAN
    9            | • KW_SCALAR
   10            | • KW_STR
   39 comp_functions: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN • types DEL_COLON body KW_ENDDEF DEL_SMCOLON

    KW_INT      shift, and go to state 32
    KW_SCALAR   shift, and go to state 33
    KW_STR      shift, and go to state 34
    KW_BOOLEAN  shift, and go to state 35
    DEL_LBLOCK  shift, and go to state 118

    types        go to state 231
    basic_types  go to state 120


State 224

   11 identifiers: • TK_IDENTIFIER
   12            | • identifiers DEL_COMMA TK_IDENTIFIER
   19 variable_declarations: • identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK DEL_COLON basic_types DEL_SMCOLON
   21 comp_variables: • identifiers DEL_COLON TK_IDENTIFIER DEL_SMCOLON
   22 constant_declarations: • KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON
   38 comp_functions: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR DEL_COLON • body KW_ENDDEF DEL_SMCOLON
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   72 assign_expressions: • identifier_expressions AP_ASSIGN expressions
   73                   | • identifier_expressions AP_PLUSASSIGN expressions
   74                   | • identifier_expressions AP_MINASSIGN expressions
   75                   | • identifier_expressions AP_MULASSIGN expressions
   76                   | • identifier_expressions AP_DIVASSIGN expressions
   77                   | • identifier_expressions AP_MODASSIGN expressions
   78 statements: • if_statement DEL_SMCOLON
   79           | • for_statement DEL_SMCOLON
   80           | • array_statement DEL_SMCOLON
   81           | • while_statement DEL_SMCOLON
   82           | • KW_BREAK DEL_SMCOLON
   83           | • KW_CONTINUE DEL_SMCOLON
   84           | • assign_expressions DEL_SMCOLON
   85           | • return_statement DEL_SMCOLON
   86           | • function_statement DEL_SMCOLON
   93 if_statement: • KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   94             | • KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE DEL_COLON command_statements KW_ENDIF
   95 for_statement: • KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   96              | • KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   97 array_statement: • integral_array
   98                | • other_array
   99 integral_array: • TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
  100 other_array: • TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON types KW_IN TK_IDENTIFIER KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types
  101 while_statement: • KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE
  102 return_statement: • KW_RETURN
  103                 | • KW_RETURN expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR
  108 body: • statements
  109     | • variable_declarations
  110     | • constant_declarations
  111     | • comp_variables
  112     | • body statements
  113     | • body variable_declarations
  114     | • body constant_declarations
  115     | • body comp_variables

    TK_IDENTIFIER  shift, and go to state 126
    KW_CONST       shift, and go to state 2
    KW_IF          shift, and go to state 127
    KW_FOR         shift, and go to state 128
    KW_WHILE       shift, and go to state 129
    KW_BREAK       shift, and go to state 130
    KW_CONTINUE    shift, and go to state 131
    KW_RETURN      shift, and go to state 132
    AP_HASHASSIGN  shift, and go to state 47

    identifiers             go to state 133
    variable_declarations   go to state 134
    comp_variables          go to state 135
    constant_declarations   go to state 136
    identifier_expressions  go to state 137
    assign_expressions      go to state 138
    statements              go to state 139
    if_statement            go to state 140
    for_statement           go to state 141
    array_statement         go to state 142
    integral_array          go to state 143
    other_array             go to state 144
    while_statement         go to state 145
    return_statement        go to state 146
    function_statement      go to state 147
    body                    go to state 232


State 225

   28 parameter_declarations: TK_IDENTIFIER DEL_LBLOCK DEL_RBLOCK DEL_COLON types DEL_COMMA parameter_declarations •

    $default  reduce using rule 28 (parameter_declarations)


State 226

   24 functions: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN types DEL_COLON body KW_ENDDEF • DEL_SMCOLON

    DEL_SMCOLON  shift, and go to state 233


State 227

   99 integral_array: TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR • TK_IDENTIFIER DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
  100 other_array: TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR • TK_IDENTIFIER DEL_COLON types KW_IN TK_IDENTIFIER KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types

    TK_IDENTIFIER  shift, and go to state 234


State 228

   11 identifiers: • TK_IDENTIFIER
   12            | • identifiers DEL_COMMA TK_IDENTIFIER
   19 variable_declarations: • identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK DEL_COLON basic_types DEL_SMCOLON
   22 constant_declarations: • KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   72 assign_expressions: • identifier_expressions AP_ASSIGN expressions
   73                   | • identifier_expressions AP_PLUSASSIGN expressions
   74                   | • identifier_expressions AP_MINASSIGN expressions
   75                   | • identifier_expressions AP_MULASSIGN expressions
   76                   | • identifier_expressions AP_DIVASSIGN expressions
   77                   | • identifier_expressions AP_MODASSIGN expressions
   78 statements: • if_statement DEL_SMCOLON
   79           | • for_statement DEL_SMCOLON
   80           | • array_statement DEL_SMCOLON
   81           | • while_statement DEL_SMCOLON
   82           | • KW_BREAK DEL_SMCOLON
   83           | • KW_CONTINUE DEL_SMCOLON
   84           | • assign_expressions DEL_SMCOLON
   85           | • return_statement DEL_SMCOLON
   86           | • function_statement DEL_SMCOLON
   87 command_statements: • statements
   88                   | • command_statements statements
   89                   | • command_statements variable_declarations
   90                   | • variable_declarations
   91                   | • command_statements constant_declarations
   92                   | • constant_declarations
   93 if_statement: • KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   93             | KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON • command_statements KW_ENDIF
   94             | • KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE DEL_COLON command_statements KW_ENDIF
   94             | KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON • command_statements KW_ELSE DEL_COLON command_statements KW_ENDIF
   95 for_statement: • KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   96              | • KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   97 array_statement: • integral_array
   98                | • other_array
   99 integral_array: • TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
  100 other_array: • TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON types KW_IN TK_IDENTIFIER KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types
  101 while_statement: • KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE
  102 return_statement: • KW_RETURN
  103                 | • KW_RETURN expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 126
    KW_CONST       shift, and go to state 2
    KW_IF          shift, and go to state 127
    KW_FOR         shift, and go to state 128
    KW_WHILE       shift, and go to state 129
    KW_BREAK       shift, and go to state 130
    KW_CONTINUE    shift, and go to state 131
    KW_RETURN      shift, and go to state 132
    AP_HASHASSIGN  shift, and go to state 47

    identifiers             go to state 8
    variable_declarations   go to state 235
    constant_declarations   go to state 236
    identifier_expressions  go to state 137
    assign_expressions      go to state 138
    statements              go to state 237
    command_statements      go to state 238
    if_statement            go to state 140
    for_statement           go to state 141
    array_statement         go to state 142
    integral_array          go to state 143
    other_array             go to state 144
    while_statement         go to state 145
    return_statement        go to state 146
    function_statement      go to state 147


State 229

   48 expressions: expressions • KW_AND expressions
   49            | expressions • KW_OR expressions
   51            | expressions • DEL_DOT expressions
   58 arithmetic_expressions: expressions • OP_POWER expressions
   59                       | expressions • OP_MULT expressions
   60                       | expressions • OP_DIV expressions
   61                       | expressions • OP_MOD expressions
   62                       | expressions • OP_PLUS expressions
   63                       | expressions • OP_MINUS expressions
   66 relational_expressions: expressions • RP_LESS expressions
   67                       | expressions • RP_LESSEQUALS expressions
   68                       | expressions • RP_MORE expressions
   69                       | expressions • RP_MOREEQUALS expressions
   70                       | expressions • RP_EQUALS expressions
   71                       | expressions • RP_NOTEQUALS expressions
   95 for_statement: KW_FOR identifiers KW_IN DEL_LBLOCK expressions • DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   96              | KW_FOR identifiers KW_IN DEL_LBLOCK expressions • DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR

    KW_AND         shift, and go to state 72
    KW_OR          shift, and go to state 73
    OP_PLUS        shift, and go to state 74
    OP_MINUS       shift, and go to state 75
    OP_MULT        shift, and go to state 76
    OP_DIV         shift, and go to state 77
    OP_MOD         shift, and go to state 78
    OP_POWER       shift, and go to state 79
    RP_EQUALS      shift, and go to state 80
    RP_NOTEQUALS   shift, and go to state 81
    RP_LESS        shift, and go to state 82
    RP_LESSEQUALS  shift, and go to state 83
    RP_MORE        shift, and go to state 84
    RP_MOREEQUALS  shift, and go to state 85
    DEL_COLON      shift, and go to state 239
    DEL_DOT        shift, and go to state 87


State 230

   11 identifiers: • TK_IDENTIFIER
   12            | • identifiers DEL_COMMA TK_IDENTIFIER
   19 variable_declarations: • identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK DEL_COLON basic_types DEL_SMCOLON
   22 constant_declarations: • KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   72 assign_expressions: • identifier_expressions AP_ASSIGN expressions
   73                   | • identifier_expressions AP_PLUSASSIGN expressions
   74                   | • identifier_expressions AP_MINASSIGN expressions
   75                   | • identifier_expressions AP_MULASSIGN expressions
   76                   | • identifier_expressions AP_DIVASSIGN expressions
   77                   | • identifier_expressions AP_MODASSIGN expressions
   78 statements: • if_statement DEL_SMCOLON
   79           | • for_statement DEL_SMCOLON
   80           | • array_statement DEL_SMCOLON
   81           | • while_statement DEL_SMCOLON
   82           | • KW_BREAK DEL_SMCOLON
   83           | • KW_CONTINUE DEL_SMCOLON
   84           | • assign_expressions DEL_SMCOLON
   85           | • return_statement DEL_SMCOLON
   86           | • function_statement DEL_SMCOLON
   87 command_statements: • statements
   88                   | • command_statements statements
   89                   | • command_statements variable_declarations
   90                   | • variable_declarations
   91                   | • command_statements constant_declarations
   92                   | • constant_declarations
   93 if_statement: • KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   94             | • KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE DEL_COLON command_statements KW_ENDIF
   95 for_statement: • KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   96              | • KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   97 array_statement: • integral_array
   98                | • other_array
   99 integral_array: • TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
  100 other_array: • TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON types KW_IN TK_IDENTIFIER KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types
  101 while_statement: • KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE
  101                | KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON • command_statements KW_ENDWHILE
  102 return_statement: • KW_RETURN
  103                 | • KW_RETURN expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 126
    KW_CONST       shift, and go to state 2
    KW_IF          shift, and go to state 127
    KW_FOR         shift, and go to state 128
    KW_WHILE       shift, and go to state 129
    KW_BREAK       shift, and go to state 130
    KW_CONTINUE    shift, and go to state 131
    KW_RETURN      shift, and go to state 132
    AP_HASHASSIGN  shift, and go to state 47

    identifiers             go to state 8
    variable_declarations   go to state 235
    constant_declarations   go to state 236
    identifier_expressions  go to state 137
    assign_expressions      go to state 138
    statements              go to state 237
    command_statements      go to state 240
    if_statement            go to state 140
    for_statement           go to state 141
    array_statement         go to state 142
    integral_array          go to state 143
    other_array             go to state 144
    while_statement         go to state 145
    return_statement        go to state 146
    function_statement      go to state 147


State 231

   39 comp_functions: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN types • DEL_COLON body KW_ENDDEF DEL_SMCOLON

    DEL_COLON  shift, and go to state 241


State 232

   11 identifiers: • TK_IDENTIFIER
   12            | • identifiers DEL_COMMA TK_IDENTIFIER
   19 variable_declarations: • identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK DEL_COLON basic_types DEL_SMCOLON
   21 comp_variables: • identifiers DEL_COLON TK_IDENTIFIER DEL_SMCOLON
   22 constant_declarations: • KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON
   38 comp_functions: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR DEL_COLON body • KW_ENDDEF DEL_SMCOLON
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   72 assign_expressions: • identifier_expressions AP_ASSIGN expressions
   73                   | • identifier_expressions AP_PLUSASSIGN expressions
   74                   | • identifier_expressions AP_MINASSIGN expressions
   75                   | • identifier_expressions AP_MULASSIGN expressions
   76                   | • identifier_expressions AP_DIVASSIGN expressions
   77                   | • identifier_expressions AP_MODASSIGN expressions
   78 statements: • if_statement DEL_SMCOLON
   79           | • for_statement DEL_SMCOLON
   80           | • array_statement DEL_SMCOLON
   81           | • while_statement DEL_SMCOLON
   82           | • KW_BREAK DEL_SMCOLON
   83           | • KW_CONTINUE DEL_SMCOLON
   84           | • assign_expressions DEL_SMCOLON
   85           | • return_statement DEL_SMCOLON
   86           | • function_statement DEL_SMCOLON
   93 if_statement: • KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   94             | • KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE DEL_COLON command_statements KW_ENDIF
   95 for_statement: • KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   96              | • KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   97 array_statement: • integral_array
   98                | • other_array
   99 integral_array: • TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
  100 other_array: • TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON types KW_IN TK_IDENTIFIER KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types
  101 while_statement: • KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE
  102 return_statement: • KW_RETURN
  103                 | • KW_RETURN expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR
  112 body: body • statements
  113     | body • variable_declarations
  114     | body • constant_declarations
  115     | body • comp_variables

    TK_IDENTIFIER  shift, and go to state 126
    KW_CONST       shift, and go to state 2
    KW_IF          shift, and go to state 127
    KW_FOR         shift, and go to state 128
    KW_WHILE       shift, and go to state 129
    KW_BREAK       shift, and go to state 130
    KW_CONTINUE    shift, and go to state 131
    KW_ENDDEF      shift, and go to state 242
    KW_RETURN      shift, and go to state 132
    AP_HASHASSIGN  shift, and go to state 47

    identifiers             go to state 133
    variable_declarations   go to state 187
    comp_variables          go to state 188
    constant_declarations   go to state 189
    identifier_expressions  go to state 137
    assign_expressions      go to state 138
    statements              go to state 190
    if_statement            go to state 140
    for_statement           go to state 141
    array_statement         go to state 142
    integral_array          go to state 143
    other_array             go to state 144
    while_statement         go to state 145
    return_statement        go to state 146
    function_statement      go to state 147


State 233

   24 functions: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN types DEL_COLON body KW_ENDDEF DEL_SMCOLON •

    $default  reduce using rule 24 (functions)


State 234

   99 integral_array: TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER • DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
  100 other_array: TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER • DEL_COLON types KW_IN TK_IDENTIFIER KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types

    DEL_COLON  shift, and go to state 243


State 235

   90 command_statements: variable_declarations •

    $default  reduce using rule 90 (command_statements)


State 236

   92 command_statements: constant_declarations •

    $default  reduce using rule 92 (command_statements)


State 237

   87 command_statements: statements •

    $default  reduce using rule 87 (command_statements)


State 238

   11 identifiers: • TK_IDENTIFIER
   12            | • identifiers DEL_COMMA TK_IDENTIFIER
   19 variable_declarations: • identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK DEL_COLON basic_types DEL_SMCOLON
   22 constant_declarations: • KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   72 assign_expressions: • identifier_expressions AP_ASSIGN expressions
   73                   | • identifier_expressions AP_PLUSASSIGN expressions
   74                   | • identifier_expressions AP_MINASSIGN expressions
   75                   | • identifier_expressions AP_MULASSIGN expressions
   76                   | • identifier_expressions AP_DIVASSIGN expressions
   77                   | • identifier_expressions AP_MODASSIGN expressions
   78 statements: • if_statement DEL_SMCOLON
   79           | • for_statement DEL_SMCOLON
   80           | • array_statement DEL_SMCOLON
   81           | • while_statement DEL_SMCOLON
   82           | • KW_BREAK DEL_SMCOLON
   83           | • KW_CONTINUE DEL_SMCOLON
   84           | • assign_expressions DEL_SMCOLON
   85           | • return_statement DEL_SMCOLON
   86           | • function_statement DEL_SMCOLON
   88 command_statements: command_statements • statements
   89                   | command_statements • variable_declarations
   91                   | command_statements • constant_declarations
   93 if_statement: • KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   93             | KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements • KW_ENDIF
   94             | • KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE DEL_COLON command_statements KW_ENDIF
   94             | KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements • KW_ELSE DEL_COLON command_statements KW_ENDIF
   95 for_statement: • KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   96              | • KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   97 array_statement: • integral_array
   98                | • other_array
   99 integral_array: • TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
  100 other_array: • TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON types KW_IN TK_IDENTIFIER KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types
  101 while_statement: • KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE
  102 return_statement: • KW_RETURN
  103                 | • KW_RETURN expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 126
    KW_CONST       shift, and go to state 2
    KW_IF          shift, and go to state 127
    KW_ELSE        shift, and go to state 244
    KW_ENDIF       shift, and go to state 245
    KW_FOR         shift, and go to state 128
    KW_WHILE       shift, and go to state 129
    KW_BREAK       shift, and go to state 130
    KW_CONTINUE    shift, and go to state 131
    KW_RETURN      shift, and go to state 132
    AP_HASHASSIGN  shift, and go to state 47

    identifiers             go to state 8
    variable_declarations   go to state 246
    constant_declarations   go to state 247
    identifier_expressions  go to state 137
    assign_expressions      go to state 138
    statements              go to state 248
    if_statement            go to state 140
    for_statement           go to state 141
    array_statement         go to state 142
    integral_array          go to state 143
    other_array             go to state 144
    while_statement         go to state 145
    return_statement        go to state 146
    function_statement      go to state 147


State 239

   40 expressions: • identifier_expressions
   41            | • TK_STRING
   42            | • KW_TRUE
   43            | • KW_FALSE
   44            | • function_statement
   45            | • arithmetic_expressions
   46            | • relational_expressions
   47            | • KW_NOT expressions
   48            | • expressions KW_AND expressions
   49            | • expressions KW_OR expressions
   50            | • DEL_LPAR expressions DEL_RPAR
   51            | • expressions DEL_DOT expressions
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   56 arithmetic_expressions: • TK_INTEGER
   57                       | • TK_FLOAT
   58                       | • expressions OP_POWER expressions
   59                       | • expressions OP_MULT expressions
   60                       | • expressions OP_DIV expressions
   61                       | • expressions OP_MOD expressions
   62                       | • expressions OP_PLUS expressions
   63                       | • expressions OP_MINUS expressions
   64                       | • OP_PLUS expressions
   65                       | • OP_MINUS expressions
   66 relational_expressions: • expressions RP_LESS expressions
   67                       | • expressions RP_LESSEQUALS expressions
   68                       | • expressions RP_MORE expressions
   69                       | • expressions RP_MOREEQUALS expressions
   70                       | • expressions RP_EQUALS expressions
   71                       | • expressions RP_NOTEQUALS expressions
   95 for_statement: KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON • expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   96              | KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON • expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    AP_HASHASSIGN  shift, and go to state 47
    DEL_LPAR       shift, and go to state 48

    expressions             go to state 249
    identifier_expressions  go to state 50
    arithmetic_expressions  go to state 51
    relational_expressions  go to state 52
    function_statement      go to state 53


State 240

   11 identifiers: • TK_IDENTIFIER
   12            | • identifiers DEL_COMMA TK_IDENTIFIER
   19 variable_declarations: • identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK DEL_COLON basic_types DEL_SMCOLON
   22 constant_declarations: • KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   72 assign_expressions: • identifier_expressions AP_ASSIGN expressions
   73                   | • identifier_expressions AP_PLUSASSIGN expressions
   74                   | • identifier_expressions AP_MINASSIGN expressions
   75                   | • identifier_expressions AP_MULASSIGN expressions
   76                   | • identifier_expressions AP_DIVASSIGN expressions
   77                   | • identifier_expressions AP_MODASSIGN expressions
   78 statements: • if_statement DEL_SMCOLON
   79           | • for_statement DEL_SMCOLON
   80           | • array_statement DEL_SMCOLON
   81           | • while_statement DEL_SMCOLON
   82           | • KW_BREAK DEL_SMCOLON
   83           | • KW_CONTINUE DEL_SMCOLON
   84           | • assign_expressions DEL_SMCOLON
   85           | • return_statement DEL_SMCOLON
   86           | • function_statement DEL_SMCOLON
   88 command_statements: command_statements • statements
   89                   | command_statements • variable_declarations
   91                   | command_statements • constant_declarations
   93 if_statement: • KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   94             | • KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE DEL_COLON command_statements KW_ENDIF
   95 for_statement: • KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   96              | • KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   97 array_statement: • integral_array
   98                | • other_array
   99 integral_array: • TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
  100 other_array: • TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON types KW_IN TK_IDENTIFIER KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types
  101 while_statement: • KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE
  101                | KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements • KW_ENDWHILE
  102 return_statement: • KW_RETURN
  103                 | • KW_RETURN expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 126
    KW_CONST       shift, and go to state 2
    KW_IF          shift, and go to state 127
    KW_FOR         shift, and go to state 128
    KW_WHILE       shift, and go to state 129
    KW_ENDWHILE    shift, and go to state 250
    KW_BREAK       shift, and go to state 130
    KW_CONTINUE    shift, and go to state 131
    KW_RETURN      shift, and go to state 132
    AP_HASHASSIGN  shift, and go to state 47

    identifiers             go to state 8
    variable_declarations   go to state 246
    constant_declarations   go to state 247
    identifier_expressions  go to state 137
    assign_expressions      go to state 138
    statements              go to state 248
    if_statement            go to state 140
    for_statement           go to state 141
    array_statement         go to state 142
    integral_array          go to state 143
    other_array             go to state 144
    while_statement         go to state 145
    return_statement        go to state 146
    function_statement      go to state 147


State 241

   11 identifiers: • TK_IDENTIFIER
   12            | • identifiers DEL_COMMA TK_IDENTIFIER
   19 variable_declarations: • identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK DEL_COLON basic_types DEL_SMCOLON
   21 comp_variables: • identifiers DEL_COLON TK_IDENTIFIER DEL_SMCOLON
   22 constant_declarations: • KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON
   39 comp_functions: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN types DEL_COLON • body KW_ENDDEF DEL_SMCOLON
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   72 assign_expressions: • identifier_expressions AP_ASSIGN expressions
   73                   | • identifier_expressions AP_PLUSASSIGN expressions
   74                   | • identifier_expressions AP_MINASSIGN expressions
   75                   | • identifier_expressions AP_MULASSIGN expressions
   76                   | • identifier_expressions AP_DIVASSIGN expressions
   77                   | • identifier_expressions AP_MODASSIGN expressions
   78 statements: • if_statement DEL_SMCOLON
   79           | • for_statement DEL_SMCOLON
   80           | • array_statement DEL_SMCOLON
   81           | • while_statement DEL_SMCOLON
   82           | • KW_BREAK DEL_SMCOLON
   83           | • KW_CONTINUE DEL_SMCOLON
   84           | • assign_expressions DEL_SMCOLON
   85           | • return_statement DEL_SMCOLON
   86           | • function_statement DEL_SMCOLON
   93 if_statement: • KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   94             | • KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE DEL_COLON command_statements KW_ENDIF
   95 for_statement: • KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   96              | • KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   97 array_statement: • integral_array
   98                | • other_array
   99 integral_array: • TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
  100 other_array: • TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON types KW_IN TK_IDENTIFIER KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types
  101 while_statement: • KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE
  102 return_statement: • KW_RETURN
  103                 | • KW_RETURN expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR
  108 body: • statements
  109     | • variable_declarations
  110     | • constant_declarations
  111     | • comp_variables
  112     | • body statements
  113     | • body variable_declarations
  114     | • body constant_declarations
  115     | • body comp_variables

    TK_IDENTIFIER  shift, and go to state 126
    KW_CONST       shift, and go to state 2
    KW_IF          shift, and go to state 127
    KW_FOR         shift, and go to state 128
    KW_WHILE       shift, and go to state 129
    KW_BREAK       shift, and go to state 130
    KW_CONTINUE    shift, and go to state 131
    KW_RETURN      shift, and go to state 132
    AP_HASHASSIGN  shift, and go to state 47

    identifiers             go to state 133
    variable_declarations   go to state 134
    comp_variables          go to state 135
    constant_declarations   go to state 136
    identifier_expressions  go to state 137
    assign_expressions      go to state 138
    statements              go to state 139
    if_statement            go to state 140
    for_statement           go to state 141
    array_statement         go to state 142
    integral_array          go to state 143
    other_array             go to state 144
    while_statement         go to state 145
    return_statement        go to state 146
    function_statement      go to state 147
    body                    go to state 251


State 242

   38 comp_functions: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR DEL_COLON body KW_ENDDEF • DEL_SMCOLON

    DEL_SMCOLON  shift, and go to state 252


State 243

    5 types: • DEL_LBLOCK DEL_RBLOCK basic_types
    6      | • basic_types
    7 basic_types: • KW_INT
    8            | • KW_BOOLEAN
    9            | • KW_SCALAR
   10            | • KW_STR
   99 integral_array: TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON • TK_INTEGER DEL_RBLOCK DEL_COLON types
  100 other_array: TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON • types KW_IN TK_IDENTIFIER KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types

    TK_INTEGER  shift, and go to state 253
    KW_INT      shift, and go to state 32
    KW_SCALAR   shift, and go to state 33
    KW_STR      shift, and go to state 34
    KW_BOOLEAN  shift, and go to state 35
    DEL_LBLOCK  shift, and go to state 118

    types        go to state 254
    basic_types  go to state 120


State 244

   94 if_statement: KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE • DEL_COLON command_statements KW_ENDIF

    DEL_COLON  shift, and go to state 255


State 245

   93 if_statement: KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF •

    $default  reduce using rule 93 (if_statement)


State 246

   89 command_statements: command_statements variable_declarations •

    $default  reduce using rule 89 (command_statements)


State 247

   91 command_statements: command_statements constant_declarations •

    $default  reduce using rule 91 (command_statements)


State 248

   88 command_statements: command_statements statements •

    $default  reduce using rule 88 (command_statements)


State 249

   48 expressions: expressions • KW_AND expressions
   49            | expressions • KW_OR expressions
   51            | expressions • DEL_DOT expressions
   58 arithmetic_expressions: expressions • OP_POWER expressions
   59                       | expressions • OP_MULT expressions
   60                       | expressions • OP_DIV expressions
   61                       | expressions • OP_MOD expressions
   62                       | expressions • OP_PLUS expressions
   63                       | expressions • OP_MINUS expressions
   66 relational_expressions: expressions • RP_LESS expressions
   67                       | expressions • RP_LESSEQUALS expressions
   68                       | expressions • RP_MORE expressions
   69                       | expressions • RP_MOREEQUALS expressions
   70                       | expressions • RP_EQUALS expressions
   71                       | expressions • RP_NOTEQUALS expressions
   95 for_statement: KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions • DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   96              | KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions • DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR

    KW_AND         shift, and go to state 72
    KW_OR          shift, and go to state 73
    OP_PLUS        shift, and go to state 74
    OP_MINUS       shift, and go to state 75
    OP_MULT        shift, and go to state 76
    OP_DIV         shift, and go to state 77
    OP_MOD         shift, and go to state 78
    OP_POWER       shift, and go to state 79
    RP_EQUALS      shift, and go to state 80
    RP_NOTEQUALS   shift, and go to state 81
    RP_LESS        shift, and go to state 82
    RP_LESSEQUALS  shift, and go to state 83
    RP_MORE        shift, and go to state 84
    RP_MOREEQUALS  shift, and go to state 85
    DEL_RBLOCK     shift, and go to state 256
    DEL_COLON      shift, and go to state 257
    DEL_DOT        shift, and go to state 87


State 250

  101 while_statement: KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE •

    $default  reduce using rule 101 (while_statement)


State 251

   11 identifiers: • TK_IDENTIFIER
   12            | • identifiers DEL_COMMA TK_IDENTIFIER
   19 variable_declarations: • identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK DEL_COLON basic_types DEL_SMCOLON
   21 comp_variables: • identifiers DEL_COLON TK_IDENTIFIER DEL_SMCOLON
   22 constant_declarations: • KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON
   39 comp_functions: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN types DEL_COLON body • KW_ENDDEF DEL_SMCOLON
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   72 assign_expressions: • identifier_expressions AP_ASSIGN expressions
   73                   | • identifier_expressions AP_PLUSASSIGN expressions
   74                   | • identifier_expressions AP_MINASSIGN expressions
   75                   | • identifier_expressions AP_MULASSIGN expressions
   76                   | • identifier_expressions AP_DIVASSIGN expressions
   77                   | • identifier_expressions AP_MODASSIGN expressions
   78 statements: • if_statement DEL_SMCOLON
   79           | • for_statement DEL_SMCOLON
   80           | • array_statement DEL_SMCOLON
   81           | • while_statement DEL_SMCOLON
   82           | • KW_BREAK DEL_SMCOLON
   83           | • KW_CONTINUE DEL_SMCOLON
   84           | • assign_expressions DEL_SMCOLON
   85           | • return_statement DEL_SMCOLON
   86           | • function_statement DEL_SMCOLON
   93 if_statement: • KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   94             | • KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE DEL_COLON command_statements KW_ENDIF
   95 for_statement: • KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   96              | • KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   97 array_statement: • integral_array
   98                | • other_array
   99 integral_array: • TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
  100 other_array: • TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON types KW_IN TK_IDENTIFIER KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types
  101 while_statement: • KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE
  102 return_statement: • KW_RETURN
  103                 | • KW_RETURN expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR
  112 body: body • statements
  113     | body • variable_declarations
  114     | body • constant_declarations
  115     | body • comp_variables

    TK_IDENTIFIER  shift, and go to state 126
    KW_CONST       shift, and go to state 2
    KW_IF          shift, and go to state 127
    KW_FOR         shift, and go to state 128
    KW_WHILE       shift, and go to state 129
    KW_BREAK       shift, and go to state 130
    KW_CONTINUE    shift, and go to state 131
    KW_ENDDEF      shift, and go to state 258
    KW_RETURN      shift, and go to state 132
    AP_HASHASSIGN  shift, and go to state 47

    identifiers             go to state 133
    variable_declarations   go to state 187
    comp_variables          go to state 188
    constant_declarations   go to state 189
    identifier_expressions  go to state 137
    assign_expressions      go to state 138
    statements              go to state 190
    if_statement            go to state 140
    for_statement           go to state 141
    array_statement         go to state 142
    integral_array          go to state 143
    other_array             go to state 144
    while_statement         go to state 145
    return_statement        go to state 146
    function_statement      go to state 147


State 252

   38 comp_functions: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR DEL_COLON body KW_ENDDEF DEL_SMCOLON •

    $default  reduce using rule 38 (comp_functions)


State 253

   99 integral_array: TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON TK_INTEGER • DEL_RBLOCK DEL_COLON types

    DEL_RBLOCK  shift, and go to state 259


State 254

  100 other_array: TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON types • KW_IN TK_IDENTIFIER KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types

    KW_IN  shift, and go to state 260


State 255

   11 identifiers: • TK_IDENTIFIER
   12            | • identifiers DEL_COMMA TK_IDENTIFIER
   19 variable_declarations: • identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK DEL_COLON basic_types DEL_SMCOLON
   22 constant_declarations: • KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   72 assign_expressions: • identifier_expressions AP_ASSIGN expressions
   73                   | • identifier_expressions AP_PLUSASSIGN expressions
   74                   | • identifier_expressions AP_MINASSIGN expressions
   75                   | • identifier_expressions AP_MULASSIGN expressions
   76                   | • identifier_expressions AP_DIVASSIGN expressions
   77                   | • identifier_expressions AP_MODASSIGN expressions
   78 statements: • if_statement DEL_SMCOLON
   79           | • for_statement DEL_SMCOLON
   80           | • array_statement DEL_SMCOLON
   81           | • while_statement DEL_SMCOLON
   82           | • KW_BREAK DEL_SMCOLON
   83           | • KW_CONTINUE DEL_SMCOLON
   84           | • assign_expressions DEL_SMCOLON
   85           | • return_statement DEL_SMCOLON
   86           | • function_statement DEL_SMCOLON
   87 command_statements: • statements
   88                   | • command_statements statements
   89                   | • command_statements variable_declarations
   90                   | • variable_declarations
   91                   | • command_statements constant_declarations
   92                   | • constant_declarations
   93 if_statement: • KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   94             | • KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE DEL_COLON command_statements KW_ENDIF
   94             | KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE DEL_COLON • command_statements KW_ENDIF
   95 for_statement: • KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   96              | • KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   97 array_statement: • integral_array
   98                | • other_array
   99 integral_array: • TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
  100 other_array: • TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON types KW_IN TK_IDENTIFIER KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types
  101 while_statement: • KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE
  102 return_statement: • KW_RETURN
  103                 | • KW_RETURN expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 126
    KW_CONST       shift, and go to state 2
    KW_IF          shift, and go to state 127
    KW_FOR         shift, and go to state 128
    KW_WHILE       shift, and go to state 129
    KW_BREAK       shift, and go to state 130
    KW_CONTINUE    shift, and go to state 131
    KW_RETURN      shift, and go to state 132
    AP_HASHASSIGN  shift, and go to state 47

    identifiers             go to state 8
    variable_declarations   go to state 235
    constant_declarations   go to state 236
    identifier_expressions  go to state 137
    assign_expressions      go to state 138
    statements              go to state 237
    command_statements      go to state 261
    if_statement            go to state 140
    for_statement           go to state 141
    array_statement         go to state 142
    integral_array          go to state 143
    other_array             go to state 144
    while_statement         go to state 145
    return_statement        go to state 146
    function_statement      go to state 147


State 256

   95 for_statement: KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK • DEL_COLON command_statements KW_ENDFOR

    DEL_COLON  shift, and go to state 262


State 257

   40 expressions: • identifier_expressions
   41            | • TK_STRING
   42            | • KW_TRUE
   43            | • KW_FALSE
   44            | • function_statement
   45            | • arithmetic_expressions
   46            | • relational_expressions
   47            | • KW_NOT expressions
   48            | • expressions KW_AND expressions
   49            | • expressions KW_OR expressions
   50            | • DEL_LPAR expressions DEL_RPAR
   51            | • expressions DEL_DOT expressions
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   56 arithmetic_expressions: • TK_INTEGER
   57                       | • TK_FLOAT
   58                       | • expressions OP_POWER expressions
   59                       | • expressions OP_MULT expressions
   60                       | • expressions OP_DIV expressions
   61                       | • expressions OP_MOD expressions
   62                       | • expressions OP_PLUS expressions
   63                       | • expressions OP_MINUS expressions
   64                       | • OP_PLUS expressions
   65                       | • OP_MINUS expressions
   66 relational_expressions: • expressions RP_LESS expressions
   67                       | • expressions RP_LESSEQUALS expressions
   68                       | • expressions RP_MORE expressions
   69                       | • expressions RP_MOREEQUALS expressions
   70                       | • expressions RP_EQUALS expressions
   71                       | • expressions RP_NOTEQUALS expressions
   96 for_statement: KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON • expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    AP_HASHASSIGN  shift, and go to state 47
    DEL_LPAR       shift, and go to state 48

    expressions             go to state 263
    identifier_expressions  go to state 50
    arithmetic_expressions  go to state 51
    relational_expressions  go to state 52
    function_statement      go to state 53


State 258

   39 comp_functions: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN types DEL_COLON body KW_ENDDEF • DEL_SMCOLON

    DEL_SMCOLON  shift, and go to state 264


State 259

   99 integral_array: TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON TK_INTEGER DEL_RBLOCK • DEL_COLON types

    DEL_COLON  shift, and go to state 265


State 260

  100 other_array: TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON types KW_IN • TK_IDENTIFIER KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types

    TK_IDENTIFIER  shift, and go to state 266


State 261

   11 identifiers: • TK_IDENTIFIER
   12            | • identifiers DEL_COMMA TK_IDENTIFIER
   19 variable_declarations: • identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK DEL_COLON basic_types DEL_SMCOLON
   22 constant_declarations: • KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   72 assign_expressions: • identifier_expressions AP_ASSIGN expressions
   73                   | • identifier_expressions AP_PLUSASSIGN expressions
   74                   | • identifier_expressions AP_MINASSIGN expressions
   75                   | • identifier_expressions AP_MULASSIGN expressions
   76                   | • identifier_expressions AP_DIVASSIGN expressions
   77                   | • identifier_expressions AP_MODASSIGN expressions
   78 statements: • if_statement DEL_SMCOLON
   79           | • for_statement DEL_SMCOLON
   80           | • array_statement DEL_SMCOLON
   81           | • while_statement DEL_SMCOLON
   82           | • KW_BREAK DEL_SMCOLON
   83           | • KW_CONTINUE DEL_SMCOLON
   84           | • assign_expressions DEL_SMCOLON
   85           | • return_statement DEL_SMCOLON
   86           | • function_statement DEL_SMCOLON
   88 command_statements: command_statements • statements
   89                   | command_statements • variable_declarations
   91                   | command_statements • constant_declarations
   93 if_statement: • KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   94             | • KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE DEL_COLON command_statements KW_ENDIF
   94             | KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE DEL_COLON command_statements • KW_ENDIF
   95 for_statement: • KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   96              | • KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   97 array_statement: • integral_array
   98                | • other_array
   99 integral_array: • TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
  100 other_array: • TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON types KW_IN TK_IDENTIFIER KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types
  101 while_statement: • KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE
  102 return_statement: • KW_RETURN
  103                 | • KW_RETURN expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 126
    KW_CONST       shift, and go to state 2
    KW_IF          shift, and go to state 127
    KW_ENDIF       shift, and go to state 267
    KW_FOR         shift, and go to state 128
    KW_WHILE       shift, and go to state 129
    KW_BREAK       shift, and go to state 130
    KW_CONTINUE    shift, and go to state 131
    KW_RETURN      shift, and go to state 132
    AP_HASHASSIGN  shift, and go to state 47

    identifiers             go to state 8
    variable_declarations   go to state 246
    constant_declarations   go to state 247
    identifier_expressions  go to state 137
    assign_expressions      go to state 138
    statements              go to state 248
    if_statement            go to state 140
    for_statement           go to state 141
    array_statement         go to state 142
    integral_array          go to state 143
    other_array             go to state 144
    while_statement         go to state 145
    return_statement        go to state 146
    function_statement      go to state 147


State 262

   11 identifiers: • TK_IDENTIFIER
   12            | • identifiers DEL_COMMA TK_IDENTIFIER
   19 variable_declarations: • identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK DEL_COLON basic_types DEL_SMCOLON
   22 constant_declarations: • KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   72 assign_expressions: • identifier_expressions AP_ASSIGN expressions
   73                   | • identifier_expressions AP_PLUSASSIGN expressions
   74                   | • identifier_expressions AP_MINASSIGN expressions
   75                   | • identifier_expressions AP_MULASSIGN expressions
   76                   | • identifier_expressions AP_DIVASSIGN expressions
   77                   | • identifier_expressions AP_MODASSIGN expressions
   78 statements: • if_statement DEL_SMCOLON
   79           | • for_statement DEL_SMCOLON
   80           | • array_statement DEL_SMCOLON
   81           | • while_statement DEL_SMCOLON
   82           | • KW_BREAK DEL_SMCOLON
   83           | • KW_CONTINUE DEL_SMCOLON
   84           | • assign_expressions DEL_SMCOLON
   85           | • return_statement DEL_SMCOLON
   86           | • function_statement DEL_SMCOLON
   87 command_statements: • statements
   88                   | • command_statements statements
   89                   | • command_statements variable_declarations
   90                   | • variable_declarations
   91                   | • command_statements constant_declarations
   92                   | • constant_declarations
   93 if_statement: • KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   94             | • KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE DEL_COLON command_statements KW_ENDIF
   95 for_statement: • KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   95              | KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON • command_statements KW_ENDFOR
   96              | • KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   97 array_statement: • integral_array
   98                | • other_array
   99 integral_array: • TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
  100 other_array: • TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON types KW_IN TK_IDENTIFIER KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types
  101 while_statement: • KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE
  102 return_statement: • KW_RETURN
  103                 | • KW_RETURN expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 126
    KW_CONST       shift, and go to state 2
    KW_IF          shift, and go to state 127
    KW_FOR         shift, and go to state 128
    KW_WHILE       shift, and go to state 129
    KW_BREAK       shift, and go to state 130
    KW_CONTINUE    shift, and go to state 131
    KW_RETURN      shift, and go to state 132
    AP_HASHASSIGN  shift, and go to state 47

    identifiers             go to state 8
    variable_declarations   go to state 235
    constant_declarations   go to state 236
    identifier_expressions  go to state 137
    assign_expressions      go to state 138
    statements              go to state 237
    command_statements      go to state 268
    if_statement            go to state 140
    for_statement           go to state 141
    array_statement         go to state 142
    integral_array          go to state 143
    other_array             go to state 144
    while_statement         go to state 145
    return_statement        go to state 146
    function_statement      go to state 147


State 263

   48 expressions: expressions • KW_AND expressions
   49            | expressions • KW_OR expressions
   51            | expressions • DEL_DOT expressions
   58 arithmetic_expressions: expressions • OP_POWER expressions
   59                       | expressions • OP_MULT expressions
   60                       | expressions • OP_DIV expressions
   61                       | expressions • OP_MOD expressions
   62                       | expressions • OP_PLUS expressions
   63                       | expressions • OP_MINUS expressions
   66 relational_expressions: expressions • RP_LESS expressions
   67                       | expressions • RP_LESSEQUALS expressions
   68                       | expressions • RP_MORE expressions
   69                       | expressions • RP_MOREEQUALS expressions
   70                       | expressions • RP_EQUALS expressions
   71                       | expressions • RP_NOTEQUALS expressions
   96 for_statement: KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions • DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR

    KW_AND         shift, and go to state 72
    KW_OR          shift, and go to state 73
    OP_PLUS        shift, and go to state 74
    OP_MINUS       shift, and go to state 75
    OP_MULT        shift, and go to state 76
    OP_DIV         shift, and go to state 77
    OP_MOD         shift, and go to state 78
    OP_POWER       shift, and go to state 79
    RP_EQUALS      shift, and go to state 80
    RP_NOTEQUALS   shift, and go to state 81
    RP_LESS        shift, and go to state 82
    RP_LESSEQUALS  shift, and go to state 83
    RP_MORE        shift, and go to state 84
    RP_MOREEQUALS  shift, and go to state 85
    DEL_RBLOCK     shift, and go to state 269
    DEL_DOT        shift, and go to state 87


State 264

   39 comp_functions: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN types DEL_COLON body KW_ENDDEF DEL_SMCOLON •

    $default  reduce using rule 39 (comp_functions)


State 265

    5 types: • DEL_LBLOCK DEL_RBLOCK basic_types
    6      | • basic_types
    7 basic_types: • KW_INT
    8            | • KW_BOOLEAN
    9            | • KW_SCALAR
   10            | • KW_STR
   99 integral_array: TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON • types

    KW_INT      shift, and go to state 32
    KW_SCALAR   shift, and go to state 33
    KW_STR      shift, and go to state 34
    KW_BOOLEAN  shift, and go to state 35
    DEL_LBLOCK  shift, and go to state 118

    types        go to state 270
    basic_types  go to state 120


State 266

  100 other_array: TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON types KW_IN TK_IDENTIFIER • KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types

    KW_OF  shift, and go to state 271


State 267

   94 if_statement: KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE DEL_COLON command_statements KW_ENDIF •

    $default  reduce using rule 94 (if_statement)


State 268

   11 identifiers: • TK_IDENTIFIER
   12            | • identifiers DEL_COMMA TK_IDENTIFIER
   19 variable_declarations: • identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK DEL_COLON basic_types DEL_SMCOLON
   22 constant_declarations: • KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   72 assign_expressions: • identifier_expressions AP_ASSIGN expressions
   73                   | • identifier_expressions AP_PLUSASSIGN expressions
   74                   | • identifier_expressions AP_MINASSIGN expressions
   75                   | • identifier_expressions AP_MULASSIGN expressions
   76                   | • identifier_expressions AP_DIVASSIGN expressions
   77                   | • identifier_expressions AP_MODASSIGN expressions
   78 statements: • if_statement DEL_SMCOLON
   79           | • for_statement DEL_SMCOLON
   80           | • array_statement DEL_SMCOLON
   81           | • while_statement DEL_SMCOLON
   82           | • KW_BREAK DEL_SMCOLON
   83           | • KW_CONTINUE DEL_SMCOLON
   84           | • assign_expressions DEL_SMCOLON
   85           | • return_statement DEL_SMCOLON
   86           | • function_statement DEL_SMCOLON
   88 command_statements: command_statements • statements
   89                   | command_statements • variable_declarations
   91                   | command_statements • constant_declarations
   93 if_statement: • KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   94             | • KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE DEL_COLON command_statements KW_ENDIF
   95 for_statement: • KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   95              | KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements • KW_ENDFOR
   96              | • KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   97 array_statement: • integral_array
   98                | • other_array
   99 integral_array: • TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
  100 other_array: • TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON types KW_IN TK_IDENTIFIER KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types
  101 while_statement: • KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE
  102 return_statement: • KW_RETURN
  103                 | • KW_RETURN expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 126
    KW_CONST       shift, and go to state 2
    KW_IF          shift, and go to state 127
    KW_FOR         shift, and go to state 128
    KW_ENDFOR      shift, and go to state 272
    KW_WHILE       shift, and go to state 129
    KW_BREAK       shift, and go to state 130
    KW_CONTINUE    shift, and go to state 131
    KW_RETURN      shift, and go to state 132
    AP_HASHASSIGN  shift, and go to state 47

    identifiers             go to state 8
    variable_declarations   go to state 246
    constant_declarations   go to state 247
    identifier_expressions  go to state 137
    assign_expressions      go to state 138
    statements              go to state 248
    if_statement            go to state 140
    for_statement           go to state 141
    array_statement         go to state 142
    integral_array          go to state 143
    other_array             go to state 144
    while_statement         go to state 145
    return_statement        go to state 146
    function_statement      go to state 147


State 269

   96 for_statement: KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK • DEL_COLON command_statements KW_ENDFOR

    DEL_COLON  shift, and go to state 273


State 270

   99 integral_array: TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types •

    $default  reduce using rule 99 (integral_array)


State 271

  100 other_array: TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON types KW_IN TK_IDENTIFIER KW_OF • TK_INTEGER DEL_RBLOCK DEL_COLON types

    TK_INTEGER  shift, and go to state 274


State 272

   95 for_statement: KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR •

    $default  reduce using rule 95 (for_statement)


State 273

   11 identifiers: • TK_IDENTIFIER
   12            | • identifiers DEL_COMMA TK_IDENTIFIER
   19 variable_declarations: • identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK DEL_COLON basic_types DEL_SMCOLON
   22 constant_declarations: • KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   72 assign_expressions: • identifier_expressions AP_ASSIGN expressions
   73                   | • identifier_expressions AP_PLUSASSIGN expressions
   74                   | • identifier_expressions AP_MINASSIGN expressions
   75                   | • identifier_expressions AP_MULASSIGN expressions
   76                   | • identifier_expressions AP_DIVASSIGN expressions
   77                   | • identifier_expressions AP_MODASSIGN expressions
   78 statements: • if_statement DEL_SMCOLON
   79           | • for_statement DEL_SMCOLON
   80           | • array_statement DEL_SMCOLON
   81           | • while_statement DEL_SMCOLON
   82           | • KW_BREAK DEL_SMCOLON
   83           | • KW_CONTINUE DEL_SMCOLON
   84           | • assign_expressions DEL_SMCOLON
   85           | • return_statement DEL_SMCOLON
   86           | • function_statement DEL_SMCOLON
   87 command_statements: • statements
   88                   | • command_statements statements
   89                   | • command_statements variable_declarations
   90                   | • variable_declarations
   91                   | • command_statements constant_declarations
   92                   | • constant_declarations
   93 if_statement: • KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   94             | • KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE DEL_COLON command_statements KW_ENDIF
   95 for_statement: • KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   96              | • KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   96              | KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON • command_statements KW_ENDFOR
   97 array_statement: • integral_array
   98                | • other_array
   99 integral_array: • TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
  100 other_array: • TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON types KW_IN TK_IDENTIFIER KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types
  101 while_statement: • KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE
  102 return_statement: • KW_RETURN
  103                 | • KW_RETURN expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 126
    KW_CONST       shift, and go to state 2
    KW_IF          shift, and go to state 127
    KW_FOR         shift, and go to state 128
    KW_WHILE       shift, and go to state 129
    KW_BREAK       shift, and go to state 130
    KW_CONTINUE    shift, and go to state 131
    KW_RETURN      shift, and go to state 132
    AP_HASHASSIGN  shift, and go to state 47

    identifiers             go to state 8
    variable_declarations   go to state 235
    constant_declarations   go to state 236
    identifier_expressions  go to state 137
    assign_expressions      go to state 138
    statements              go to state 237
    command_statements      go to state 275
    if_statement            go to state 140
    for_statement           go to state 141
    array_statement         go to state 142
    integral_array          go to state 143
    other_array             go to state 144
    while_statement         go to state 145
    return_statement        go to state 146
    function_statement      go to state 147


State 274

  100 other_array: TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON types KW_IN TK_IDENTIFIER KW_OF TK_INTEGER • DEL_RBLOCK DEL_COLON types

    DEL_RBLOCK  shift, and go to state 276


State 275

   11 identifiers: • TK_IDENTIFIER
   12            | • identifiers DEL_COMMA TK_IDENTIFIER
   19 variable_declarations: • identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK DEL_COLON basic_types DEL_SMCOLON
   22 constant_declarations: • KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON
   52 identifier_expressions: • TK_IDENTIFIER
   53                       | • AP_HASHASSIGN TK_IDENTIFIER
   54                       | • TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   55                       | • TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   72 assign_expressions: • identifier_expressions AP_ASSIGN expressions
   73                   | • identifier_expressions AP_PLUSASSIGN expressions
   74                   | • identifier_expressions AP_MINASSIGN expressions
   75                   | • identifier_expressions AP_MULASSIGN expressions
   76                   | • identifier_expressions AP_DIVASSIGN expressions
   77                   | • identifier_expressions AP_MODASSIGN expressions
   78 statements: • if_statement DEL_SMCOLON
   79           | • for_statement DEL_SMCOLON
   80           | • array_statement DEL_SMCOLON
   81           | • while_statement DEL_SMCOLON
   82           | • KW_BREAK DEL_SMCOLON
   83           | • KW_CONTINUE DEL_SMCOLON
   84           | • assign_expressions DEL_SMCOLON
   85           | • return_statement DEL_SMCOLON
   86           | • function_statement DEL_SMCOLON
   88 command_statements: command_statements • statements
   89                   | command_statements • variable_declarations
   91                   | command_statements • constant_declarations
   93 if_statement: • KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   94             | • KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE DEL_COLON command_statements KW_ENDIF
   95 for_statement: • KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   96              | • KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   96              | KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements • KW_ENDFOR
   97 array_statement: • integral_array
   98                | • other_array
   99 integral_array: • TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
  100 other_array: • TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON types KW_IN TK_IDENTIFIER KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types
  101 while_statement: • KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE
  102 return_statement: • KW_RETURN
  103                 | • KW_RETURN expressions
  104 function_statement: • TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 126
    KW_CONST       shift, and go to state 2
    KW_IF          shift, and go to state 127
    KW_FOR         shift, and go to state 128
    KW_ENDFOR      shift, and go to state 277
    KW_WHILE       shift, and go to state 129
    KW_BREAK       shift, and go to state 130
    KW_CONTINUE    shift, and go to state 131
    KW_RETURN      shift, and go to state 132
    AP_HASHASSIGN  shift, and go to state 47

    identifiers             go to state 8
    variable_declarations   go to state 246
    constant_declarations   go to state 247
    identifier_expressions  go to state 137
    assign_expressions      go to state 138
    statements              go to state 248
    if_statement            go to state 140
    for_statement           go to state 141
    array_statement         go to state 142
    integral_array          go to state 143
    other_array             go to state 144
    while_statement         go to state 145
    return_statement        go to state 146
    function_statement      go to state 147


State 276

  100 other_array: TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON types KW_IN TK_IDENTIFIER KW_OF TK_INTEGER DEL_RBLOCK • DEL_COLON types

    DEL_COLON  shift, and go to state 278


State 277

   96 for_statement: KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR •

    $default  reduce using rule 96 (for_statement)


State 278

    5 types: • DEL_LBLOCK DEL_RBLOCK basic_types
    6      | • basic_types
    7 basic_types: • KW_INT
    8            | • KW_BOOLEAN
    9            | • KW_SCALAR
   10            | • KW_STR
  100 other_array: TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON types KW_IN TK_IDENTIFIER KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON • types

    KW_INT      shift, and go to state 32
    KW_SCALAR   shift, and go to state 33
    KW_STR      shift, and go to state 34
    KW_BOOLEAN  shift, and go to state 35
    DEL_LBLOCK  shift, and go to state 118

    types        go to state 279
    basic_types  go to state 120


State 279

  100 other_array: TK_IDENTIFIER AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR TK_IDENTIFIER DEL_COLON types KW_IN TK_IDENTIFIER KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types •

    $default  reduce using rule 100 (other_array)
