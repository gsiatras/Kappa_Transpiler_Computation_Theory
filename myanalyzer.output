Nonterminals useless in grammar

    comp_functions


Terminals unused in grammar

    DEL_DOT


Rules useless in grammar

  101 comp_functions: KW_DEF identifiers DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN types DEL_COLON body return_statement KW_ENDDEF DEL_SMCOLON


Grammar

    0 $accept: program $end

    1 program: main_body

    2 main_body: decl_body main
    3          | main

    4 main: KW_DEF KW_MAIN DEL_LPAR DEL_RPAR DEL_COLON body KW_ENDDEF DEL_SMCOLON

    5 types: DEL_LBLOCK DEL_RBLOCK basic_types
    6      | basic_types

    7 basic_types: KW_INT
    8            | KW_BOOLEAN
    9            | KW_SCALAR
   10            | KW_STR

   11 identifiers: TK_IDENTIFIER
   12            | identifiers DEL_COMMA TK_IDENTIFIER

   13 decl_body: decl_body declarations
   14          | declarations

   15 declarations: variable_declarations
   16             | complex_type_declarations
   17             | constant_declarations
   18             | functions

   19 variable_declarations: identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK basic_types DEL_SMCOLON

   21 constant_declarations: KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON

   22 function_declarations: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN types

   23 functions: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR DEL_COLON body KW_ENDDEF DEL_SMCOLON
   24          | KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN types DEL_COLON body KW_ENDDEF DEL_SMCOLON

   25 parameter_declarations: TK_IDENTIFIER DEL_COLON types
   26                       | TK_IDENTIFIER DEL_COLON types DEL_COMMA parameter_declarations

   27 complex_type_declarations: KW_COMP identifiers DEL_COLON comp_variable_declarations function_declarations KW_ENDCOMP

   28 comp_variable_declarations: AP_HASHASSIGN identifiers DEL_COLON types DEL_SMCOLON

   29 expressions: identifier_expressions
   30            | TK_STRING
   31            | KW_TRUE
   32            | KW_FALSE
   33            | function_statement
   34            | arithmetic_expressions
   35            | relational_expressions
   36            | KW_NOT expressions
   37            | expressions KW_AND expressions
   38            | expressions KW_OR expressions
   39            | DEL_LPAR expressions DEL_RPAR

   40 identifier_expressions: TK_IDENTIFIER
   41                       | TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK

   43 arithmetic_expressions: TK_INTEGER
   44                       | TK_FLOAT
   45                       | expressions OP_POWER expressions
   46                       | expressions OP_MULT expressions
   47                       | expressions OP_DIV expressions
   48                       | expressions OP_MOD expressions
   49                       | expressions OP_PLUS expressions
   50                       | expressions OP_MINUS expressions
   51                       | OP_PLUS expressions
   52                       | OP_MINUS expressions

   53 relational_expressions: expressions RP_LESS expressions
   54                       | expressions RP_LESSEQUALS expressions
   55                       | expressions RP_MORE expressions
   56                       | expressions RP_MOREEQUALS expressions
   57                       | expressions RP_EQUALS expressions
   58                       | expressions RP_NOTEQUALS expressions

   59 assign_expressions: identifier_expressions AP_ASSIGN expressions
   60                   | identifier_expressions AP_PLUSASSIGN expressions
   61                   | identifier_expressions AP_MINASSIGN expressions
   62                   | identifier_expressions AP_MULASSIGN expressions
   63                   | identifier_expressions AP_DIVASSIGN expressions
   64                   | identifier_expressions AP_MODASSIGN expressions

   65 statements: if_statement DEL_SMCOLON
   66           | for_statement DEL_SMCOLON
   67           | array_statement DEL_SMCOLON
   68           | while_statement DEL_SMCOLON
   69           | KW_BREAK DEL_SMCOLON
   70           | KW_CONTINUE DEL_SMCOLON
   71           | assign_expressions DEL_SMCOLON
   72           | return_statement DEL_SMCOLON
   73           | function_statement DEL_SMCOLON

   74 command_statements: statements
   75                   | command_statements statements
   76                   | command_statements variable_declarations
   77                   | variable_declarations
   78                   | command_statements constant_declarations
   79                   | constant_declarations

   80 if_statement: KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   81             | KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE command_statements KW_ENDIF

   82 for_statement: KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   83              | KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements DEL_SMCOLON KW_ENDFOR

   84 array_statement: integral_array
   85                | other_array

   86 integral_array: identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types

   87 other_array: identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON types KW_IN identifiers KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types

   88 while_statement: KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE

   89 return_statement: KW_RETURN
   90                 | KW_RETURN expressions

   91 function_statement: TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

   92 function_arg: Îµ
   93             | expressions
   94             | function_arg DEL_COMMA expressions

   95 body: statements
   96     | variable_declarations
   97     | constant_declarations
   98     | body statements
   99     | body variable_declarations
  100     | body constant_declarations


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TK_IDENTIFIER <crepr> (258) 11 12 20 22 23 24 25 26 40 41 42 91
    TK_INTEGER <crepr> (259) 20 41 43 86 87
    TK_FLOAT <crepr> (260) 44
    TK_STRING <crepr> (261) 30
    KW_INT (262) 7
    KW_SCALAR (263) 9
    KW_STR (264) 10
    KW_BOOLEAN (265) 8
    KW_TRUE (266) 31
    KW_FALSE (267) 32
    KW_CONST (268) 21
    KW_IF (269) 80 81
    KW_ELSE (270) 81
    KW_ENDIF (271) 80 81
    KW_FOR (272) 82 83 86 87
    KW_IN (273) 82 83 87
    KW_ENDFOR (274) 82 83
    KW_WHILE (275) 88
    KW_ENDWHILE (276) 88
    KW_BREAK (277) 69
    KW_CONTINUE (278) 70
    KW_NOT (279) 36
    KW_AND (280) 37
    KW_OR (281) 38
    KW_DEF (282) 4 22 23 24
    KW_ENDDEF (283) 4 23 24
    KW_MAIN (284) 4
    KW_RETURN (285) 89 90
    KW_COMP (286) 27
    KW_ENDCOMP (287) 27
    KW_OF (288) 87
    OP_PLUS (289) 49 51
    OP_MINUS (290) 50 52
    OP_MULT (291) 46
    OP_DIV (292) 47
    OP_MOD (293) 48
    OP_POWER (294) 45
    RP_EQUALS (295) 57
    RP_NOTEQUALS (296) 58
    RP_LESS (297) 53
    RP_LESSEQUALS (298) 54
    RP_MORE (299) 55
    RP_MOREEQUALS (300) 56
    AP_ASSIGN (301) 21 59
    AP_HASHASSIGN (302) 28
    AP_PLUSASSIGN (303) 60
    AP_MINASSIGN (304) 61
    AP_MULASSIGN (305) 62
    AP_DIVASSIGN (306) 63
    AP_MODASSIGN (307) 64
    AP_COLONASSIGN (308) 86 87
    AP_ARROWASSIGN (309) 22 24
    DEL_SMCOLON (310) 4 19 20 21 23 24 28 65 66 67 68 69 70 71 72 73 83
    DEL_LPAR (311) 4 22 23 24 39 80 81 88 91
    DEL_RPAR (312) 4 22 23 24 39 80 81 88 91
    DEL_COMMA (313) 12 26 94
    DEL_LBLOCK (314) 5 20 41 42 82 83 86 87
    DEL_RBLOCK (315) 5 20 41 42 82 83 86 87
    DEL_COLON (316) 4 19 21 23 24 25 26 27 28 80 81 82 83 86 87 88
    DEL_DOT (317)


Nonterminals, with rules where they appear

    $accept (63)
        on left: 0
    program <crepr> (64)
        on left: 1
        on right: 0
    main_body <crepr> (65)
        on left: 2 3
        on right: 1
    main <crepr> (66)
        on left: 4
        on right: 2 3
    types <crepr> (67)
        on left: 5 6
        on right: 21 22 24 25 26 28 86 87
    basic_types <crepr> (68)
        on left: 7 8 9 10
        on right: 5 6 19 20
    identifiers <crepr> (69)
        on left: 11 12
        on right: 12 19 21 27 28 82 83 86 87
    decl_body <crepr> (70)
        on left: 13 14
        on right: 2 13
    declarations <crepr> (71)
        on left: 15 16 17 18
        on right: 13 14
    variable_declarations <crepr> (72)
        on left: 19 20
        on right: 15 76 77 96 99
    constant_declarations <crepr> (73)
        on left: 21
        on right: 17 78 79 97 100
    function_declarations <crepr> (74)
        on left: 22
        on right: 27
    functions <crepr> (75)
        on left: 23 24
        on right: 18
    parameter_declarations <crepr> (76)
        on left: 25 26
        on right: 22 23 24 26
    complex_type_declarations <crepr> (77)
        on left: 27
        on right: 16
    comp_variable_declarations <crepr> (78)
        on left: 28
        on right: 27
    expressions <crepr> (79)
        on left: 29 30 31 32 33 34 35 36 37 38 39
        on right: 21 36 37 38 39 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 80 81 82 83 86 87 88 90 93 94
    identifier_expressions <crepr> (80)
        on left: 40 41 42
        on right: 29 59 60 61 62 63 64
    arithmetic_expressions <crepr> (81)
        on left: 43 44 45 46 47 48 49 50 51 52
        on right: 34
    relational_expressions <crepr> (82)
        on left: 53 54 55 56 57 58
        on right: 35
    assign_expressions <crepr> (83)
        on left: 59 60 61 62 63 64
        on right: 71
    statements <crepr> (84)
        on left: 65 66 67 68 69 70 71 72 73
        on right: 74 75 95 98
    command_statements <crepr> (85)
        on left: 74 75 76 77 78 79
        on right: 75 76 78 80 81 82 83 88
    if_statement <crepr> (86)
        on left: 80 81
        on right: 65
    for_statement <crepr> (87)
        on left: 82 83
        on right: 66
    array_statement <crepr> (88)
        on left: 84 85
        on right: 67
    integral_array <crepr> (89)
        on left: 86
        on right: 84
    other_array <crepr> (90)
        on left: 87
        on right: 85
    while_statement <crepr> (91)
        on left: 88
        on right: 68
    return_statement <crepr> (92)
        on left: 89 90
        on right: 72
    function_statement <crepr> (93)
        on left: 91
        on right: 33 73
    function_arg <crepr> (94)
        on left: 92 93 94
        on right: 91 94
    body <crepr> (95)
        on left: 95 96 97 98 99 100
        on right: 4 23 24 98 99 100


State 0

    0 $accept: â¢ program $end
    1 program: â¢ main_body
    2 main_body: â¢ decl_body main
    3          | â¢ main
    4 main: â¢ KW_DEF KW_MAIN DEL_LPAR DEL_RPAR DEL_COLON body KW_ENDDEF DEL_SMCOLON
   11 identifiers: â¢ TK_IDENTIFIER
   12            | â¢ identifiers DEL_COMMA TK_IDENTIFIER
   13 decl_body: â¢ decl_body declarations
   14          | â¢ declarations
   15 declarations: â¢ variable_declarations
   16             | â¢ complex_type_declarations
   17             | â¢ constant_declarations
   18             | â¢ functions
   19 variable_declarations: â¢ identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK basic_types DEL_SMCOLON
   21 constant_declarations: â¢ KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON
   23 functions: â¢ KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR DEL_COLON body KW_ENDDEF DEL_SMCOLON
   24          | â¢ KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN types DEL_COLON body KW_ENDDEF DEL_SMCOLON
   27 complex_type_declarations: â¢ KW_COMP identifiers DEL_COLON comp_variable_declarations function_declarations KW_ENDCOMP

    TK_IDENTIFIER  shift, and go to state 1
    KW_CONST       shift, and go to state 2
    KW_DEF         shift, and go to state 3
    KW_COMP        shift, and go to state 4

    program                    go to state 5
    main_body                  go to state 6
    main                       go to state 7
    identifiers                go to state 8
    decl_body                  go to state 9
    declarations               go to state 10
    variable_declarations      go to state 11
    constant_declarations      go to state 12
    functions                  go to state 13
    complex_type_declarations  go to state 14


State 1

   11 identifiers: TK_IDENTIFIER â¢  [DEL_COMMA, DEL_COLON]
   20 variable_declarations: TK_IDENTIFIER â¢ DEL_LBLOCK TK_INTEGER DEL_RBLOCK basic_types DEL_SMCOLON

    DEL_LBLOCK  shift, and go to state 15

    $default  reduce using rule 11 (identifiers)


State 2

   11 identifiers: â¢ TK_IDENTIFIER
   12            | â¢ identifiers DEL_COMMA TK_IDENTIFIER
   21 constant_declarations: KW_CONST â¢ identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON

    TK_IDENTIFIER  shift, and go to state 16

    identifiers  go to state 17


State 3

    4 main: KW_DEF â¢ KW_MAIN DEL_LPAR DEL_RPAR DEL_COLON body KW_ENDDEF DEL_SMCOLON
   23 functions: KW_DEF â¢ TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR DEL_COLON body KW_ENDDEF DEL_SMCOLON
   24          | KW_DEF â¢ TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN types DEL_COLON body KW_ENDDEF DEL_SMCOLON

    TK_IDENTIFIER  shift, and go to state 18
    KW_MAIN        shift, and go to state 19


State 4

   11 identifiers: â¢ TK_IDENTIFIER
   12            | â¢ identifiers DEL_COMMA TK_IDENTIFIER
   27 complex_type_declarations: KW_COMP â¢ identifiers DEL_COLON comp_variable_declarations function_declarations KW_ENDCOMP

    TK_IDENTIFIER  shift, and go to state 16

    identifiers  go to state 20


State 5

    0 $accept: program â¢ $end

    $end  shift, and go to state 21


State 6

    1 program: main_body â¢

    $default  reduce using rule 1 (program)


State 7

    3 main_body: main â¢

    $default  reduce using rule 3 (main_body)


State 8

   12 identifiers: identifiers â¢ DEL_COMMA TK_IDENTIFIER
   19 variable_declarations: identifiers â¢ DEL_COLON basic_types DEL_SMCOLON

    DEL_COMMA  shift, and go to state 22
    DEL_COLON  shift, and go to state 23


State 9

    2 main_body: decl_body â¢ main
    4 main: â¢ KW_DEF KW_MAIN DEL_LPAR DEL_RPAR DEL_COLON body KW_ENDDEF DEL_SMCOLON
   11 identifiers: â¢ TK_IDENTIFIER
   12            | â¢ identifiers DEL_COMMA TK_IDENTIFIER
   13 decl_body: decl_body â¢ declarations
   15 declarations: â¢ variable_declarations
   16             | â¢ complex_type_declarations
   17             | â¢ constant_declarations
   18             | â¢ functions
   19 variable_declarations: â¢ identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK basic_types DEL_SMCOLON
   21 constant_declarations: â¢ KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON
   23 functions: â¢ KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR DEL_COLON body KW_ENDDEF DEL_SMCOLON
   24          | â¢ KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN types DEL_COLON body KW_ENDDEF DEL_SMCOLON
   27 complex_type_declarations: â¢ KW_COMP identifiers DEL_COLON comp_variable_declarations function_declarations KW_ENDCOMP

    TK_IDENTIFIER  shift, and go to state 1
    KW_CONST       shift, and go to state 2
    KW_DEF         shift, and go to state 3
    KW_COMP        shift, and go to state 4

    main                       go to state 24
    identifiers                go to state 8
    declarations               go to state 25
    variable_declarations      go to state 11
    constant_declarations      go to state 12
    functions                  go to state 13
    complex_type_declarations  go to state 14


State 10

   14 decl_body: declarations â¢

    $default  reduce using rule 14 (decl_body)


State 11

   15 declarations: variable_declarations â¢

    $default  reduce using rule 15 (declarations)


State 12

   17 declarations: constant_declarations â¢

    $default  reduce using rule 17 (declarations)


State 13

   18 declarations: functions â¢

    $default  reduce using rule 18 (declarations)


State 14

   16 declarations: complex_type_declarations â¢

    $default  reduce using rule 16 (declarations)


State 15

   20 variable_declarations: TK_IDENTIFIER DEL_LBLOCK â¢ TK_INTEGER DEL_RBLOCK basic_types DEL_SMCOLON

    TK_INTEGER  shift, and go to state 26


State 16

   11 identifiers: TK_IDENTIFIER â¢

    $default  reduce using rule 11 (identifiers)


State 17

   12 identifiers: identifiers â¢ DEL_COMMA TK_IDENTIFIER
   21 constant_declarations: KW_CONST identifiers â¢ AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON

    AP_ASSIGN  shift, and go to state 27
    DEL_COMMA  shift, and go to state 22


State 18

   23 functions: KW_DEF TK_IDENTIFIER â¢ DEL_LPAR parameter_declarations DEL_RPAR DEL_COLON body KW_ENDDEF DEL_SMCOLON
   24          | KW_DEF TK_IDENTIFIER â¢ DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN types DEL_COLON body KW_ENDDEF DEL_SMCOLON

    DEL_LPAR  shift, and go to state 28


State 19

    4 main: KW_DEF KW_MAIN â¢ DEL_LPAR DEL_RPAR DEL_COLON body KW_ENDDEF DEL_SMCOLON

    DEL_LPAR  shift, and go to state 29


State 20

   12 identifiers: identifiers â¢ DEL_COMMA TK_IDENTIFIER
   27 complex_type_declarations: KW_COMP identifiers â¢ DEL_COLON comp_variable_declarations function_declarations KW_ENDCOMP

    DEL_COMMA  shift, and go to state 22
    DEL_COLON  shift, and go to state 30


State 21

    0 $accept: program $end â¢

    $default  accept


State 22

   12 identifiers: identifiers DEL_COMMA â¢ TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 31


State 23

    7 basic_types: â¢ KW_INT
    8            | â¢ KW_BOOLEAN
    9            | â¢ KW_SCALAR
   10            | â¢ KW_STR
   19 variable_declarations: identifiers DEL_COLON â¢ basic_types DEL_SMCOLON

    KW_INT      shift, and go to state 32
    KW_SCALAR   shift, and go to state 33
    KW_STR      shift, and go to state 34
    KW_BOOLEAN  shift, and go to state 35

    basic_types  go to state 36


State 24

    2 main_body: decl_body main â¢

    $default  reduce using rule 2 (main_body)


State 25

   13 decl_body: decl_body declarations â¢

    $default  reduce using rule 13 (decl_body)


State 26

   20 variable_declarations: TK_IDENTIFIER DEL_LBLOCK TK_INTEGER â¢ DEL_RBLOCK basic_types DEL_SMCOLON

    DEL_RBLOCK  shift, and go to state 37


State 27

   21 constant_declarations: KW_CONST identifiers AP_ASSIGN â¢ expressions DEL_COLON types DEL_SMCOLON
   29 expressions: â¢ identifier_expressions
   30            | â¢ TK_STRING
   31            | â¢ KW_TRUE
   32            | â¢ KW_FALSE
   33            | â¢ function_statement
   34            | â¢ arithmetic_expressions
   35            | â¢ relational_expressions
   36            | â¢ KW_NOT expressions
   37            | â¢ expressions KW_AND expressions
   38            | â¢ expressions KW_OR expressions
   39            | â¢ DEL_LPAR expressions DEL_RPAR
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   43 arithmetic_expressions: â¢ TK_INTEGER
   44                       | â¢ TK_FLOAT
   45                       | â¢ expressions OP_POWER expressions
   46                       | â¢ expressions OP_MULT expressions
   47                       | â¢ expressions OP_DIV expressions
   48                       | â¢ expressions OP_MOD expressions
   49                       | â¢ expressions OP_PLUS expressions
   50                       | â¢ expressions OP_MINUS expressions
   51                       | â¢ OP_PLUS expressions
   52                       | â¢ OP_MINUS expressions
   53 relational_expressions: â¢ expressions RP_LESS expressions
   54                       | â¢ expressions RP_LESSEQUALS expressions
   55                       | â¢ expressions RP_MORE expressions
   56                       | â¢ expressions RP_MOREEQUALS expressions
   57                       | â¢ expressions RP_EQUALS expressions
   58                       | â¢ expressions RP_NOTEQUALS expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    DEL_LPAR       shift, and go to state 47

    expressions             go to state 48
    identifier_expressions  go to state 49
    arithmetic_expressions  go to state 50
    relational_expressions  go to state 51
    function_statement      go to state 52


State 28

   23 functions: KW_DEF TK_IDENTIFIER DEL_LPAR â¢ parameter_declarations DEL_RPAR DEL_COLON body KW_ENDDEF DEL_SMCOLON
   24          | KW_DEF TK_IDENTIFIER DEL_LPAR â¢ parameter_declarations DEL_RPAR AP_ARROWASSIGN types DEL_COLON body KW_ENDDEF DEL_SMCOLON
   25 parameter_declarations: â¢ TK_IDENTIFIER DEL_COLON types
   26                       | â¢ TK_IDENTIFIER DEL_COLON types DEL_COMMA parameter_declarations

    TK_IDENTIFIER  shift, and go to state 53

    parameter_declarations  go to state 54


State 29

    4 main: KW_DEF KW_MAIN DEL_LPAR â¢ DEL_RPAR DEL_COLON body KW_ENDDEF DEL_SMCOLON

    DEL_RPAR  shift, and go to state 55


State 30

   27 complex_type_declarations: KW_COMP identifiers DEL_COLON â¢ comp_variable_declarations function_declarations KW_ENDCOMP
   28 comp_variable_declarations: â¢ AP_HASHASSIGN identifiers DEL_COLON types DEL_SMCOLON

    AP_HASHASSIGN  shift, and go to state 56

    comp_variable_declarations  go to state 57


State 31

   12 identifiers: identifiers DEL_COMMA TK_IDENTIFIER â¢

    $default  reduce using rule 12 (identifiers)


State 32

    7 basic_types: KW_INT â¢

    $default  reduce using rule 7 (basic_types)


State 33

    9 basic_types: KW_SCALAR â¢

    $default  reduce using rule 9 (basic_types)


State 34

   10 basic_types: KW_STR â¢

    $default  reduce using rule 10 (basic_types)


State 35

    8 basic_types: KW_BOOLEAN â¢

    $default  reduce using rule 8 (basic_types)


State 36

   19 variable_declarations: identifiers DEL_COLON basic_types â¢ DEL_SMCOLON

    DEL_SMCOLON  shift, and go to state 58


State 37

    7 basic_types: â¢ KW_INT
    8            | â¢ KW_BOOLEAN
    9            | â¢ KW_SCALAR
   10            | â¢ KW_STR
   20 variable_declarations: TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK â¢ basic_types DEL_SMCOLON

    KW_INT      shift, and go to state 32
    KW_SCALAR   shift, and go to state 33
    KW_STR      shift, and go to state 34
    KW_BOOLEAN  shift, and go to state 35

    basic_types  go to state 59


State 38

   40 identifier_expressions: TK_IDENTIFIER â¢  [KW_FOR, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, OP_POWER, RP_EQUALS, RP_NOTEQUALS, RP_LESS, RP_LESSEQUALS, RP_MORE, RP_MOREEQUALS, DEL_SMCOLON, DEL_RPAR, DEL_COMMA, DEL_RBLOCK, DEL_COLON]
   41                       | TK_IDENTIFIER â¢ DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | TK_IDENTIFIER â¢ DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   91 function_statement: TK_IDENTIFIER â¢ DEL_LPAR function_arg DEL_RPAR

    DEL_LPAR    shift, and go to state 60
    DEL_LBLOCK  shift, and go to state 61

    $default  reduce using rule 40 (identifier_expressions)


State 39

   43 arithmetic_expressions: TK_INTEGER â¢

    $default  reduce using rule 43 (arithmetic_expressions)


State 40

   44 arithmetic_expressions: TK_FLOAT â¢

    $default  reduce using rule 44 (arithmetic_expressions)


State 41

   30 expressions: TK_STRING â¢

    $default  reduce using rule 30 (expressions)


State 42

   31 expressions: KW_TRUE â¢

    $default  reduce using rule 31 (expressions)


State 43

   32 expressions: KW_FALSE â¢

    $default  reduce using rule 32 (expressions)


State 44

   29 expressions: â¢ identifier_expressions
   30            | â¢ TK_STRING
   31            | â¢ KW_TRUE
   32            | â¢ KW_FALSE
   33            | â¢ function_statement
   34            | â¢ arithmetic_expressions
   35            | â¢ relational_expressions
   36            | â¢ KW_NOT expressions
   36            | KW_NOT â¢ expressions
   37            | â¢ expressions KW_AND expressions
   38            | â¢ expressions KW_OR expressions
   39            | â¢ DEL_LPAR expressions DEL_RPAR
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   43 arithmetic_expressions: â¢ TK_INTEGER
   44                       | â¢ TK_FLOAT
   45                       | â¢ expressions OP_POWER expressions
   46                       | â¢ expressions OP_MULT expressions
   47                       | â¢ expressions OP_DIV expressions
   48                       | â¢ expressions OP_MOD expressions
   49                       | â¢ expressions OP_PLUS expressions
   50                       | â¢ expressions OP_MINUS expressions
   51                       | â¢ OP_PLUS expressions
   52                       | â¢ OP_MINUS expressions
   53 relational_expressions: â¢ expressions RP_LESS expressions
   54                       | â¢ expressions RP_LESSEQUALS expressions
   55                       | â¢ expressions RP_MORE expressions
   56                       | â¢ expressions RP_MOREEQUALS expressions
   57                       | â¢ expressions RP_EQUALS expressions
   58                       | â¢ expressions RP_NOTEQUALS expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    DEL_LPAR       shift, and go to state 47

    expressions             go to state 62
    identifier_expressions  go to state 49
    arithmetic_expressions  go to state 50
    relational_expressions  go to state 51
    function_statement      go to state 52


State 45

   29 expressions: â¢ identifier_expressions
   30            | â¢ TK_STRING
   31            | â¢ KW_TRUE
   32            | â¢ KW_FALSE
   33            | â¢ function_statement
   34            | â¢ arithmetic_expressions
   35            | â¢ relational_expressions
   36            | â¢ KW_NOT expressions
   37            | â¢ expressions KW_AND expressions
   38            | â¢ expressions KW_OR expressions
   39            | â¢ DEL_LPAR expressions DEL_RPAR
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   43 arithmetic_expressions: â¢ TK_INTEGER
   44                       | â¢ TK_FLOAT
   45                       | â¢ expressions OP_POWER expressions
   46                       | â¢ expressions OP_MULT expressions
   47                       | â¢ expressions OP_DIV expressions
   48                       | â¢ expressions OP_MOD expressions
   49                       | â¢ expressions OP_PLUS expressions
   50                       | â¢ expressions OP_MINUS expressions
   51                       | â¢ OP_PLUS expressions
   51                       | OP_PLUS â¢ expressions
   52                       | â¢ OP_MINUS expressions
   53 relational_expressions: â¢ expressions RP_LESS expressions
   54                       | â¢ expressions RP_LESSEQUALS expressions
   55                       | â¢ expressions RP_MORE expressions
   56                       | â¢ expressions RP_MOREEQUALS expressions
   57                       | â¢ expressions RP_EQUALS expressions
   58                       | â¢ expressions RP_NOTEQUALS expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    DEL_LPAR       shift, and go to state 47

    expressions             go to state 63
    identifier_expressions  go to state 49
    arithmetic_expressions  go to state 50
    relational_expressions  go to state 51
    function_statement      go to state 52


State 46

   29 expressions: â¢ identifier_expressions
   30            | â¢ TK_STRING
   31            | â¢ KW_TRUE
   32            | â¢ KW_FALSE
   33            | â¢ function_statement
   34            | â¢ arithmetic_expressions
   35            | â¢ relational_expressions
   36            | â¢ KW_NOT expressions
   37            | â¢ expressions KW_AND expressions
   38            | â¢ expressions KW_OR expressions
   39            | â¢ DEL_LPAR expressions DEL_RPAR
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   43 arithmetic_expressions: â¢ TK_INTEGER
   44                       | â¢ TK_FLOAT
   45                       | â¢ expressions OP_POWER expressions
   46                       | â¢ expressions OP_MULT expressions
   47                       | â¢ expressions OP_DIV expressions
   48                       | â¢ expressions OP_MOD expressions
   49                       | â¢ expressions OP_PLUS expressions
   50                       | â¢ expressions OP_MINUS expressions
   51                       | â¢ OP_PLUS expressions
   52                       | â¢ OP_MINUS expressions
   52                       | OP_MINUS â¢ expressions
   53 relational_expressions: â¢ expressions RP_LESS expressions
   54                       | â¢ expressions RP_LESSEQUALS expressions
   55                       | â¢ expressions RP_MORE expressions
   56                       | â¢ expressions RP_MOREEQUALS expressions
   57                       | â¢ expressions RP_EQUALS expressions
   58                       | â¢ expressions RP_NOTEQUALS expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    DEL_LPAR       shift, and go to state 47

    expressions             go to state 64
    identifier_expressions  go to state 49
    arithmetic_expressions  go to state 50
    relational_expressions  go to state 51
    function_statement      go to state 52


State 47

   29 expressions: â¢ identifier_expressions
   30            | â¢ TK_STRING
   31            | â¢ KW_TRUE
   32            | â¢ KW_FALSE
   33            | â¢ function_statement
   34            | â¢ arithmetic_expressions
   35            | â¢ relational_expressions
   36            | â¢ KW_NOT expressions
   37            | â¢ expressions KW_AND expressions
   38            | â¢ expressions KW_OR expressions
   39            | â¢ DEL_LPAR expressions DEL_RPAR
   39            | DEL_LPAR â¢ expressions DEL_RPAR
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   43 arithmetic_expressions: â¢ TK_INTEGER
   44                       | â¢ TK_FLOAT
   45                       | â¢ expressions OP_POWER expressions
   46                       | â¢ expressions OP_MULT expressions
   47                       | â¢ expressions OP_DIV expressions
   48                       | â¢ expressions OP_MOD expressions
   49                       | â¢ expressions OP_PLUS expressions
   50                       | â¢ expressions OP_MINUS expressions
   51                       | â¢ OP_PLUS expressions
   52                       | â¢ OP_MINUS expressions
   53 relational_expressions: â¢ expressions RP_LESS expressions
   54                       | â¢ expressions RP_LESSEQUALS expressions
   55                       | â¢ expressions RP_MORE expressions
   56                       | â¢ expressions RP_MOREEQUALS expressions
   57                       | â¢ expressions RP_EQUALS expressions
   58                       | â¢ expressions RP_NOTEQUALS expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    DEL_LPAR       shift, and go to state 47

    expressions             go to state 65
    identifier_expressions  go to state 49
    arithmetic_expressions  go to state 50
    relational_expressions  go to state 51
    function_statement      go to state 52


State 48

   21 constant_declarations: KW_CONST identifiers AP_ASSIGN expressions â¢ DEL_COLON types DEL_SMCOLON
   37 expressions: expressions â¢ KW_AND expressions
   38            | expressions â¢ KW_OR expressions
   45 arithmetic_expressions: expressions â¢ OP_POWER expressions
   46                       | expressions â¢ OP_MULT expressions
   47                       | expressions â¢ OP_DIV expressions
   48                       | expressions â¢ OP_MOD expressions
   49                       | expressions â¢ OP_PLUS expressions
   50                       | expressions â¢ OP_MINUS expressions
   53 relational_expressions: expressions â¢ RP_LESS expressions
   54                       | expressions â¢ RP_LESSEQUALS expressions
   55                       | expressions â¢ RP_MORE expressions
   56                       | expressions â¢ RP_MOREEQUALS expressions
   57                       | expressions â¢ RP_EQUALS expressions
   58                       | expressions â¢ RP_NOTEQUALS expressions

    KW_AND         shift, and go to state 66
    KW_OR          shift, and go to state 67
    OP_PLUS        shift, and go to state 68
    OP_MINUS       shift, and go to state 69
    OP_MULT        shift, and go to state 70
    OP_DIV         shift, and go to state 71
    OP_MOD         shift, and go to state 72
    OP_POWER       shift, and go to state 73
    RP_EQUALS      shift, and go to state 74
    RP_NOTEQUALS   shift, and go to state 75
    RP_LESS        shift, and go to state 76
    RP_LESSEQUALS  shift, and go to state 77
    RP_MORE        shift, and go to state 78
    RP_MOREEQUALS  shift, and go to state 79
    DEL_COLON      shift, and go to state 80


State 49

   29 expressions: identifier_expressions â¢

    $default  reduce using rule 29 (expressions)


State 50

   34 expressions: arithmetic_expressions â¢

    $default  reduce using rule 34 (expressions)


State 51

   35 expressions: relational_expressions â¢

    $default  reduce using rule 35 (expressions)


State 52

   33 expressions: function_statement â¢

    $default  reduce using rule 33 (expressions)


State 53

   25 parameter_declarations: TK_IDENTIFIER â¢ DEL_COLON types
   26                       | TK_IDENTIFIER â¢ DEL_COLON types DEL_COMMA parameter_declarations

    DEL_COLON  shift, and go to state 81


State 54

   23 functions: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations â¢ DEL_RPAR DEL_COLON body KW_ENDDEF DEL_SMCOLON
   24          | KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations â¢ DEL_RPAR AP_ARROWASSIGN types DEL_COLON body KW_ENDDEF DEL_SMCOLON

    DEL_RPAR  shift, and go to state 82


State 55

    4 main: KW_DEF KW_MAIN DEL_LPAR DEL_RPAR â¢ DEL_COLON body KW_ENDDEF DEL_SMCOLON

    DEL_COLON  shift, and go to state 83


State 56

   11 identifiers: â¢ TK_IDENTIFIER
   12            | â¢ identifiers DEL_COMMA TK_IDENTIFIER
   28 comp_variable_declarations: AP_HASHASSIGN â¢ identifiers DEL_COLON types DEL_SMCOLON

    TK_IDENTIFIER  shift, and go to state 16

    identifiers  go to state 84


State 57

   22 function_declarations: â¢ KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN types
   27 complex_type_declarations: KW_COMP identifiers DEL_COLON comp_variable_declarations â¢ function_declarations KW_ENDCOMP

    KW_DEF  shift, and go to state 85

    function_declarations  go to state 86


State 58

   19 variable_declarations: identifiers DEL_COLON basic_types DEL_SMCOLON â¢

    $default  reduce using rule 19 (variable_declarations)


State 59

   20 variable_declarations: TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK basic_types â¢ DEL_SMCOLON

    DEL_SMCOLON  shift, and go to state 87


State 60

   29 expressions: â¢ identifier_expressions
   30            | â¢ TK_STRING
   31            | â¢ KW_TRUE
   32            | â¢ KW_FALSE
   33            | â¢ function_statement
   34            | â¢ arithmetic_expressions
   35            | â¢ relational_expressions
   36            | â¢ KW_NOT expressions
   37            | â¢ expressions KW_AND expressions
   38            | â¢ expressions KW_OR expressions
   39            | â¢ DEL_LPAR expressions DEL_RPAR
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   43 arithmetic_expressions: â¢ TK_INTEGER
   44                       | â¢ TK_FLOAT
   45                       | â¢ expressions OP_POWER expressions
   46                       | â¢ expressions OP_MULT expressions
   47                       | â¢ expressions OP_DIV expressions
   48                       | â¢ expressions OP_MOD expressions
   49                       | â¢ expressions OP_PLUS expressions
   50                       | â¢ expressions OP_MINUS expressions
   51                       | â¢ OP_PLUS expressions
   52                       | â¢ OP_MINUS expressions
   53 relational_expressions: â¢ expressions RP_LESS expressions
   54                       | â¢ expressions RP_LESSEQUALS expressions
   55                       | â¢ expressions RP_MORE expressions
   56                       | â¢ expressions RP_MOREEQUALS expressions
   57                       | â¢ expressions RP_EQUALS expressions
   58                       | â¢ expressions RP_NOTEQUALS expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR
   91                   | TK_IDENTIFIER DEL_LPAR â¢ function_arg DEL_RPAR
   92 function_arg: Îµ â¢  [DEL_RPAR, DEL_COMMA]
   93             | â¢ expressions
   94             | â¢ function_arg DEL_COMMA expressions

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    DEL_LPAR       shift, and go to state 47

    $default  reduce using rule 92 (function_arg)

    expressions             go to state 88
    identifier_expressions  go to state 49
    arithmetic_expressions  go to state 50
    relational_expressions  go to state 51
    function_statement      go to state 52
    function_arg            go to state 89


State 61

   41 identifier_expressions: TK_IDENTIFIER DEL_LBLOCK â¢ TK_INTEGER DEL_RBLOCK
   42                       | TK_IDENTIFIER DEL_LBLOCK â¢ TK_IDENTIFIER DEL_RBLOCK

    TK_IDENTIFIER  shift, and go to state 90
    TK_INTEGER     shift, and go to state 91


State 62

   36 expressions: KW_NOT expressions â¢  [KW_FOR, DEL_SMCOLON, DEL_RPAR, DEL_COMMA, DEL_RBLOCK, DEL_COLON]
   37            | expressions â¢ KW_AND expressions
   38            | expressions â¢ KW_OR expressions
   45 arithmetic_expressions: expressions â¢ OP_POWER expressions
   46                       | expressions â¢ OP_MULT expressions
   47                       | expressions â¢ OP_DIV expressions
   48                       | expressions â¢ OP_MOD expressions
   49                       | expressions â¢ OP_PLUS expressions
   50                       | expressions â¢ OP_MINUS expressions
   53 relational_expressions: expressions â¢ RP_LESS expressions
   54                       | expressions â¢ RP_LESSEQUALS expressions
   55                       | expressions â¢ RP_MORE expressions
   56                       | expressions â¢ RP_MOREEQUALS expressions
   57                       | expressions â¢ RP_EQUALS expressions
   58                       | expressions â¢ RP_NOTEQUALS expressions

    KW_AND         shift, and go to state 66
    KW_OR          shift, and go to state 67
    OP_PLUS        shift, and go to state 68
    OP_MINUS       shift, and go to state 69
    OP_MULT        shift, and go to state 70
    OP_DIV         shift, and go to state 71
    OP_MOD         shift, and go to state 72
    OP_POWER       shift, and go to state 73
    RP_EQUALS      shift, and go to state 74
    RP_NOTEQUALS   shift, and go to state 75
    RP_LESS        shift, and go to state 76
    RP_LESSEQUALS  shift, and go to state 77
    RP_MORE        shift, and go to state 78
    RP_MOREEQUALS  shift, and go to state 79

    $default  reduce using rule 36 (expressions)

    Conflict between rule 36 and token KW_AND resolved as shift (KW_NOT < KW_AND).
    Conflict between rule 36 and token KW_OR resolved as shift (KW_NOT < KW_OR).
    Conflict between rule 36 and token OP_PLUS resolved as shift (KW_NOT < OP_PLUS).
    Conflict between rule 36 and token OP_MINUS resolved as shift (KW_NOT < OP_MINUS).
    Conflict between rule 36 and token OP_MULT resolved as shift (KW_NOT < OP_MULT).
    Conflict between rule 36 and token OP_DIV resolved as shift (KW_NOT < OP_DIV).
    Conflict between rule 36 and token OP_MOD resolved as shift (KW_NOT < OP_MOD).
    Conflict between rule 36 and token OP_POWER resolved as shift (KW_NOT < OP_POWER).
    Conflict between rule 36 and token RP_EQUALS resolved as shift (KW_NOT < RP_EQUALS).
    Conflict between rule 36 and token RP_NOTEQUALS resolved as shift (KW_NOT < RP_NOTEQUALS).
    Conflict between rule 36 and token RP_LESS resolved as shift (KW_NOT < RP_LESS).
    Conflict between rule 36 and token RP_LESSEQUALS resolved as shift (KW_NOT < RP_LESSEQUALS).
    Conflict between rule 36 and token RP_MORE resolved as shift (KW_NOT < RP_MORE).
    Conflict between rule 36 and token RP_MOREEQUALS resolved as shift (KW_NOT < RP_MOREEQUALS).


State 63

   37 expressions: expressions â¢ KW_AND expressions
   38            | expressions â¢ KW_OR expressions
   45 arithmetic_expressions: expressions â¢ OP_POWER expressions
   46                       | expressions â¢ OP_MULT expressions
   47                       | expressions â¢ OP_DIV expressions
   48                       | expressions â¢ OP_MOD expressions
   49                       | expressions â¢ OP_PLUS expressions
   50                       | expressions â¢ OP_MINUS expressions
   51                       | OP_PLUS expressions â¢  [KW_FOR, KW_AND, KW_OR, OP_PLUS, DEL_SMCOLON, DEL_RPAR, DEL_COMMA, DEL_RBLOCK, DEL_COLON]
   53 relational_expressions: expressions â¢ RP_LESS expressions
   54                       | expressions â¢ RP_LESSEQUALS expressions
   55                       | expressions â¢ RP_MORE expressions
   56                       | expressions â¢ RP_MOREEQUALS expressions
   57                       | expressions â¢ RP_EQUALS expressions
   58                       | expressions â¢ RP_NOTEQUALS expressions

    OP_MINUS       shift, and go to state 69
    OP_MULT        shift, and go to state 70
    OP_DIV         shift, and go to state 71
    OP_MOD         shift, and go to state 72
    OP_POWER       shift, and go to state 73
    RP_EQUALS      shift, and go to state 74
    RP_NOTEQUALS   shift, and go to state 75
    RP_LESS        shift, and go to state 76
    RP_LESSEQUALS  shift, and go to state 77
    RP_MORE        shift, and go to state 78
    RP_MOREEQUALS  shift, and go to state 79

    $default  reduce using rule 51 (arithmetic_expressions)

    Conflict between rule 51 and token KW_AND resolved as reduce (KW_AND < OP_PLUS).
    Conflict between rule 51 and token KW_OR resolved as reduce (KW_OR < OP_PLUS).
    Conflict between rule 51 and token OP_PLUS resolved as reduce (%left OP_PLUS).
    Conflict between rule 51 and token OP_MINUS resolved as shift (OP_PLUS < OP_MINUS).
    Conflict between rule 51 and token OP_MULT resolved as shift (OP_PLUS < OP_MULT).
    Conflict between rule 51 and token OP_DIV resolved as shift (OP_PLUS < OP_DIV).
    Conflict between rule 51 and token OP_MOD resolved as shift (OP_PLUS < OP_MOD).
    Conflict between rule 51 and token OP_POWER resolved as shift (OP_PLUS < OP_POWER).
    Conflict between rule 51 and token RP_EQUALS resolved as shift (OP_PLUS < RP_EQUALS).
    Conflict between rule 51 and token RP_NOTEQUALS resolved as shift (OP_PLUS < RP_NOTEQUALS).
    Conflict between rule 51 and token RP_LESS resolved as shift (OP_PLUS < RP_LESS).
    Conflict between rule 51 and token RP_LESSEQUALS resolved as shift (OP_PLUS < RP_LESSEQUALS).
    Conflict between rule 51 and token RP_MORE resolved as shift (OP_PLUS < RP_MORE).
    Conflict between rule 51 and token RP_MOREEQUALS resolved as shift (OP_PLUS < RP_MOREEQUALS).


State 64

   37 expressions: expressions â¢ KW_AND expressions
   38            | expressions â¢ KW_OR expressions
   45 arithmetic_expressions: expressions â¢ OP_POWER expressions
   46                       | expressions â¢ OP_MULT expressions
   47                       | expressions â¢ OP_DIV expressions
   48                       | expressions â¢ OP_MOD expressions
   49                       | expressions â¢ OP_PLUS expressions
   50                       | expressions â¢ OP_MINUS expressions
   52                       | OP_MINUS expressions â¢  [KW_FOR, KW_AND, KW_OR, OP_PLUS, OP_MINUS, DEL_SMCOLON, DEL_RPAR, DEL_COMMA, DEL_RBLOCK, DEL_COLON]
   53 relational_expressions: expressions â¢ RP_LESS expressions
   54                       | expressions â¢ RP_LESSEQUALS expressions
   55                       | expressions â¢ RP_MORE expressions
   56                       | expressions â¢ RP_MOREEQUALS expressions
   57                       | expressions â¢ RP_EQUALS expressions
   58                       | expressions â¢ RP_NOTEQUALS expressions

    OP_MULT        shift, and go to state 70
    OP_DIV         shift, and go to state 71
    OP_MOD         shift, and go to state 72
    OP_POWER       shift, and go to state 73
    RP_EQUALS      shift, and go to state 74
    RP_NOTEQUALS   shift, and go to state 75
    RP_LESS        shift, and go to state 76
    RP_LESSEQUALS  shift, and go to state 77
    RP_MORE        shift, and go to state 78
    RP_MOREEQUALS  shift, and go to state 79

    $default  reduce using rule 52 (arithmetic_expressions)

    Conflict between rule 52 and token KW_AND resolved as reduce (KW_AND < OP_MINUS).
    Conflict between rule 52 and token KW_OR resolved as reduce (KW_OR < OP_MINUS).
    Conflict between rule 52 and token OP_PLUS resolved as reduce (OP_PLUS < OP_MINUS).
    Conflict between rule 52 and token OP_MINUS resolved as reduce (%left OP_MINUS).
    Conflict between rule 52 and token OP_MULT resolved as shift (OP_MINUS < OP_MULT).
    Conflict between rule 52 and token OP_DIV resolved as shift (OP_MINUS < OP_DIV).
    Conflict between rule 52 and token OP_MOD resolved as shift (OP_MINUS < OP_MOD).
    Conflict between rule 52 and token OP_POWER resolved as shift (OP_MINUS < OP_POWER).
    Conflict between rule 52 and token RP_EQUALS resolved as shift (OP_MINUS < RP_EQUALS).
    Conflict between rule 52 and token RP_NOTEQUALS resolved as shift (OP_MINUS < RP_NOTEQUALS).
    Conflict between rule 52 and token RP_LESS resolved as shift (OP_MINUS < RP_LESS).
    Conflict between rule 52 and token RP_LESSEQUALS resolved as shift (OP_MINUS < RP_LESSEQUALS).
    Conflict between rule 52 and token RP_MORE resolved as shift (OP_MINUS < RP_MORE).
    Conflict between rule 52 and token RP_MOREEQUALS resolved as shift (OP_MINUS < RP_MOREEQUALS).


State 65

   37 expressions: expressions â¢ KW_AND expressions
   38            | expressions â¢ KW_OR expressions
   39            | DEL_LPAR expressions â¢ DEL_RPAR
   45 arithmetic_expressions: expressions â¢ OP_POWER expressions
   46                       | expressions â¢ OP_MULT expressions
   47                       | expressions â¢ OP_DIV expressions
   48                       | expressions â¢ OP_MOD expressions
   49                       | expressions â¢ OP_PLUS expressions
   50                       | expressions â¢ OP_MINUS expressions
   53 relational_expressions: expressions â¢ RP_LESS expressions
   54                       | expressions â¢ RP_LESSEQUALS expressions
   55                       | expressions â¢ RP_MORE expressions
   56                       | expressions â¢ RP_MOREEQUALS expressions
   57                       | expressions â¢ RP_EQUALS expressions
   58                       | expressions â¢ RP_NOTEQUALS expressions

    KW_AND         shift, and go to state 66
    KW_OR          shift, and go to state 67
    OP_PLUS        shift, and go to state 68
    OP_MINUS       shift, and go to state 69
    OP_MULT        shift, and go to state 70
    OP_DIV         shift, and go to state 71
    OP_MOD         shift, and go to state 72
    OP_POWER       shift, and go to state 73
    RP_EQUALS      shift, and go to state 74
    RP_NOTEQUALS   shift, and go to state 75
    RP_LESS        shift, and go to state 76
    RP_LESSEQUALS  shift, and go to state 77
    RP_MORE        shift, and go to state 78
    RP_MOREEQUALS  shift, and go to state 79
    DEL_RPAR       shift, and go to state 92


State 66

   29 expressions: â¢ identifier_expressions
   30            | â¢ TK_STRING
   31            | â¢ KW_TRUE
   32            | â¢ KW_FALSE
   33            | â¢ function_statement
   34            | â¢ arithmetic_expressions
   35            | â¢ relational_expressions
   36            | â¢ KW_NOT expressions
   37            | â¢ expressions KW_AND expressions
   37            | expressions KW_AND â¢ expressions
   38            | â¢ expressions KW_OR expressions
   39            | â¢ DEL_LPAR expressions DEL_RPAR
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   43 arithmetic_expressions: â¢ TK_INTEGER
   44                       | â¢ TK_FLOAT
   45                       | â¢ expressions OP_POWER expressions
   46                       | â¢ expressions OP_MULT expressions
   47                       | â¢ expressions OP_DIV expressions
   48                       | â¢ expressions OP_MOD expressions
   49                       | â¢ expressions OP_PLUS expressions
   50                       | â¢ expressions OP_MINUS expressions
   51                       | â¢ OP_PLUS expressions
   52                       | â¢ OP_MINUS expressions
   53 relational_expressions: â¢ expressions RP_LESS expressions
   54                       | â¢ expressions RP_LESSEQUALS expressions
   55                       | â¢ expressions RP_MORE expressions
   56                       | â¢ expressions RP_MOREEQUALS expressions
   57                       | â¢ expressions RP_EQUALS expressions
   58                       | â¢ expressions RP_NOTEQUALS expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    DEL_LPAR       shift, and go to state 47

    expressions             go to state 93
    identifier_expressions  go to state 49
    arithmetic_expressions  go to state 50
    relational_expressions  go to state 51
    function_statement      go to state 52


State 67

   29 expressions: â¢ identifier_expressions
   30            | â¢ TK_STRING
   31            | â¢ KW_TRUE
   32            | â¢ KW_FALSE
   33            | â¢ function_statement
   34            | â¢ arithmetic_expressions
   35            | â¢ relational_expressions
   36            | â¢ KW_NOT expressions
   37            | â¢ expressions KW_AND expressions
   38            | â¢ expressions KW_OR expressions
   38            | expressions KW_OR â¢ expressions
   39            | â¢ DEL_LPAR expressions DEL_RPAR
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   43 arithmetic_expressions: â¢ TK_INTEGER
   44                       | â¢ TK_FLOAT
   45                       | â¢ expressions OP_POWER expressions
   46                       | â¢ expressions OP_MULT expressions
   47                       | â¢ expressions OP_DIV expressions
   48                       | â¢ expressions OP_MOD expressions
   49                       | â¢ expressions OP_PLUS expressions
   50                       | â¢ expressions OP_MINUS expressions
   51                       | â¢ OP_PLUS expressions
   52                       | â¢ OP_MINUS expressions
   53 relational_expressions: â¢ expressions RP_LESS expressions
   54                       | â¢ expressions RP_LESSEQUALS expressions
   55                       | â¢ expressions RP_MORE expressions
   56                       | â¢ expressions RP_MOREEQUALS expressions
   57                       | â¢ expressions RP_EQUALS expressions
   58                       | â¢ expressions RP_NOTEQUALS expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    DEL_LPAR       shift, and go to state 47

    expressions             go to state 94
    identifier_expressions  go to state 49
    arithmetic_expressions  go to state 50
    relational_expressions  go to state 51
    function_statement      go to state 52


State 68

   29 expressions: â¢ identifier_expressions
   30            | â¢ TK_STRING
   31            | â¢ KW_TRUE
   32            | â¢ KW_FALSE
   33            | â¢ function_statement
   34            | â¢ arithmetic_expressions
   35            | â¢ relational_expressions
   36            | â¢ KW_NOT expressions
   37            | â¢ expressions KW_AND expressions
   38            | â¢ expressions KW_OR expressions
   39            | â¢ DEL_LPAR expressions DEL_RPAR
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   43 arithmetic_expressions: â¢ TK_INTEGER
   44                       | â¢ TK_FLOAT
   45                       | â¢ expressions OP_POWER expressions
   46                       | â¢ expressions OP_MULT expressions
   47                       | â¢ expressions OP_DIV expressions
   48                       | â¢ expressions OP_MOD expressions
   49                       | â¢ expressions OP_PLUS expressions
   49                       | expressions OP_PLUS â¢ expressions
   50                       | â¢ expressions OP_MINUS expressions
   51                       | â¢ OP_PLUS expressions
   52                       | â¢ OP_MINUS expressions
   53 relational_expressions: â¢ expressions RP_LESS expressions
   54                       | â¢ expressions RP_LESSEQUALS expressions
   55                       | â¢ expressions RP_MORE expressions
   56                       | â¢ expressions RP_MOREEQUALS expressions
   57                       | â¢ expressions RP_EQUALS expressions
   58                       | â¢ expressions RP_NOTEQUALS expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    DEL_LPAR       shift, and go to state 47

    expressions             go to state 95
    identifier_expressions  go to state 49
    arithmetic_expressions  go to state 50
    relational_expressions  go to state 51
    function_statement      go to state 52


State 69

   29 expressions: â¢ identifier_expressions
   30            | â¢ TK_STRING
   31            | â¢ KW_TRUE
   32            | â¢ KW_FALSE
   33            | â¢ function_statement
   34            | â¢ arithmetic_expressions
   35            | â¢ relational_expressions
   36            | â¢ KW_NOT expressions
   37            | â¢ expressions KW_AND expressions
   38            | â¢ expressions KW_OR expressions
   39            | â¢ DEL_LPAR expressions DEL_RPAR
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   43 arithmetic_expressions: â¢ TK_INTEGER
   44                       | â¢ TK_FLOAT
   45                       | â¢ expressions OP_POWER expressions
   46                       | â¢ expressions OP_MULT expressions
   47                       | â¢ expressions OP_DIV expressions
   48                       | â¢ expressions OP_MOD expressions
   49                       | â¢ expressions OP_PLUS expressions
   50                       | â¢ expressions OP_MINUS expressions
   50                       | expressions OP_MINUS â¢ expressions
   51                       | â¢ OP_PLUS expressions
   52                       | â¢ OP_MINUS expressions
   53 relational_expressions: â¢ expressions RP_LESS expressions
   54                       | â¢ expressions RP_LESSEQUALS expressions
   55                       | â¢ expressions RP_MORE expressions
   56                       | â¢ expressions RP_MOREEQUALS expressions
   57                       | â¢ expressions RP_EQUALS expressions
   58                       | â¢ expressions RP_NOTEQUALS expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    DEL_LPAR       shift, and go to state 47

    expressions             go to state 96
    identifier_expressions  go to state 49
    arithmetic_expressions  go to state 50
    relational_expressions  go to state 51
    function_statement      go to state 52


State 70

   29 expressions: â¢ identifier_expressions
   30            | â¢ TK_STRING
   31            | â¢ KW_TRUE
   32            | â¢ KW_FALSE
   33            | â¢ function_statement
   34            | â¢ arithmetic_expressions
   35            | â¢ relational_expressions
   36            | â¢ KW_NOT expressions
   37            | â¢ expressions KW_AND expressions
   38            | â¢ expressions KW_OR expressions
   39            | â¢ DEL_LPAR expressions DEL_RPAR
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   43 arithmetic_expressions: â¢ TK_INTEGER
   44                       | â¢ TK_FLOAT
   45                       | â¢ expressions OP_POWER expressions
   46                       | â¢ expressions OP_MULT expressions
   46                       | expressions OP_MULT â¢ expressions
   47                       | â¢ expressions OP_DIV expressions
   48                       | â¢ expressions OP_MOD expressions
   49                       | â¢ expressions OP_PLUS expressions
   50                       | â¢ expressions OP_MINUS expressions
   51                       | â¢ OP_PLUS expressions
   52                       | â¢ OP_MINUS expressions
   53 relational_expressions: â¢ expressions RP_LESS expressions
   54                       | â¢ expressions RP_LESSEQUALS expressions
   55                       | â¢ expressions RP_MORE expressions
   56                       | â¢ expressions RP_MOREEQUALS expressions
   57                       | â¢ expressions RP_EQUALS expressions
   58                       | â¢ expressions RP_NOTEQUALS expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    DEL_LPAR       shift, and go to state 47

    expressions             go to state 97
    identifier_expressions  go to state 49
    arithmetic_expressions  go to state 50
    relational_expressions  go to state 51
    function_statement      go to state 52


State 71

   29 expressions: â¢ identifier_expressions
   30            | â¢ TK_STRING
   31            | â¢ KW_TRUE
   32            | â¢ KW_FALSE
   33            | â¢ function_statement
   34            | â¢ arithmetic_expressions
   35            | â¢ relational_expressions
   36            | â¢ KW_NOT expressions
   37            | â¢ expressions KW_AND expressions
   38            | â¢ expressions KW_OR expressions
   39            | â¢ DEL_LPAR expressions DEL_RPAR
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   43 arithmetic_expressions: â¢ TK_INTEGER
   44                       | â¢ TK_FLOAT
   45                       | â¢ expressions OP_POWER expressions
   46                       | â¢ expressions OP_MULT expressions
   47                       | â¢ expressions OP_DIV expressions
   47                       | expressions OP_DIV â¢ expressions
   48                       | â¢ expressions OP_MOD expressions
   49                       | â¢ expressions OP_PLUS expressions
   50                       | â¢ expressions OP_MINUS expressions
   51                       | â¢ OP_PLUS expressions
   52                       | â¢ OP_MINUS expressions
   53 relational_expressions: â¢ expressions RP_LESS expressions
   54                       | â¢ expressions RP_LESSEQUALS expressions
   55                       | â¢ expressions RP_MORE expressions
   56                       | â¢ expressions RP_MOREEQUALS expressions
   57                       | â¢ expressions RP_EQUALS expressions
   58                       | â¢ expressions RP_NOTEQUALS expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    DEL_LPAR       shift, and go to state 47

    expressions             go to state 98
    identifier_expressions  go to state 49
    arithmetic_expressions  go to state 50
    relational_expressions  go to state 51
    function_statement      go to state 52


State 72

   29 expressions: â¢ identifier_expressions
   30            | â¢ TK_STRING
   31            | â¢ KW_TRUE
   32            | â¢ KW_FALSE
   33            | â¢ function_statement
   34            | â¢ arithmetic_expressions
   35            | â¢ relational_expressions
   36            | â¢ KW_NOT expressions
   37            | â¢ expressions KW_AND expressions
   38            | â¢ expressions KW_OR expressions
   39            | â¢ DEL_LPAR expressions DEL_RPAR
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   43 arithmetic_expressions: â¢ TK_INTEGER
   44                       | â¢ TK_FLOAT
   45                       | â¢ expressions OP_POWER expressions
   46                       | â¢ expressions OP_MULT expressions
   47                       | â¢ expressions OP_DIV expressions
   48                       | â¢ expressions OP_MOD expressions
   48                       | expressions OP_MOD â¢ expressions
   49                       | â¢ expressions OP_PLUS expressions
   50                       | â¢ expressions OP_MINUS expressions
   51                       | â¢ OP_PLUS expressions
   52                       | â¢ OP_MINUS expressions
   53 relational_expressions: â¢ expressions RP_LESS expressions
   54                       | â¢ expressions RP_LESSEQUALS expressions
   55                       | â¢ expressions RP_MORE expressions
   56                       | â¢ expressions RP_MOREEQUALS expressions
   57                       | â¢ expressions RP_EQUALS expressions
   58                       | â¢ expressions RP_NOTEQUALS expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    DEL_LPAR       shift, and go to state 47

    expressions             go to state 99
    identifier_expressions  go to state 49
    arithmetic_expressions  go to state 50
    relational_expressions  go to state 51
    function_statement      go to state 52


State 73

   29 expressions: â¢ identifier_expressions
   30            | â¢ TK_STRING
   31            | â¢ KW_TRUE
   32            | â¢ KW_FALSE
   33            | â¢ function_statement
   34            | â¢ arithmetic_expressions
   35            | â¢ relational_expressions
   36            | â¢ KW_NOT expressions
   37            | â¢ expressions KW_AND expressions
   38            | â¢ expressions KW_OR expressions
   39            | â¢ DEL_LPAR expressions DEL_RPAR
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   43 arithmetic_expressions: â¢ TK_INTEGER
   44                       | â¢ TK_FLOAT
   45                       | â¢ expressions OP_POWER expressions
   45                       | expressions OP_POWER â¢ expressions
   46                       | â¢ expressions OP_MULT expressions
   47                       | â¢ expressions OP_DIV expressions
   48                       | â¢ expressions OP_MOD expressions
   49                       | â¢ expressions OP_PLUS expressions
   50                       | â¢ expressions OP_MINUS expressions
   51                       | â¢ OP_PLUS expressions
   52                       | â¢ OP_MINUS expressions
   53 relational_expressions: â¢ expressions RP_LESS expressions
   54                       | â¢ expressions RP_LESSEQUALS expressions
   55                       | â¢ expressions RP_MORE expressions
   56                       | â¢ expressions RP_MOREEQUALS expressions
   57                       | â¢ expressions RP_EQUALS expressions
   58                       | â¢ expressions RP_NOTEQUALS expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    DEL_LPAR       shift, and go to state 47

    expressions             go to state 100
    identifier_expressions  go to state 49
    arithmetic_expressions  go to state 50
    relational_expressions  go to state 51
    function_statement      go to state 52


State 74

   29 expressions: â¢ identifier_expressions
   30            | â¢ TK_STRING
   31            | â¢ KW_TRUE
   32            | â¢ KW_FALSE
   33            | â¢ function_statement
   34            | â¢ arithmetic_expressions
   35            | â¢ relational_expressions
   36            | â¢ KW_NOT expressions
   37            | â¢ expressions KW_AND expressions
   38            | â¢ expressions KW_OR expressions
   39            | â¢ DEL_LPAR expressions DEL_RPAR
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   43 arithmetic_expressions: â¢ TK_INTEGER
   44                       | â¢ TK_FLOAT
   45                       | â¢ expressions OP_POWER expressions
   46                       | â¢ expressions OP_MULT expressions
   47                       | â¢ expressions OP_DIV expressions
   48                       | â¢ expressions OP_MOD expressions
   49                       | â¢ expressions OP_PLUS expressions
   50                       | â¢ expressions OP_MINUS expressions
   51                       | â¢ OP_PLUS expressions
   52                       | â¢ OP_MINUS expressions
   53 relational_expressions: â¢ expressions RP_LESS expressions
   54                       | â¢ expressions RP_LESSEQUALS expressions
   55                       | â¢ expressions RP_MORE expressions
   56                       | â¢ expressions RP_MOREEQUALS expressions
   57                       | â¢ expressions RP_EQUALS expressions
   57                       | expressions RP_EQUALS â¢ expressions
   58                       | â¢ expressions RP_NOTEQUALS expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    DEL_LPAR       shift, and go to state 47

    expressions             go to state 101
    identifier_expressions  go to state 49
    arithmetic_expressions  go to state 50
    relational_expressions  go to state 51
    function_statement      go to state 52


State 75

   29 expressions: â¢ identifier_expressions
   30            | â¢ TK_STRING
   31            | â¢ KW_TRUE
   32            | â¢ KW_FALSE
   33            | â¢ function_statement
   34            | â¢ arithmetic_expressions
   35            | â¢ relational_expressions
   36            | â¢ KW_NOT expressions
   37            | â¢ expressions KW_AND expressions
   38            | â¢ expressions KW_OR expressions
   39            | â¢ DEL_LPAR expressions DEL_RPAR
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   43 arithmetic_expressions: â¢ TK_INTEGER
   44                       | â¢ TK_FLOAT
   45                       | â¢ expressions OP_POWER expressions
   46                       | â¢ expressions OP_MULT expressions
   47                       | â¢ expressions OP_DIV expressions
   48                       | â¢ expressions OP_MOD expressions
   49                       | â¢ expressions OP_PLUS expressions
   50                       | â¢ expressions OP_MINUS expressions
   51                       | â¢ OP_PLUS expressions
   52                       | â¢ OP_MINUS expressions
   53 relational_expressions: â¢ expressions RP_LESS expressions
   54                       | â¢ expressions RP_LESSEQUALS expressions
   55                       | â¢ expressions RP_MORE expressions
   56                       | â¢ expressions RP_MOREEQUALS expressions
   57                       | â¢ expressions RP_EQUALS expressions
   58                       | â¢ expressions RP_NOTEQUALS expressions
   58                       | expressions RP_NOTEQUALS â¢ expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    DEL_LPAR       shift, and go to state 47

    expressions             go to state 102
    identifier_expressions  go to state 49
    arithmetic_expressions  go to state 50
    relational_expressions  go to state 51
    function_statement      go to state 52


State 76

   29 expressions: â¢ identifier_expressions
   30            | â¢ TK_STRING
   31            | â¢ KW_TRUE
   32            | â¢ KW_FALSE
   33            | â¢ function_statement
   34            | â¢ arithmetic_expressions
   35            | â¢ relational_expressions
   36            | â¢ KW_NOT expressions
   37            | â¢ expressions KW_AND expressions
   38            | â¢ expressions KW_OR expressions
   39            | â¢ DEL_LPAR expressions DEL_RPAR
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   43 arithmetic_expressions: â¢ TK_INTEGER
   44                       | â¢ TK_FLOAT
   45                       | â¢ expressions OP_POWER expressions
   46                       | â¢ expressions OP_MULT expressions
   47                       | â¢ expressions OP_DIV expressions
   48                       | â¢ expressions OP_MOD expressions
   49                       | â¢ expressions OP_PLUS expressions
   50                       | â¢ expressions OP_MINUS expressions
   51                       | â¢ OP_PLUS expressions
   52                       | â¢ OP_MINUS expressions
   53 relational_expressions: â¢ expressions RP_LESS expressions
   53                       | expressions RP_LESS â¢ expressions
   54                       | â¢ expressions RP_LESSEQUALS expressions
   55                       | â¢ expressions RP_MORE expressions
   56                       | â¢ expressions RP_MOREEQUALS expressions
   57                       | â¢ expressions RP_EQUALS expressions
   58                       | â¢ expressions RP_NOTEQUALS expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    DEL_LPAR       shift, and go to state 47

    expressions             go to state 103
    identifier_expressions  go to state 49
    arithmetic_expressions  go to state 50
    relational_expressions  go to state 51
    function_statement      go to state 52


State 77

   29 expressions: â¢ identifier_expressions
   30            | â¢ TK_STRING
   31            | â¢ KW_TRUE
   32            | â¢ KW_FALSE
   33            | â¢ function_statement
   34            | â¢ arithmetic_expressions
   35            | â¢ relational_expressions
   36            | â¢ KW_NOT expressions
   37            | â¢ expressions KW_AND expressions
   38            | â¢ expressions KW_OR expressions
   39            | â¢ DEL_LPAR expressions DEL_RPAR
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   43 arithmetic_expressions: â¢ TK_INTEGER
   44                       | â¢ TK_FLOAT
   45                       | â¢ expressions OP_POWER expressions
   46                       | â¢ expressions OP_MULT expressions
   47                       | â¢ expressions OP_DIV expressions
   48                       | â¢ expressions OP_MOD expressions
   49                       | â¢ expressions OP_PLUS expressions
   50                       | â¢ expressions OP_MINUS expressions
   51                       | â¢ OP_PLUS expressions
   52                       | â¢ OP_MINUS expressions
   53 relational_expressions: â¢ expressions RP_LESS expressions
   54                       | â¢ expressions RP_LESSEQUALS expressions
   54                       | expressions RP_LESSEQUALS â¢ expressions
   55                       | â¢ expressions RP_MORE expressions
   56                       | â¢ expressions RP_MOREEQUALS expressions
   57                       | â¢ expressions RP_EQUALS expressions
   58                       | â¢ expressions RP_NOTEQUALS expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    DEL_LPAR       shift, and go to state 47

    expressions             go to state 104
    identifier_expressions  go to state 49
    arithmetic_expressions  go to state 50
    relational_expressions  go to state 51
    function_statement      go to state 52


State 78

   29 expressions: â¢ identifier_expressions
   30            | â¢ TK_STRING
   31            | â¢ KW_TRUE
   32            | â¢ KW_FALSE
   33            | â¢ function_statement
   34            | â¢ arithmetic_expressions
   35            | â¢ relational_expressions
   36            | â¢ KW_NOT expressions
   37            | â¢ expressions KW_AND expressions
   38            | â¢ expressions KW_OR expressions
   39            | â¢ DEL_LPAR expressions DEL_RPAR
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   43 arithmetic_expressions: â¢ TK_INTEGER
   44                       | â¢ TK_FLOAT
   45                       | â¢ expressions OP_POWER expressions
   46                       | â¢ expressions OP_MULT expressions
   47                       | â¢ expressions OP_DIV expressions
   48                       | â¢ expressions OP_MOD expressions
   49                       | â¢ expressions OP_PLUS expressions
   50                       | â¢ expressions OP_MINUS expressions
   51                       | â¢ OP_PLUS expressions
   52                       | â¢ OP_MINUS expressions
   53 relational_expressions: â¢ expressions RP_LESS expressions
   54                       | â¢ expressions RP_LESSEQUALS expressions
   55                       | â¢ expressions RP_MORE expressions
   55                       | expressions RP_MORE â¢ expressions
   56                       | â¢ expressions RP_MOREEQUALS expressions
   57                       | â¢ expressions RP_EQUALS expressions
   58                       | â¢ expressions RP_NOTEQUALS expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    DEL_LPAR       shift, and go to state 47

    expressions             go to state 105
    identifier_expressions  go to state 49
    arithmetic_expressions  go to state 50
    relational_expressions  go to state 51
    function_statement      go to state 52


State 79

   29 expressions: â¢ identifier_expressions
   30            | â¢ TK_STRING
   31            | â¢ KW_TRUE
   32            | â¢ KW_FALSE
   33            | â¢ function_statement
   34            | â¢ arithmetic_expressions
   35            | â¢ relational_expressions
   36            | â¢ KW_NOT expressions
   37            | â¢ expressions KW_AND expressions
   38            | â¢ expressions KW_OR expressions
   39            | â¢ DEL_LPAR expressions DEL_RPAR
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   43 arithmetic_expressions: â¢ TK_INTEGER
   44                       | â¢ TK_FLOAT
   45                       | â¢ expressions OP_POWER expressions
   46                       | â¢ expressions OP_MULT expressions
   47                       | â¢ expressions OP_DIV expressions
   48                       | â¢ expressions OP_MOD expressions
   49                       | â¢ expressions OP_PLUS expressions
   50                       | â¢ expressions OP_MINUS expressions
   51                       | â¢ OP_PLUS expressions
   52                       | â¢ OP_MINUS expressions
   53 relational_expressions: â¢ expressions RP_LESS expressions
   54                       | â¢ expressions RP_LESSEQUALS expressions
   55                       | â¢ expressions RP_MORE expressions
   56                       | â¢ expressions RP_MOREEQUALS expressions
   56                       | expressions RP_MOREEQUALS â¢ expressions
   57                       | â¢ expressions RP_EQUALS expressions
   58                       | â¢ expressions RP_NOTEQUALS expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    DEL_LPAR       shift, and go to state 47

    expressions             go to state 106
    identifier_expressions  go to state 49
    arithmetic_expressions  go to state 50
    relational_expressions  go to state 51
    function_statement      go to state 52


State 80

    5 types: â¢ DEL_LBLOCK DEL_RBLOCK basic_types
    6      | â¢ basic_types
    7 basic_types: â¢ KW_INT
    8            | â¢ KW_BOOLEAN
    9            | â¢ KW_SCALAR
   10            | â¢ KW_STR
   21 constant_declarations: KW_CONST identifiers AP_ASSIGN expressions DEL_COLON â¢ types DEL_SMCOLON

    KW_INT      shift, and go to state 32
    KW_SCALAR   shift, and go to state 33
    KW_STR      shift, and go to state 34
    KW_BOOLEAN  shift, and go to state 35
    DEL_LBLOCK  shift, and go to state 107

    types        go to state 108
    basic_types  go to state 109


State 81

    5 types: â¢ DEL_LBLOCK DEL_RBLOCK basic_types
    6      | â¢ basic_types
    7 basic_types: â¢ KW_INT
    8            | â¢ KW_BOOLEAN
    9            | â¢ KW_SCALAR
   10            | â¢ KW_STR
   25 parameter_declarations: TK_IDENTIFIER DEL_COLON â¢ types
   26                       | TK_IDENTIFIER DEL_COLON â¢ types DEL_COMMA parameter_declarations

    KW_INT      shift, and go to state 32
    KW_SCALAR   shift, and go to state 33
    KW_STR      shift, and go to state 34
    KW_BOOLEAN  shift, and go to state 35
    DEL_LBLOCK  shift, and go to state 107

    types        go to state 110
    basic_types  go to state 109


State 82

   23 functions: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR â¢ DEL_COLON body KW_ENDDEF DEL_SMCOLON
   24          | KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR â¢ AP_ARROWASSIGN types DEL_COLON body KW_ENDDEF DEL_SMCOLON

    AP_ARROWASSIGN  shift, and go to state 111
    DEL_COLON       shift, and go to state 112


State 83

    4 main: KW_DEF KW_MAIN DEL_LPAR DEL_RPAR DEL_COLON â¢ body KW_ENDDEF DEL_SMCOLON
   11 identifiers: â¢ TK_IDENTIFIER
   12            | â¢ identifiers DEL_COMMA TK_IDENTIFIER
   19 variable_declarations: â¢ identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK basic_types DEL_SMCOLON
   21 constant_declarations: â¢ KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   59 assign_expressions: â¢ identifier_expressions AP_ASSIGN expressions
   60                   | â¢ identifier_expressions AP_PLUSASSIGN expressions
   61                   | â¢ identifier_expressions AP_MINASSIGN expressions
   62                   | â¢ identifier_expressions AP_MULASSIGN expressions
   63                   | â¢ identifier_expressions AP_DIVASSIGN expressions
   64                   | â¢ identifier_expressions AP_MODASSIGN expressions
   65 statements: â¢ if_statement DEL_SMCOLON
   66           | â¢ for_statement DEL_SMCOLON
   67           | â¢ array_statement DEL_SMCOLON
   68           | â¢ while_statement DEL_SMCOLON
   69           | â¢ KW_BREAK DEL_SMCOLON
   70           | â¢ KW_CONTINUE DEL_SMCOLON
   71           | â¢ assign_expressions DEL_SMCOLON
   72           | â¢ return_statement DEL_SMCOLON
   73           | â¢ function_statement DEL_SMCOLON
   80 if_statement: â¢ KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   81             | â¢ KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE command_statements KW_ENDIF
   82 for_statement: â¢ KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   83              | â¢ KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements DEL_SMCOLON KW_ENDFOR
   84 array_statement: â¢ integral_array
   85                | â¢ other_array
   86 integral_array: â¢ identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
   87 other_array: â¢ identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON types KW_IN identifiers KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types
   88 while_statement: â¢ KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE
   89 return_statement: â¢ KW_RETURN
   90                 | â¢ KW_RETURN expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR
   95 body: â¢ statements
   96     | â¢ variable_declarations
   97     | â¢ constant_declarations
   98     | â¢ body statements
   99     | â¢ body variable_declarations
  100     | â¢ body constant_declarations

    TK_IDENTIFIER  shift, and go to state 113
    KW_CONST       shift, and go to state 2
    KW_IF          shift, and go to state 114
    KW_FOR         shift, and go to state 115
    KW_WHILE       shift, and go to state 116
    KW_BREAK       shift, and go to state 117
    KW_CONTINUE    shift, and go to state 118
    KW_RETURN      shift, and go to state 119

    identifiers             go to state 120
    variable_declarations   go to state 121
    constant_declarations   go to state 122
    identifier_expressions  go to state 123
    assign_expressions      go to state 124
    statements              go to state 125
    if_statement            go to state 126
    for_statement           go to state 127
    array_statement         go to state 128
    integral_array          go to state 129
    other_array             go to state 130
    while_statement         go to state 131
    return_statement        go to state 132
    function_statement      go to state 133
    body                    go to state 134


State 84

   12 identifiers: identifiers â¢ DEL_COMMA TK_IDENTIFIER
   28 comp_variable_declarations: AP_HASHASSIGN identifiers â¢ DEL_COLON types DEL_SMCOLON

    DEL_COMMA  shift, and go to state 22
    DEL_COLON  shift, and go to state 135


State 85

   22 function_declarations: KW_DEF â¢ TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN types

    TK_IDENTIFIER  shift, and go to state 136


State 86

   27 complex_type_declarations: KW_COMP identifiers DEL_COLON comp_variable_declarations function_declarations â¢ KW_ENDCOMP

    KW_ENDCOMP  shift, and go to state 137


State 87

   20 variable_declarations: TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK basic_types DEL_SMCOLON â¢

    $default  reduce using rule 20 (variable_declarations)


State 88

   37 expressions: expressions â¢ KW_AND expressions
   38            | expressions â¢ KW_OR expressions
   45 arithmetic_expressions: expressions â¢ OP_POWER expressions
   46                       | expressions â¢ OP_MULT expressions
   47                       | expressions â¢ OP_DIV expressions
   48                       | expressions â¢ OP_MOD expressions
   49                       | expressions â¢ OP_PLUS expressions
   50                       | expressions â¢ OP_MINUS expressions
   53 relational_expressions: expressions â¢ RP_LESS expressions
   54                       | expressions â¢ RP_LESSEQUALS expressions
   55                       | expressions â¢ RP_MORE expressions
   56                       | expressions â¢ RP_MOREEQUALS expressions
   57                       | expressions â¢ RP_EQUALS expressions
   58                       | expressions â¢ RP_NOTEQUALS expressions
   93 function_arg: expressions â¢  [DEL_RPAR, DEL_COMMA]

    KW_AND         shift, and go to state 66
    KW_OR          shift, and go to state 67
    OP_PLUS        shift, and go to state 68
    OP_MINUS       shift, and go to state 69
    OP_MULT        shift, and go to state 70
    OP_DIV         shift, and go to state 71
    OP_MOD         shift, and go to state 72
    OP_POWER       shift, and go to state 73
    RP_EQUALS      shift, and go to state 74
    RP_NOTEQUALS   shift, and go to state 75
    RP_LESS        shift, and go to state 76
    RP_LESSEQUALS  shift, and go to state 77
    RP_MORE        shift, and go to state 78
    RP_MOREEQUALS  shift, and go to state 79

    $default  reduce using rule 93 (function_arg)


State 89

   91 function_statement: TK_IDENTIFIER DEL_LPAR function_arg â¢ DEL_RPAR
   94 function_arg: function_arg â¢ DEL_COMMA expressions

    DEL_RPAR   shift, and go to state 138
    DEL_COMMA  shift, and go to state 139


State 90

   42 identifier_expressions: TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER â¢ DEL_RBLOCK

    DEL_RBLOCK  shift, and go to state 140


State 91

   41 identifier_expressions: TK_IDENTIFIER DEL_LBLOCK TK_INTEGER â¢ DEL_RBLOCK

    DEL_RBLOCK  shift, and go to state 141


State 92

   39 expressions: DEL_LPAR expressions DEL_RPAR â¢

    $default  reduce using rule 39 (expressions)


State 93

   37 expressions: expressions â¢ KW_AND expressions
   37            | expressions KW_AND expressions â¢  [KW_FOR, KW_AND, DEL_SMCOLON, DEL_RPAR, DEL_COMMA, DEL_RBLOCK, DEL_COLON]
   38            | expressions â¢ KW_OR expressions
   45 arithmetic_expressions: expressions â¢ OP_POWER expressions
   46                       | expressions â¢ OP_MULT expressions
   47                       | expressions â¢ OP_DIV expressions
   48                       | expressions â¢ OP_MOD expressions
   49                       | expressions â¢ OP_PLUS expressions
   50                       | expressions â¢ OP_MINUS expressions
   53 relational_expressions: expressions â¢ RP_LESS expressions
   54                       | expressions â¢ RP_LESSEQUALS expressions
   55                       | expressions â¢ RP_MORE expressions
   56                       | expressions â¢ RP_MOREEQUALS expressions
   57                       | expressions â¢ RP_EQUALS expressions
   58                       | expressions â¢ RP_NOTEQUALS expressions

    KW_OR          shift, and go to state 67
    OP_PLUS        shift, and go to state 68
    OP_MINUS       shift, and go to state 69
    OP_MULT        shift, and go to state 70
    OP_DIV         shift, and go to state 71
    OP_MOD         shift, and go to state 72
    OP_POWER       shift, and go to state 73
    RP_EQUALS      shift, and go to state 74
    RP_NOTEQUALS   shift, and go to state 75
    RP_LESS        shift, and go to state 76
    RP_LESSEQUALS  shift, and go to state 77
    RP_MORE        shift, and go to state 78
    RP_MOREEQUALS  shift, and go to state 79

    $default  reduce using rule 37 (expressions)

    Conflict between rule 37 and token KW_AND resolved as reduce (%left KW_AND).
    Conflict between rule 37 and token KW_OR resolved as shift (KW_AND < KW_OR).
    Conflict between rule 37 and token OP_PLUS resolved as shift (KW_AND < OP_PLUS).
    Conflict between rule 37 and token OP_MINUS resolved as shift (KW_AND < OP_MINUS).
    Conflict between rule 37 and token OP_MULT resolved as shift (KW_AND < OP_MULT).
    Conflict between rule 37 and token OP_DIV resolved as shift (KW_AND < OP_DIV).
    Conflict between rule 37 and token OP_MOD resolved as shift (KW_AND < OP_MOD).
    Conflict between rule 37 and token OP_POWER resolved as shift (KW_AND < OP_POWER).
    Conflict between rule 37 and token RP_EQUALS resolved as shift (KW_AND < RP_EQUALS).
    Conflict between rule 37 and token RP_NOTEQUALS resolved as shift (KW_AND < RP_NOTEQUALS).
    Conflict between rule 37 and token RP_LESS resolved as shift (KW_AND < RP_LESS).
    Conflict between rule 37 and token RP_LESSEQUALS resolved as shift (KW_AND < RP_LESSEQUALS).
    Conflict between rule 37 and token RP_MORE resolved as shift (KW_AND < RP_MORE).
    Conflict between rule 37 and token RP_MOREEQUALS resolved as shift (KW_AND < RP_MOREEQUALS).


State 94

   37 expressions: expressions â¢ KW_AND expressions
   38            | expressions â¢ KW_OR expressions
   38            | expressions KW_OR expressions â¢  [KW_FOR, KW_AND, KW_OR, DEL_SMCOLON, DEL_RPAR, DEL_COMMA, DEL_RBLOCK, DEL_COLON]
   45 arithmetic_expressions: expressions â¢ OP_POWER expressions
   46                       | expressions â¢ OP_MULT expressions
   47                       | expressions â¢ OP_DIV expressions
   48                       | expressions â¢ OP_MOD expressions
   49                       | expressions â¢ OP_PLUS expressions
   50                       | expressions â¢ OP_MINUS expressions
   53 relational_expressions: expressions â¢ RP_LESS expressions
   54                       | expressions â¢ RP_LESSEQUALS expressions
   55                       | expressions â¢ RP_MORE expressions
   56                       | expressions â¢ RP_MOREEQUALS expressions
   57                       | expressions â¢ RP_EQUALS expressions
   58                       | expressions â¢ RP_NOTEQUALS expressions

    OP_PLUS        shift, and go to state 68
    OP_MINUS       shift, and go to state 69
    OP_MULT        shift, and go to state 70
    OP_DIV         shift, and go to state 71
    OP_MOD         shift, and go to state 72
    OP_POWER       shift, and go to state 73
    RP_EQUALS      shift, and go to state 74
    RP_NOTEQUALS   shift, and go to state 75
    RP_LESS        shift, and go to state 76
    RP_LESSEQUALS  shift, and go to state 77
    RP_MORE        shift, and go to state 78
    RP_MOREEQUALS  shift, and go to state 79

    $default  reduce using rule 38 (expressions)

    Conflict between rule 38 and token KW_AND resolved as reduce (KW_AND < KW_OR).
    Conflict between rule 38 and token KW_OR resolved as reduce (%left KW_OR).
    Conflict between rule 38 and token OP_PLUS resolved as shift (KW_OR < OP_PLUS).
    Conflict between rule 38 and token OP_MINUS resolved as shift (KW_OR < OP_MINUS).
    Conflict between rule 38 and token OP_MULT resolved as shift (KW_OR < OP_MULT).
    Conflict between rule 38 and token OP_DIV resolved as shift (KW_OR < OP_DIV).
    Conflict between rule 38 and token OP_MOD resolved as shift (KW_OR < OP_MOD).
    Conflict between rule 38 and token OP_POWER resolved as shift (KW_OR < OP_POWER).
    Conflict between rule 38 and token RP_EQUALS resolved as shift (KW_OR < RP_EQUALS).
    Conflict between rule 38 and token RP_NOTEQUALS resolved as shift (KW_OR < RP_NOTEQUALS).
    Conflict between rule 38 and token RP_LESS resolved as shift (KW_OR < RP_LESS).
    Conflict between rule 38 and token RP_LESSEQUALS resolved as shift (KW_OR < RP_LESSEQUALS).
    Conflict between rule 38 and token RP_MORE resolved as shift (KW_OR < RP_MORE).
    Conflict between rule 38 and token RP_MOREEQUALS resolved as shift (KW_OR < RP_MOREEQUALS).


State 95

   37 expressions: expressions â¢ KW_AND expressions
   38            | expressions â¢ KW_OR expressions
   45 arithmetic_expressions: expressions â¢ OP_POWER expressions
   46                       | expressions â¢ OP_MULT expressions
   47                       | expressions â¢ OP_DIV expressions
   48                       | expressions â¢ OP_MOD expressions
   49                       | expressions â¢ OP_PLUS expressions
   49                       | expressions OP_PLUS expressions â¢  [KW_FOR, KW_AND, KW_OR, OP_PLUS, DEL_SMCOLON, DEL_RPAR, DEL_COMMA, DEL_RBLOCK, DEL_COLON]
   50                       | expressions â¢ OP_MINUS expressions
   53 relational_expressions: expressions â¢ RP_LESS expressions
   54                       | expressions â¢ RP_LESSEQUALS expressions
   55                       | expressions â¢ RP_MORE expressions
   56                       | expressions â¢ RP_MOREEQUALS expressions
   57                       | expressions â¢ RP_EQUALS expressions
   58                       | expressions â¢ RP_NOTEQUALS expressions

    OP_MINUS       shift, and go to state 69
    OP_MULT        shift, and go to state 70
    OP_DIV         shift, and go to state 71
    OP_MOD         shift, and go to state 72
    OP_POWER       shift, and go to state 73
    RP_EQUALS      shift, and go to state 74
    RP_NOTEQUALS   shift, and go to state 75
    RP_LESS        shift, and go to state 76
    RP_LESSEQUALS  shift, and go to state 77
    RP_MORE        shift, and go to state 78
    RP_MOREEQUALS  shift, and go to state 79

    $default  reduce using rule 49 (arithmetic_expressions)

    Conflict between rule 49 and token KW_AND resolved as reduce (KW_AND < OP_PLUS).
    Conflict between rule 49 and token KW_OR resolved as reduce (KW_OR < OP_PLUS).
    Conflict between rule 49 and token OP_PLUS resolved as reduce (%left OP_PLUS).
    Conflict between rule 49 and token OP_MINUS resolved as shift (OP_PLUS < OP_MINUS).
    Conflict between rule 49 and token OP_MULT resolved as shift (OP_PLUS < OP_MULT).
    Conflict between rule 49 and token OP_DIV resolved as shift (OP_PLUS < OP_DIV).
    Conflict between rule 49 and token OP_MOD resolved as shift (OP_PLUS < OP_MOD).
    Conflict between rule 49 and token OP_POWER resolved as shift (OP_PLUS < OP_POWER).
    Conflict between rule 49 and token RP_EQUALS resolved as shift (OP_PLUS < RP_EQUALS).
    Conflict between rule 49 and token RP_NOTEQUALS resolved as shift (OP_PLUS < RP_NOTEQUALS).
    Conflict between rule 49 and token RP_LESS resolved as shift (OP_PLUS < RP_LESS).
    Conflict between rule 49 and token RP_LESSEQUALS resolved as shift (OP_PLUS < RP_LESSEQUALS).
    Conflict between rule 49 and token RP_MORE resolved as shift (OP_PLUS < RP_MORE).
    Conflict between rule 49 and token RP_MOREEQUALS resolved as shift (OP_PLUS < RP_MOREEQUALS).


State 96

   37 expressions: expressions â¢ KW_AND expressions
   38            | expressions â¢ KW_OR expressions
   45 arithmetic_expressions: expressions â¢ OP_POWER expressions
   46                       | expressions â¢ OP_MULT expressions
   47                       | expressions â¢ OP_DIV expressions
   48                       | expressions â¢ OP_MOD expressions
   49                       | expressions â¢ OP_PLUS expressions
   50                       | expressions â¢ OP_MINUS expressions
   50                       | expressions OP_MINUS expressions â¢  [KW_FOR, KW_AND, KW_OR, OP_PLUS, OP_MINUS, DEL_SMCOLON, DEL_RPAR, DEL_COMMA, DEL_RBLOCK, DEL_COLON]
   53 relational_expressions: expressions â¢ RP_LESS expressions
   54                       | expressions â¢ RP_LESSEQUALS expressions
   55                       | expressions â¢ RP_MORE expressions
   56                       | expressions â¢ RP_MOREEQUALS expressions
   57                       | expressions â¢ RP_EQUALS expressions
   58                       | expressions â¢ RP_NOTEQUALS expressions

    OP_MULT        shift, and go to state 70
    OP_DIV         shift, and go to state 71
    OP_MOD         shift, and go to state 72
    OP_POWER       shift, and go to state 73
    RP_EQUALS      shift, and go to state 74
    RP_NOTEQUALS   shift, and go to state 75
    RP_LESS        shift, and go to state 76
    RP_LESSEQUALS  shift, and go to state 77
    RP_MORE        shift, and go to state 78
    RP_MOREEQUALS  shift, and go to state 79

    $default  reduce using rule 50 (arithmetic_expressions)

    Conflict between rule 50 and token KW_AND resolved as reduce (KW_AND < OP_MINUS).
    Conflict between rule 50 and token KW_OR resolved as reduce (KW_OR < OP_MINUS).
    Conflict between rule 50 and token OP_PLUS resolved as reduce (OP_PLUS < OP_MINUS).
    Conflict between rule 50 and token OP_MINUS resolved as reduce (%left OP_MINUS).
    Conflict between rule 50 and token OP_MULT resolved as shift (OP_MINUS < OP_MULT).
    Conflict between rule 50 and token OP_DIV resolved as shift (OP_MINUS < OP_DIV).
    Conflict between rule 50 and token OP_MOD resolved as shift (OP_MINUS < OP_MOD).
    Conflict between rule 50 and token OP_POWER resolved as shift (OP_MINUS < OP_POWER).
    Conflict between rule 50 and token RP_EQUALS resolved as shift (OP_MINUS < RP_EQUALS).
    Conflict between rule 50 and token RP_NOTEQUALS resolved as shift (OP_MINUS < RP_NOTEQUALS).
    Conflict between rule 50 and token RP_LESS resolved as shift (OP_MINUS < RP_LESS).
    Conflict between rule 50 and token RP_LESSEQUALS resolved as shift (OP_MINUS < RP_LESSEQUALS).
    Conflict between rule 50 and token RP_MORE resolved as shift (OP_MINUS < RP_MORE).
    Conflict between rule 50 and token RP_MOREEQUALS resolved as shift (OP_MINUS < RP_MOREEQUALS).


State 97

   37 expressions: expressions â¢ KW_AND expressions
   38            | expressions â¢ KW_OR expressions
   45 arithmetic_expressions: expressions â¢ OP_POWER expressions
   46                       | expressions â¢ OP_MULT expressions
   46                       | expressions OP_MULT expressions â¢  [KW_FOR, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MULT, DEL_SMCOLON, DEL_RPAR, DEL_COMMA, DEL_RBLOCK, DEL_COLON]
   47                       | expressions â¢ OP_DIV expressions
   48                       | expressions â¢ OP_MOD expressions
   49                       | expressions â¢ OP_PLUS expressions
   50                       | expressions â¢ OP_MINUS expressions
   53 relational_expressions: expressions â¢ RP_LESS expressions
   54                       | expressions â¢ RP_LESSEQUALS expressions
   55                       | expressions â¢ RP_MORE expressions
   56                       | expressions â¢ RP_MOREEQUALS expressions
   57                       | expressions â¢ RP_EQUALS expressions
   58                       | expressions â¢ RP_NOTEQUALS expressions

    OP_DIV         shift, and go to state 71
    OP_MOD         shift, and go to state 72
    OP_POWER       shift, and go to state 73
    RP_EQUALS      shift, and go to state 74
    RP_NOTEQUALS   shift, and go to state 75
    RP_LESS        shift, and go to state 76
    RP_LESSEQUALS  shift, and go to state 77
    RP_MORE        shift, and go to state 78
    RP_MOREEQUALS  shift, and go to state 79

    $default  reduce using rule 46 (arithmetic_expressions)

    Conflict between rule 46 and token KW_AND resolved as reduce (KW_AND < OP_MULT).
    Conflict between rule 46 and token KW_OR resolved as reduce (KW_OR < OP_MULT).
    Conflict between rule 46 and token OP_PLUS resolved as reduce (OP_PLUS < OP_MULT).
    Conflict between rule 46 and token OP_MINUS resolved as reduce (OP_MINUS < OP_MULT).
    Conflict between rule 46 and token OP_MULT resolved as reduce (%left OP_MULT).
    Conflict between rule 46 and token OP_DIV resolved as shift (OP_MULT < OP_DIV).
    Conflict between rule 46 and token OP_MOD resolved as shift (OP_MULT < OP_MOD).
    Conflict between rule 46 and token OP_POWER resolved as shift (OP_MULT < OP_POWER).
    Conflict between rule 46 and token RP_EQUALS resolved as shift (OP_MULT < RP_EQUALS).
    Conflict between rule 46 and token RP_NOTEQUALS resolved as shift (OP_MULT < RP_NOTEQUALS).
    Conflict between rule 46 and token RP_LESS resolved as shift (OP_MULT < RP_LESS).
    Conflict between rule 46 and token RP_LESSEQUALS resolved as shift (OP_MULT < RP_LESSEQUALS).
    Conflict between rule 46 and token RP_MORE resolved as shift (OP_MULT < RP_MORE).
    Conflict between rule 46 and token RP_MOREEQUALS resolved as shift (OP_MULT < RP_MOREEQUALS).


State 98

   37 expressions: expressions â¢ KW_AND expressions
   38            | expressions â¢ KW_OR expressions
   45 arithmetic_expressions: expressions â¢ OP_POWER expressions
   46                       | expressions â¢ OP_MULT expressions
   47                       | expressions â¢ OP_DIV expressions
   47                       | expressions OP_DIV expressions â¢  [KW_FOR, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, DEL_SMCOLON, DEL_RPAR, DEL_COMMA, DEL_RBLOCK, DEL_COLON]
   48                       | expressions â¢ OP_MOD expressions
   49                       | expressions â¢ OP_PLUS expressions
   50                       | expressions â¢ OP_MINUS expressions
   53 relational_expressions: expressions â¢ RP_LESS expressions
   54                       | expressions â¢ RP_LESSEQUALS expressions
   55                       | expressions â¢ RP_MORE expressions
   56                       | expressions â¢ RP_MOREEQUALS expressions
   57                       | expressions â¢ RP_EQUALS expressions
   58                       | expressions â¢ RP_NOTEQUALS expressions

    OP_MOD         shift, and go to state 72
    OP_POWER       shift, and go to state 73
    RP_EQUALS      shift, and go to state 74
    RP_NOTEQUALS   shift, and go to state 75
    RP_LESS        shift, and go to state 76
    RP_LESSEQUALS  shift, and go to state 77
    RP_MORE        shift, and go to state 78
    RP_MOREEQUALS  shift, and go to state 79

    $default  reduce using rule 47 (arithmetic_expressions)

    Conflict between rule 47 and token KW_AND resolved as reduce (KW_AND < OP_DIV).
    Conflict between rule 47 and token KW_OR resolved as reduce (KW_OR < OP_DIV).
    Conflict between rule 47 and token OP_PLUS resolved as reduce (OP_PLUS < OP_DIV).
    Conflict between rule 47 and token OP_MINUS resolved as reduce (OP_MINUS < OP_DIV).
    Conflict between rule 47 and token OP_MULT resolved as reduce (OP_MULT < OP_DIV).
    Conflict between rule 47 and token OP_DIV resolved as reduce (%left OP_DIV).
    Conflict between rule 47 and token OP_MOD resolved as shift (OP_DIV < OP_MOD).
    Conflict between rule 47 and token OP_POWER resolved as shift (OP_DIV < OP_POWER).
    Conflict between rule 47 and token RP_EQUALS resolved as shift (OP_DIV < RP_EQUALS).
    Conflict between rule 47 and token RP_NOTEQUALS resolved as shift (OP_DIV < RP_NOTEQUALS).
    Conflict between rule 47 and token RP_LESS resolved as shift (OP_DIV < RP_LESS).
    Conflict between rule 47 and token RP_LESSEQUALS resolved as shift (OP_DIV < RP_LESSEQUALS).
    Conflict between rule 47 and token RP_MORE resolved as shift (OP_DIV < RP_MORE).
    Conflict between rule 47 and token RP_MOREEQUALS resolved as shift (OP_DIV < RP_MOREEQUALS).


State 99

   37 expressions: expressions â¢ KW_AND expressions
   38            | expressions â¢ KW_OR expressions
   45 arithmetic_expressions: expressions â¢ OP_POWER expressions
   46                       | expressions â¢ OP_MULT expressions
   47                       | expressions â¢ OP_DIV expressions
   48                       | expressions â¢ OP_MOD expressions
   48                       | expressions OP_MOD expressions â¢  [KW_FOR, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, DEL_SMCOLON, DEL_RPAR, DEL_COMMA, DEL_RBLOCK, DEL_COLON]
   49                       | expressions â¢ OP_PLUS expressions
   50                       | expressions â¢ OP_MINUS expressions
   53 relational_expressions: expressions â¢ RP_LESS expressions
   54                       | expressions â¢ RP_LESSEQUALS expressions
   55                       | expressions â¢ RP_MORE expressions
   56                       | expressions â¢ RP_MOREEQUALS expressions
   57                       | expressions â¢ RP_EQUALS expressions
   58                       | expressions â¢ RP_NOTEQUALS expressions

    OP_POWER       shift, and go to state 73
    RP_EQUALS      shift, and go to state 74
    RP_NOTEQUALS   shift, and go to state 75
    RP_LESS        shift, and go to state 76
    RP_LESSEQUALS  shift, and go to state 77
    RP_MORE        shift, and go to state 78
    RP_MOREEQUALS  shift, and go to state 79

    $default  reduce using rule 48 (arithmetic_expressions)

    Conflict between rule 48 and token KW_AND resolved as reduce (KW_AND < OP_MOD).
    Conflict between rule 48 and token KW_OR resolved as reduce (KW_OR < OP_MOD).
    Conflict between rule 48 and token OP_PLUS resolved as reduce (OP_PLUS < OP_MOD).
    Conflict between rule 48 and token OP_MINUS resolved as reduce (OP_MINUS < OP_MOD).
    Conflict between rule 48 and token OP_MULT resolved as reduce (OP_MULT < OP_MOD).
    Conflict between rule 48 and token OP_DIV resolved as reduce (OP_DIV < OP_MOD).
    Conflict between rule 48 and token OP_MOD resolved as reduce (%left OP_MOD).
    Conflict between rule 48 and token OP_POWER resolved as shift (OP_MOD < OP_POWER).
    Conflict between rule 48 and token RP_EQUALS resolved as shift (OP_MOD < RP_EQUALS).
    Conflict between rule 48 and token RP_NOTEQUALS resolved as shift (OP_MOD < RP_NOTEQUALS).
    Conflict between rule 48 and token RP_LESS resolved as shift (OP_MOD < RP_LESS).
    Conflict between rule 48 and token RP_LESSEQUALS resolved as shift (OP_MOD < RP_LESSEQUALS).
    Conflict between rule 48 and token RP_MORE resolved as shift (OP_MOD < RP_MORE).
    Conflict between rule 48 and token RP_MOREEQUALS resolved as shift (OP_MOD < RP_MOREEQUALS).


State 100

   37 expressions: expressions â¢ KW_AND expressions
   38            | expressions â¢ KW_OR expressions
   45 arithmetic_expressions: expressions â¢ OP_POWER expressions
   45                       | expressions OP_POWER expressions â¢  [KW_FOR, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, DEL_SMCOLON, DEL_RPAR, DEL_COMMA, DEL_RBLOCK, DEL_COLON]
   46                       | expressions â¢ OP_MULT expressions
   47                       | expressions â¢ OP_DIV expressions
   48                       | expressions â¢ OP_MOD expressions
   49                       | expressions â¢ OP_PLUS expressions
   50                       | expressions â¢ OP_MINUS expressions
   53 relational_expressions: expressions â¢ RP_LESS expressions
   54                       | expressions â¢ RP_LESSEQUALS expressions
   55                       | expressions â¢ RP_MORE expressions
   56                       | expressions â¢ RP_MOREEQUALS expressions
   57                       | expressions â¢ RP_EQUALS expressions
   58                       | expressions â¢ RP_NOTEQUALS expressions

    OP_POWER       shift, and go to state 73
    RP_EQUALS      shift, and go to state 74
    RP_NOTEQUALS   shift, and go to state 75
    RP_LESS        shift, and go to state 76
    RP_LESSEQUALS  shift, and go to state 77
    RP_MORE        shift, and go to state 78
    RP_MOREEQUALS  shift, and go to state 79

    $default  reduce using rule 45 (arithmetic_expressions)

    Conflict between rule 45 and token KW_AND resolved as reduce (KW_AND < OP_POWER).
    Conflict between rule 45 and token KW_OR resolved as reduce (KW_OR < OP_POWER).
    Conflict between rule 45 and token OP_PLUS resolved as reduce (OP_PLUS < OP_POWER).
    Conflict between rule 45 and token OP_MINUS resolved as reduce (OP_MINUS < OP_POWER).
    Conflict between rule 45 and token OP_MULT resolved as reduce (OP_MULT < OP_POWER).
    Conflict between rule 45 and token OP_DIV resolved as reduce (OP_DIV < OP_POWER).
    Conflict between rule 45 and token OP_MOD resolved as reduce (OP_MOD < OP_POWER).
    Conflict between rule 45 and token OP_POWER resolved as shift (%right OP_POWER).
    Conflict between rule 45 and token RP_EQUALS resolved as shift (OP_POWER < RP_EQUALS).
    Conflict between rule 45 and token RP_NOTEQUALS resolved as shift (OP_POWER < RP_NOTEQUALS).
    Conflict between rule 45 and token RP_LESS resolved as shift (OP_POWER < RP_LESS).
    Conflict between rule 45 and token RP_LESSEQUALS resolved as shift (OP_POWER < RP_LESSEQUALS).
    Conflict between rule 45 and token RP_MORE resolved as shift (OP_POWER < RP_MORE).
    Conflict between rule 45 and token RP_MOREEQUALS resolved as shift (OP_POWER < RP_MOREEQUALS).


State 101

   37 expressions: expressions â¢ KW_AND expressions
   38            | expressions â¢ KW_OR expressions
   45 arithmetic_expressions: expressions â¢ OP_POWER expressions
   46                       | expressions â¢ OP_MULT expressions
   47                       | expressions â¢ OP_DIV expressions
   48                       | expressions â¢ OP_MOD expressions
   49                       | expressions â¢ OP_PLUS expressions
   50                       | expressions â¢ OP_MINUS expressions
   53 relational_expressions: expressions â¢ RP_LESS expressions
   54                       | expressions â¢ RP_LESSEQUALS expressions
   55                       | expressions â¢ RP_MORE expressions
   56                       | expressions â¢ RP_MOREEQUALS expressions
   57                       | expressions â¢ RP_EQUALS expressions
   57                       | expressions RP_EQUALS expressions â¢  [KW_FOR, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, OP_POWER, RP_EQUALS, DEL_SMCOLON, DEL_RPAR, DEL_COMMA, DEL_RBLOCK, DEL_COLON]
   58                       | expressions â¢ RP_NOTEQUALS expressions

    RP_NOTEQUALS   shift, and go to state 75
    RP_LESS        shift, and go to state 76
    RP_LESSEQUALS  shift, and go to state 77
    RP_MORE        shift, and go to state 78
    RP_MOREEQUALS  shift, and go to state 79

    $default  reduce using rule 57 (relational_expressions)

    Conflict between rule 57 and token KW_AND resolved as reduce (KW_AND < RP_EQUALS).
    Conflict between rule 57 and token KW_OR resolved as reduce (KW_OR < RP_EQUALS).
    Conflict between rule 57 and token OP_PLUS resolved as reduce (OP_PLUS < RP_EQUALS).
    Conflict between rule 57 and token OP_MINUS resolved as reduce (OP_MINUS < RP_EQUALS).
    Conflict between rule 57 and token OP_MULT resolved as reduce (OP_MULT < RP_EQUALS).
    Conflict between rule 57 and token OP_DIV resolved as reduce (OP_DIV < RP_EQUALS).
    Conflict between rule 57 and token OP_MOD resolved as reduce (OP_MOD < RP_EQUALS).
    Conflict between rule 57 and token OP_POWER resolved as reduce (OP_POWER < RP_EQUALS).
    Conflict between rule 57 and token RP_EQUALS resolved as reduce (%left RP_EQUALS).
    Conflict between rule 57 and token RP_NOTEQUALS resolved as shift (RP_EQUALS < RP_NOTEQUALS).
    Conflict between rule 57 and token RP_LESS resolved as shift (RP_EQUALS < RP_LESS).
    Conflict between rule 57 and token RP_LESSEQUALS resolved as shift (RP_EQUALS < RP_LESSEQUALS).
    Conflict between rule 57 and token RP_MORE resolved as shift (RP_EQUALS < RP_MORE).
    Conflict between rule 57 and token RP_MOREEQUALS resolved as shift (RP_EQUALS < RP_MOREEQUALS).


State 102

   37 expressions: expressions â¢ KW_AND expressions
   38            | expressions â¢ KW_OR expressions
   45 arithmetic_expressions: expressions â¢ OP_POWER expressions
   46                       | expressions â¢ OP_MULT expressions
   47                       | expressions â¢ OP_DIV expressions
   48                       | expressions â¢ OP_MOD expressions
   49                       | expressions â¢ OP_PLUS expressions
   50                       | expressions â¢ OP_MINUS expressions
   53 relational_expressions: expressions â¢ RP_LESS expressions
   54                       | expressions â¢ RP_LESSEQUALS expressions
   55                       | expressions â¢ RP_MORE expressions
   56                       | expressions â¢ RP_MOREEQUALS expressions
   57                       | expressions â¢ RP_EQUALS expressions
   58                       | expressions â¢ RP_NOTEQUALS expressions
   58                       | expressions RP_NOTEQUALS expressions â¢  [KW_FOR, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, OP_POWER, RP_EQUALS, RP_NOTEQUALS, DEL_SMCOLON, DEL_RPAR, DEL_COMMA, DEL_RBLOCK, DEL_COLON]

    RP_LESS        shift, and go to state 76
    RP_LESSEQUALS  shift, and go to state 77
    RP_MORE        shift, and go to state 78
    RP_MOREEQUALS  shift, and go to state 79

    $default  reduce using rule 58 (relational_expressions)

    Conflict between rule 58 and token KW_AND resolved as reduce (KW_AND < RP_NOTEQUALS).
    Conflict between rule 58 and token KW_OR resolved as reduce (KW_OR < RP_NOTEQUALS).
    Conflict between rule 58 and token OP_PLUS resolved as reduce (OP_PLUS < RP_NOTEQUALS).
    Conflict between rule 58 and token OP_MINUS resolved as reduce (OP_MINUS < RP_NOTEQUALS).
    Conflict between rule 58 and token OP_MULT resolved as reduce (OP_MULT < RP_NOTEQUALS).
    Conflict between rule 58 and token OP_DIV resolved as reduce (OP_DIV < RP_NOTEQUALS).
    Conflict between rule 58 and token OP_MOD resolved as reduce (OP_MOD < RP_NOTEQUALS).
    Conflict between rule 58 and token OP_POWER resolved as reduce (OP_POWER < RP_NOTEQUALS).
    Conflict between rule 58 and token RP_EQUALS resolved as reduce (RP_EQUALS < RP_NOTEQUALS).
    Conflict between rule 58 and token RP_NOTEQUALS resolved as reduce (%left RP_NOTEQUALS).
    Conflict between rule 58 and token RP_LESS resolved as shift (RP_NOTEQUALS < RP_LESS).
    Conflict between rule 58 and token RP_LESSEQUALS resolved as shift (RP_NOTEQUALS < RP_LESSEQUALS).
    Conflict between rule 58 and token RP_MORE resolved as shift (RP_NOTEQUALS < RP_MORE).
    Conflict between rule 58 and token RP_MOREEQUALS resolved as shift (RP_NOTEQUALS < RP_MOREEQUALS).


State 103

   37 expressions: expressions â¢ KW_AND expressions
   38            | expressions â¢ KW_OR expressions
   45 arithmetic_expressions: expressions â¢ OP_POWER expressions
   46                       | expressions â¢ OP_MULT expressions
   47                       | expressions â¢ OP_DIV expressions
   48                       | expressions â¢ OP_MOD expressions
   49                       | expressions â¢ OP_PLUS expressions
   50                       | expressions â¢ OP_MINUS expressions
   53 relational_expressions: expressions â¢ RP_LESS expressions
   53                       | expressions RP_LESS expressions â¢  [KW_FOR, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, OP_POWER, RP_EQUALS, RP_NOTEQUALS, RP_LESS, DEL_SMCOLON, DEL_RPAR, DEL_COMMA, DEL_RBLOCK, DEL_COLON]
   54                       | expressions â¢ RP_LESSEQUALS expressions
   55                       | expressions â¢ RP_MORE expressions
   56                       | expressions â¢ RP_MOREEQUALS expressions
   57                       | expressions â¢ RP_EQUALS expressions
   58                       | expressions â¢ RP_NOTEQUALS expressions

    RP_LESSEQUALS  shift, and go to state 77
    RP_MORE        shift, and go to state 78
    RP_MOREEQUALS  shift, and go to state 79

    $default  reduce using rule 53 (relational_expressions)

    Conflict between rule 53 and token KW_AND resolved as reduce (KW_AND < RP_LESS).
    Conflict between rule 53 and token KW_OR resolved as reduce (KW_OR < RP_LESS).
    Conflict between rule 53 and token OP_PLUS resolved as reduce (OP_PLUS < RP_LESS).
    Conflict between rule 53 and token OP_MINUS resolved as reduce (OP_MINUS < RP_LESS).
    Conflict between rule 53 and token OP_MULT resolved as reduce (OP_MULT < RP_LESS).
    Conflict between rule 53 and token OP_DIV resolved as reduce (OP_DIV < RP_LESS).
    Conflict between rule 53 and token OP_MOD resolved as reduce (OP_MOD < RP_LESS).
    Conflict between rule 53 and token OP_POWER resolved as reduce (OP_POWER < RP_LESS).
    Conflict between rule 53 and token RP_EQUALS resolved as reduce (RP_EQUALS < RP_LESS).
    Conflict between rule 53 and token RP_NOTEQUALS resolved as reduce (RP_NOTEQUALS < RP_LESS).
    Conflict between rule 53 and token RP_LESS resolved as reduce (%left RP_LESS).
    Conflict between rule 53 and token RP_LESSEQUALS resolved as shift (RP_LESS < RP_LESSEQUALS).
    Conflict between rule 53 and token RP_MORE resolved as shift (RP_LESS < RP_MORE).
    Conflict between rule 53 and token RP_MOREEQUALS resolved as shift (RP_LESS < RP_MOREEQUALS).


State 104

   37 expressions: expressions â¢ KW_AND expressions
   38            | expressions â¢ KW_OR expressions
   45 arithmetic_expressions: expressions â¢ OP_POWER expressions
   46                       | expressions â¢ OP_MULT expressions
   47                       | expressions â¢ OP_DIV expressions
   48                       | expressions â¢ OP_MOD expressions
   49                       | expressions â¢ OP_PLUS expressions
   50                       | expressions â¢ OP_MINUS expressions
   53 relational_expressions: expressions â¢ RP_LESS expressions
   54                       | expressions â¢ RP_LESSEQUALS expressions
   54                       | expressions RP_LESSEQUALS expressions â¢  [KW_FOR, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, OP_POWER, RP_EQUALS, RP_NOTEQUALS, RP_LESS, RP_LESSEQUALS, DEL_SMCOLON, DEL_RPAR, DEL_COMMA, DEL_RBLOCK, DEL_COLON]
   55                       | expressions â¢ RP_MORE expressions
   56                       | expressions â¢ RP_MOREEQUALS expressions
   57                       | expressions â¢ RP_EQUALS expressions
   58                       | expressions â¢ RP_NOTEQUALS expressions

    RP_MORE        shift, and go to state 78
    RP_MOREEQUALS  shift, and go to state 79

    $default  reduce using rule 54 (relational_expressions)

    Conflict between rule 54 and token KW_AND resolved as reduce (KW_AND < RP_LESSEQUALS).
    Conflict between rule 54 and token KW_OR resolved as reduce (KW_OR < RP_LESSEQUALS).
    Conflict between rule 54 and token OP_PLUS resolved as reduce (OP_PLUS < RP_LESSEQUALS).
    Conflict between rule 54 and token OP_MINUS resolved as reduce (OP_MINUS < RP_LESSEQUALS).
    Conflict between rule 54 and token OP_MULT resolved as reduce (OP_MULT < RP_LESSEQUALS).
    Conflict between rule 54 and token OP_DIV resolved as reduce (OP_DIV < RP_LESSEQUALS).
    Conflict between rule 54 and token OP_MOD resolved as reduce (OP_MOD < RP_LESSEQUALS).
    Conflict between rule 54 and token OP_POWER resolved as reduce (OP_POWER < RP_LESSEQUALS).
    Conflict between rule 54 and token RP_EQUALS resolved as reduce (RP_EQUALS < RP_LESSEQUALS).
    Conflict between rule 54 and token RP_NOTEQUALS resolved as reduce (RP_NOTEQUALS < RP_LESSEQUALS).
    Conflict between rule 54 and token RP_LESS resolved as reduce (RP_LESS < RP_LESSEQUALS).
    Conflict between rule 54 and token RP_LESSEQUALS resolved as reduce (%left RP_LESSEQUALS).
    Conflict between rule 54 and token RP_MORE resolved as shift (RP_LESSEQUALS < RP_MORE).
    Conflict between rule 54 and token RP_MOREEQUALS resolved as shift (RP_LESSEQUALS < RP_MOREEQUALS).


State 105

   37 expressions: expressions â¢ KW_AND expressions
   38            | expressions â¢ KW_OR expressions
   45 arithmetic_expressions: expressions â¢ OP_POWER expressions
   46                       | expressions â¢ OP_MULT expressions
   47                       | expressions â¢ OP_DIV expressions
   48                       | expressions â¢ OP_MOD expressions
   49                       | expressions â¢ OP_PLUS expressions
   50                       | expressions â¢ OP_MINUS expressions
   53 relational_expressions: expressions â¢ RP_LESS expressions
   54                       | expressions â¢ RP_LESSEQUALS expressions
   55                       | expressions â¢ RP_MORE expressions
   55                       | expressions RP_MORE expressions â¢  [KW_FOR, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, OP_POWER, RP_EQUALS, RP_NOTEQUALS, RP_LESS, RP_LESSEQUALS, RP_MORE, DEL_SMCOLON, DEL_RPAR, DEL_COMMA, DEL_RBLOCK, DEL_COLON]
   56                       | expressions â¢ RP_MOREEQUALS expressions
   57                       | expressions â¢ RP_EQUALS expressions
   58                       | expressions â¢ RP_NOTEQUALS expressions

    RP_MOREEQUALS  shift, and go to state 79

    $default  reduce using rule 55 (relational_expressions)

    Conflict between rule 55 and token KW_AND resolved as reduce (KW_AND < RP_MORE).
    Conflict between rule 55 and token KW_OR resolved as reduce (KW_OR < RP_MORE).
    Conflict between rule 55 and token OP_PLUS resolved as reduce (OP_PLUS < RP_MORE).
    Conflict between rule 55 and token OP_MINUS resolved as reduce (OP_MINUS < RP_MORE).
    Conflict between rule 55 and token OP_MULT resolved as reduce (OP_MULT < RP_MORE).
    Conflict between rule 55 and token OP_DIV resolved as reduce (OP_DIV < RP_MORE).
    Conflict between rule 55 and token OP_MOD resolved as reduce (OP_MOD < RP_MORE).
    Conflict between rule 55 and token OP_POWER resolved as reduce (OP_POWER < RP_MORE).
    Conflict between rule 55 and token RP_EQUALS resolved as reduce (RP_EQUALS < RP_MORE).
    Conflict between rule 55 and token RP_NOTEQUALS resolved as reduce (RP_NOTEQUALS < RP_MORE).
    Conflict between rule 55 and token RP_LESS resolved as reduce (RP_LESS < RP_MORE).
    Conflict between rule 55 and token RP_LESSEQUALS resolved as reduce (RP_LESSEQUALS < RP_MORE).
    Conflict between rule 55 and token RP_MORE resolved as reduce (%left RP_MORE).
    Conflict between rule 55 and token RP_MOREEQUALS resolved as shift (RP_MORE < RP_MOREEQUALS).


State 106

   37 expressions: expressions â¢ KW_AND expressions
   38            | expressions â¢ KW_OR expressions
   45 arithmetic_expressions: expressions â¢ OP_POWER expressions
   46                       | expressions â¢ OP_MULT expressions
   47                       | expressions â¢ OP_DIV expressions
   48                       | expressions â¢ OP_MOD expressions
   49                       | expressions â¢ OP_PLUS expressions
   50                       | expressions â¢ OP_MINUS expressions
   53 relational_expressions: expressions â¢ RP_LESS expressions
   54                       | expressions â¢ RP_LESSEQUALS expressions
   55                       | expressions â¢ RP_MORE expressions
   56                       | expressions â¢ RP_MOREEQUALS expressions
   56                       | expressions RP_MOREEQUALS expressions â¢  [KW_FOR, KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, OP_POWER, RP_EQUALS, RP_NOTEQUALS, RP_LESS, RP_LESSEQUALS, RP_MORE, RP_MOREEQUALS, DEL_SMCOLON, DEL_RPAR, DEL_COMMA, DEL_RBLOCK, DEL_COLON]
   57                       | expressions â¢ RP_EQUALS expressions
   58                       | expressions â¢ RP_NOTEQUALS expressions

    $default  reduce using rule 56 (relational_expressions)

    Conflict between rule 56 and token KW_AND resolved as reduce (KW_AND < RP_MOREEQUALS).
    Conflict between rule 56 and token KW_OR resolved as reduce (KW_OR < RP_MOREEQUALS).
    Conflict between rule 56 and token OP_PLUS resolved as reduce (OP_PLUS < RP_MOREEQUALS).
    Conflict between rule 56 and token OP_MINUS resolved as reduce (OP_MINUS < RP_MOREEQUALS).
    Conflict between rule 56 and token OP_MULT resolved as reduce (OP_MULT < RP_MOREEQUALS).
    Conflict between rule 56 and token OP_DIV resolved as reduce (OP_DIV < RP_MOREEQUALS).
    Conflict between rule 56 and token OP_MOD resolved as reduce (OP_MOD < RP_MOREEQUALS).
    Conflict between rule 56 and token OP_POWER resolved as reduce (OP_POWER < RP_MOREEQUALS).
    Conflict between rule 56 and token RP_EQUALS resolved as reduce (RP_EQUALS < RP_MOREEQUALS).
    Conflict between rule 56 and token RP_NOTEQUALS resolved as reduce (RP_NOTEQUALS < RP_MOREEQUALS).
    Conflict between rule 56 and token RP_LESS resolved as reduce (RP_LESS < RP_MOREEQUALS).
    Conflict between rule 56 and token RP_LESSEQUALS resolved as reduce (RP_LESSEQUALS < RP_MOREEQUALS).
    Conflict between rule 56 and token RP_MORE resolved as reduce (RP_MORE < RP_MOREEQUALS).
    Conflict between rule 56 and token RP_MOREEQUALS resolved as reduce (%left RP_MOREEQUALS).


State 107

    5 types: DEL_LBLOCK â¢ DEL_RBLOCK basic_types

    DEL_RBLOCK  shift, and go to state 142


State 108

   21 constant_declarations: KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types â¢ DEL_SMCOLON

    DEL_SMCOLON  shift, and go to state 143


State 109

    6 types: basic_types â¢

    $default  reduce using rule 6 (types)


State 110

   25 parameter_declarations: TK_IDENTIFIER DEL_COLON types â¢  [DEL_RPAR]
   26                       | TK_IDENTIFIER DEL_COLON types â¢ DEL_COMMA parameter_declarations

    DEL_COMMA  shift, and go to state 144

    $default  reduce using rule 25 (parameter_declarations)


State 111

    5 types: â¢ DEL_LBLOCK DEL_RBLOCK basic_types
    6      | â¢ basic_types
    7 basic_types: â¢ KW_INT
    8            | â¢ KW_BOOLEAN
    9            | â¢ KW_SCALAR
   10            | â¢ KW_STR
   24 functions: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN â¢ types DEL_COLON body KW_ENDDEF DEL_SMCOLON

    KW_INT      shift, and go to state 32
    KW_SCALAR   shift, and go to state 33
    KW_STR      shift, and go to state 34
    KW_BOOLEAN  shift, and go to state 35
    DEL_LBLOCK  shift, and go to state 107

    types        go to state 145
    basic_types  go to state 109


State 112

   11 identifiers: â¢ TK_IDENTIFIER
   12            | â¢ identifiers DEL_COMMA TK_IDENTIFIER
   19 variable_declarations: â¢ identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK basic_types DEL_SMCOLON
   21 constant_declarations: â¢ KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON
   23 functions: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR DEL_COLON â¢ body KW_ENDDEF DEL_SMCOLON
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   59 assign_expressions: â¢ identifier_expressions AP_ASSIGN expressions
   60                   | â¢ identifier_expressions AP_PLUSASSIGN expressions
   61                   | â¢ identifier_expressions AP_MINASSIGN expressions
   62                   | â¢ identifier_expressions AP_MULASSIGN expressions
   63                   | â¢ identifier_expressions AP_DIVASSIGN expressions
   64                   | â¢ identifier_expressions AP_MODASSIGN expressions
   65 statements: â¢ if_statement DEL_SMCOLON
   66           | â¢ for_statement DEL_SMCOLON
   67           | â¢ array_statement DEL_SMCOLON
   68           | â¢ while_statement DEL_SMCOLON
   69           | â¢ KW_BREAK DEL_SMCOLON
   70           | â¢ KW_CONTINUE DEL_SMCOLON
   71           | â¢ assign_expressions DEL_SMCOLON
   72           | â¢ return_statement DEL_SMCOLON
   73           | â¢ function_statement DEL_SMCOLON
   80 if_statement: â¢ KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   81             | â¢ KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE command_statements KW_ENDIF
   82 for_statement: â¢ KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   83              | â¢ KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements DEL_SMCOLON KW_ENDFOR
   84 array_statement: â¢ integral_array
   85                | â¢ other_array
   86 integral_array: â¢ identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
   87 other_array: â¢ identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON types KW_IN identifiers KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types
   88 while_statement: â¢ KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE
   89 return_statement: â¢ KW_RETURN
   90                 | â¢ KW_RETURN expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR
   95 body: â¢ statements
   96     | â¢ variable_declarations
   97     | â¢ constant_declarations
   98     | â¢ body statements
   99     | â¢ body variable_declarations
  100     | â¢ body constant_declarations

    TK_IDENTIFIER  shift, and go to state 113
    KW_CONST       shift, and go to state 2
    KW_IF          shift, and go to state 114
    KW_FOR         shift, and go to state 115
    KW_WHILE       shift, and go to state 116
    KW_BREAK       shift, and go to state 117
    KW_CONTINUE    shift, and go to state 118
    KW_RETURN      shift, and go to state 119

    identifiers             go to state 120
    variable_declarations   go to state 121
    constant_declarations   go to state 122
    identifier_expressions  go to state 123
    assign_expressions      go to state 124
    statements              go to state 125
    if_statement            go to state 126
    for_statement           go to state 127
    array_statement         go to state 128
    integral_array          go to state 129
    other_array             go to state 130
    while_statement         go to state 131
    return_statement        go to state 132
    function_statement      go to state 133
    body                    go to state 146


State 113

   11 identifiers: TK_IDENTIFIER â¢  [AP_COLONASSIGN, DEL_COMMA, DEL_COLON]
   20 variable_declarations: TK_IDENTIFIER â¢ DEL_LBLOCK TK_INTEGER DEL_RBLOCK basic_types DEL_SMCOLON
   40 identifier_expressions: TK_IDENTIFIER â¢  [AP_ASSIGN, AP_PLUSASSIGN, AP_MINASSIGN, AP_MULASSIGN, AP_DIVASSIGN, AP_MODASSIGN]
   41                       | TK_IDENTIFIER â¢ DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | TK_IDENTIFIER â¢ DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   91 function_statement: TK_IDENTIFIER â¢ DEL_LPAR function_arg DEL_RPAR

    DEL_LPAR    shift, and go to state 60
    DEL_LBLOCK  shift, and go to state 147

    AP_COLONASSIGN  reduce using rule 11 (identifiers)
    DEL_COMMA       reduce using rule 11 (identifiers)
    DEL_COLON       reduce using rule 11 (identifiers)
    $default        reduce using rule 40 (identifier_expressions)


State 114

   80 if_statement: KW_IF â¢ DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   81             | KW_IF â¢ DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE command_statements KW_ENDIF

    DEL_LPAR  shift, and go to state 148


State 115

   11 identifiers: â¢ TK_IDENTIFIER
   12            | â¢ identifiers DEL_COMMA TK_IDENTIFIER
   82 for_statement: KW_FOR â¢ identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   83              | KW_FOR â¢ identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements DEL_SMCOLON KW_ENDFOR

    TK_IDENTIFIER  shift, and go to state 16

    identifiers  go to state 149


State 116

   88 while_statement: KW_WHILE â¢ DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE

    DEL_LPAR  shift, and go to state 150


State 117

   69 statements: KW_BREAK â¢ DEL_SMCOLON

    DEL_SMCOLON  shift, and go to state 151


State 118

   70 statements: KW_CONTINUE â¢ DEL_SMCOLON

    DEL_SMCOLON  shift, and go to state 152


State 119

   29 expressions: â¢ identifier_expressions
   30            | â¢ TK_STRING
   31            | â¢ KW_TRUE
   32            | â¢ KW_FALSE
   33            | â¢ function_statement
   34            | â¢ arithmetic_expressions
   35            | â¢ relational_expressions
   36            | â¢ KW_NOT expressions
   37            | â¢ expressions KW_AND expressions
   38            | â¢ expressions KW_OR expressions
   39            | â¢ DEL_LPAR expressions DEL_RPAR
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   43 arithmetic_expressions: â¢ TK_INTEGER
   44                       | â¢ TK_FLOAT
   45                       | â¢ expressions OP_POWER expressions
   46                       | â¢ expressions OP_MULT expressions
   47                       | â¢ expressions OP_DIV expressions
   48                       | â¢ expressions OP_MOD expressions
   49                       | â¢ expressions OP_PLUS expressions
   50                       | â¢ expressions OP_MINUS expressions
   51                       | â¢ OP_PLUS expressions
   52                       | â¢ OP_MINUS expressions
   53 relational_expressions: â¢ expressions RP_LESS expressions
   54                       | â¢ expressions RP_LESSEQUALS expressions
   55                       | â¢ expressions RP_MORE expressions
   56                       | â¢ expressions RP_MOREEQUALS expressions
   57                       | â¢ expressions RP_EQUALS expressions
   58                       | â¢ expressions RP_NOTEQUALS expressions
   89 return_statement: KW_RETURN â¢  [DEL_SMCOLON]
   90                 | KW_RETURN â¢ expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    DEL_LPAR       shift, and go to state 47

    $default  reduce using rule 89 (return_statement)

    expressions             go to state 153
    identifier_expressions  go to state 49
    arithmetic_expressions  go to state 50
    relational_expressions  go to state 51
    function_statement      go to state 52


State 120

   12 identifiers: identifiers â¢ DEL_COMMA TK_IDENTIFIER
   19 variable_declarations: identifiers â¢ DEL_COLON basic_types DEL_SMCOLON
   86 integral_array: identifiers â¢ AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
   87 other_array: identifiers â¢ AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON types KW_IN identifiers KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types

    AP_COLONASSIGN  shift, and go to state 154
    DEL_COMMA       shift, and go to state 22
    DEL_COLON       shift, and go to state 23


State 121

   96 body: variable_declarations â¢

    $default  reduce using rule 96 (body)


State 122

   97 body: constant_declarations â¢

    $default  reduce using rule 97 (body)


State 123

   59 assign_expressions: identifier_expressions â¢ AP_ASSIGN expressions
   60                   | identifier_expressions â¢ AP_PLUSASSIGN expressions
   61                   | identifier_expressions â¢ AP_MINASSIGN expressions
   62                   | identifier_expressions â¢ AP_MULASSIGN expressions
   63                   | identifier_expressions â¢ AP_DIVASSIGN expressions
   64                   | identifier_expressions â¢ AP_MODASSIGN expressions

    AP_ASSIGN      shift, and go to state 155
    AP_PLUSASSIGN  shift, and go to state 156
    AP_MINASSIGN   shift, and go to state 157
    AP_MULASSIGN   shift, and go to state 158
    AP_DIVASSIGN   shift, and go to state 159
    AP_MODASSIGN   shift, and go to state 160


State 124

   71 statements: assign_expressions â¢ DEL_SMCOLON

    DEL_SMCOLON  shift, and go to state 161


State 125

   95 body: statements â¢

    $default  reduce using rule 95 (body)


State 126

   65 statements: if_statement â¢ DEL_SMCOLON

    DEL_SMCOLON  shift, and go to state 162


State 127

   66 statements: for_statement â¢ DEL_SMCOLON

    DEL_SMCOLON  shift, and go to state 163


State 128

   67 statements: array_statement â¢ DEL_SMCOLON

    DEL_SMCOLON  shift, and go to state 164


State 129

   84 array_statement: integral_array â¢

    $default  reduce using rule 84 (array_statement)


State 130

   85 array_statement: other_array â¢

    $default  reduce using rule 85 (array_statement)


State 131

   68 statements: while_statement â¢ DEL_SMCOLON

    DEL_SMCOLON  shift, and go to state 165


State 132

   72 statements: return_statement â¢ DEL_SMCOLON

    DEL_SMCOLON  shift, and go to state 166


State 133

   73 statements: function_statement â¢ DEL_SMCOLON

    DEL_SMCOLON  shift, and go to state 167


State 134

    4 main: KW_DEF KW_MAIN DEL_LPAR DEL_RPAR DEL_COLON body â¢ KW_ENDDEF DEL_SMCOLON
   11 identifiers: â¢ TK_IDENTIFIER
   12            | â¢ identifiers DEL_COMMA TK_IDENTIFIER
   19 variable_declarations: â¢ identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK basic_types DEL_SMCOLON
   21 constant_declarations: â¢ KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   59 assign_expressions: â¢ identifier_expressions AP_ASSIGN expressions
   60                   | â¢ identifier_expressions AP_PLUSASSIGN expressions
   61                   | â¢ identifier_expressions AP_MINASSIGN expressions
   62                   | â¢ identifier_expressions AP_MULASSIGN expressions
   63                   | â¢ identifier_expressions AP_DIVASSIGN expressions
   64                   | â¢ identifier_expressions AP_MODASSIGN expressions
   65 statements: â¢ if_statement DEL_SMCOLON
   66           | â¢ for_statement DEL_SMCOLON
   67           | â¢ array_statement DEL_SMCOLON
   68           | â¢ while_statement DEL_SMCOLON
   69           | â¢ KW_BREAK DEL_SMCOLON
   70           | â¢ KW_CONTINUE DEL_SMCOLON
   71           | â¢ assign_expressions DEL_SMCOLON
   72           | â¢ return_statement DEL_SMCOLON
   73           | â¢ function_statement DEL_SMCOLON
   80 if_statement: â¢ KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   81             | â¢ KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE command_statements KW_ENDIF
   82 for_statement: â¢ KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   83              | â¢ KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements DEL_SMCOLON KW_ENDFOR
   84 array_statement: â¢ integral_array
   85                | â¢ other_array
   86 integral_array: â¢ identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
   87 other_array: â¢ identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON types KW_IN identifiers KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types
   88 while_statement: â¢ KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE
   89 return_statement: â¢ KW_RETURN
   90                 | â¢ KW_RETURN expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR
   98 body: body â¢ statements
   99     | body â¢ variable_declarations
  100     | body â¢ constant_declarations

    TK_IDENTIFIER  shift, and go to state 113
    KW_CONST       shift, and go to state 2
    KW_IF          shift, and go to state 114
    KW_FOR         shift, and go to state 115
    KW_WHILE       shift, and go to state 116
    KW_BREAK       shift, and go to state 117
    KW_CONTINUE    shift, and go to state 118
    KW_ENDDEF      shift, and go to state 168
    KW_RETURN      shift, and go to state 119

    identifiers             go to state 120
    variable_declarations   go to state 169
    constant_declarations   go to state 170
    identifier_expressions  go to state 123
    assign_expressions      go to state 124
    statements              go to state 171
    if_statement            go to state 126
    for_statement           go to state 127
    array_statement         go to state 128
    integral_array          go to state 129
    other_array             go to state 130
    while_statement         go to state 131
    return_statement        go to state 132
    function_statement      go to state 133


State 135

    5 types: â¢ DEL_LBLOCK DEL_RBLOCK basic_types
    6      | â¢ basic_types
    7 basic_types: â¢ KW_INT
    8            | â¢ KW_BOOLEAN
    9            | â¢ KW_SCALAR
   10            | â¢ KW_STR
   28 comp_variable_declarations: AP_HASHASSIGN identifiers DEL_COLON â¢ types DEL_SMCOLON

    KW_INT      shift, and go to state 32
    KW_SCALAR   shift, and go to state 33
    KW_STR      shift, and go to state 34
    KW_BOOLEAN  shift, and go to state 35
    DEL_LBLOCK  shift, and go to state 107

    types        go to state 172
    basic_types  go to state 109


State 136

   22 function_declarations: KW_DEF TK_IDENTIFIER â¢ DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN types

    DEL_LPAR  shift, and go to state 173


State 137

   27 complex_type_declarations: KW_COMP identifiers DEL_COLON comp_variable_declarations function_declarations KW_ENDCOMP â¢

    $default  reduce using rule 27 (complex_type_declarations)


State 138

   91 function_statement: TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR â¢

    $default  reduce using rule 91 (function_statement)


State 139

   29 expressions: â¢ identifier_expressions
   30            | â¢ TK_STRING
   31            | â¢ KW_TRUE
   32            | â¢ KW_FALSE
   33            | â¢ function_statement
   34            | â¢ arithmetic_expressions
   35            | â¢ relational_expressions
   36            | â¢ KW_NOT expressions
   37            | â¢ expressions KW_AND expressions
   38            | â¢ expressions KW_OR expressions
   39            | â¢ DEL_LPAR expressions DEL_RPAR
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   43 arithmetic_expressions: â¢ TK_INTEGER
   44                       | â¢ TK_FLOAT
   45                       | â¢ expressions OP_POWER expressions
   46                       | â¢ expressions OP_MULT expressions
   47                       | â¢ expressions OP_DIV expressions
   48                       | â¢ expressions OP_MOD expressions
   49                       | â¢ expressions OP_PLUS expressions
   50                       | â¢ expressions OP_MINUS expressions
   51                       | â¢ OP_PLUS expressions
   52                       | â¢ OP_MINUS expressions
   53 relational_expressions: â¢ expressions RP_LESS expressions
   54                       | â¢ expressions RP_LESSEQUALS expressions
   55                       | â¢ expressions RP_MORE expressions
   56                       | â¢ expressions RP_MOREEQUALS expressions
   57                       | â¢ expressions RP_EQUALS expressions
   58                       | â¢ expressions RP_NOTEQUALS expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR
   94 function_arg: function_arg DEL_COMMA â¢ expressions

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    DEL_LPAR       shift, and go to state 47

    expressions             go to state 174
    identifier_expressions  go to state 49
    arithmetic_expressions  go to state 50
    relational_expressions  go to state 51
    function_statement      go to state 52


State 140

   42 identifier_expressions: TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK â¢

    $default  reduce using rule 42 (identifier_expressions)


State 141

   41 identifier_expressions: TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK â¢

    $default  reduce using rule 41 (identifier_expressions)


State 142

    5 types: DEL_LBLOCK DEL_RBLOCK â¢ basic_types
    7 basic_types: â¢ KW_INT
    8            | â¢ KW_BOOLEAN
    9            | â¢ KW_SCALAR
   10            | â¢ KW_STR

    KW_INT      shift, and go to state 32
    KW_SCALAR   shift, and go to state 33
    KW_STR      shift, and go to state 34
    KW_BOOLEAN  shift, and go to state 35

    basic_types  go to state 175


State 143

   21 constant_declarations: KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON â¢

    $default  reduce using rule 21 (constant_declarations)


State 144

   25 parameter_declarations: â¢ TK_IDENTIFIER DEL_COLON types
   26                       | â¢ TK_IDENTIFIER DEL_COLON types DEL_COMMA parameter_declarations
   26                       | TK_IDENTIFIER DEL_COLON types DEL_COMMA â¢ parameter_declarations

    TK_IDENTIFIER  shift, and go to state 53

    parameter_declarations  go to state 176


State 145

   24 functions: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN types â¢ DEL_COLON body KW_ENDDEF DEL_SMCOLON

    DEL_COLON  shift, and go to state 177


State 146

   11 identifiers: â¢ TK_IDENTIFIER
   12            | â¢ identifiers DEL_COMMA TK_IDENTIFIER
   19 variable_declarations: â¢ identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK basic_types DEL_SMCOLON
   21 constant_declarations: â¢ KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON
   23 functions: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR DEL_COLON body â¢ KW_ENDDEF DEL_SMCOLON
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   59 assign_expressions: â¢ identifier_expressions AP_ASSIGN expressions
   60                   | â¢ identifier_expressions AP_PLUSASSIGN expressions
   61                   | â¢ identifier_expressions AP_MINASSIGN expressions
   62                   | â¢ identifier_expressions AP_MULASSIGN expressions
   63                   | â¢ identifier_expressions AP_DIVASSIGN expressions
   64                   | â¢ identifier_expressions AP_MODASSIGN expressions
   65 statements: â¢ if_statement DEL_SMCOLON
   66           | â¢ for_statement DEL_SMCOLON
   67           | â¢ array_statement DEL_SMCOLON
   68           | â¢ while_statement DEL_SMCOLON
   69           | â¢ KW_BREAK DEL_SMCOLON
   70           | â¢ KW_CONTINUE DEL_SMCOLON
   71           | â¢ assign_expressions DEL_SMCOLON
   72           | â¢ return_statement DEL_SMCOLON
   73           | â¢ function_statement DEL_SMCOLON
   80 if_statement: â¢ KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   81             | â¢ KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE command_statements KW_ENDIF
   82 for_statement: â¢ KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   83              | â¢ KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements DEL_SMCOLON KW_ENDFOR
   84 array_statement: â¢ integral_array
   85                | â¢ other_array
   86 integral_array: â¢ identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
   87 other_array: â¢ identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON types KW_IN identifiers KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types
   88 while_statement: â¢ KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE
   89 return_statement: â¢ KW_RETURN
   90                 | â¢ KW_RETURN expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR
   98 body: body â¢ statements
   99     | body â¢ variable_declarations
  100     | body â¢ constant_declarations

    TK_IDENTIFIER  shift, and go to state 113
    KW_CONST       shift, and go to state 2
    KW_IF          shift, and go to state 114
    KW_FOR         shift, and go to state 115
    KW_WHILE       shift, and go to state 116
    KW_BREAK       shift, and go to state 117
    KW_CONTINUE    shift, and go to state 118
    KW_ENDDEF      shift, and go to state 178
    KW_RETURN      shift, and go to state 119

    identifiers             go to state 120
    variable_declarations   go to state 169
    constant_declarations   go to state 170
    identifier_expressions  go to state 123
    assign_expressions      go to state 124
    statements              go to state 171
    if_statement            go to state 126
    for_statement           go to state 127
    array_statement         go to state 128
    integral_array          go to state 129
    other_array             go to state 130
    while_statement         go to state 131
    return_statement        go to state 132
    function_statement      go to state 133


State 147

   20 variable_declarations: TK_IDENTIFIER DEL_LBLOCK â¢ TK_INTEGER DEL_RBLOCK basic_types DEL_SMCOLON
   41 identifier_expressions: TK_IDENTIFIER DEL_LBLOCK â¢ TK_INTEGER DEL_RBLOCK
   42                       | TK_IDENTIFIER DEL_LBLOCK â¢ TK_IDENTIFIER DEL_RBLOCK

    TK_IDENTIFIER  shift, and go to state 90
    TK_INTEGER     shift, and go to state 179


State 148

   29 expressions: â¢ identifier_expressions
   30            | â¢ TK_STRING
   31            | â¢ KW_TRUE
   32            | â¢ KW_FALSE
   33            | â¢ function_statement
   34            | â¢ arithmetic_expressions
   35            | â¢ relational_expressions
   36            | â¢ KW_NOT expressions
   37            | â¢ expressions KW_AND expressions
   38            | â¢ expressions KW_OR expressions
   39            | â¢ DEL_LPAR expressions DEL_RPAR
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   43 arithmetic_expressions: â¢ TK_INTEGER
   44                       | â¢ TK_FLOAT
   45                       | â¢ expressions OP_POWER expressions
   46                       | â¢ expressions OP_MULT expressions
   47                       | â¢ expressions OP_DIV expressions
   48                       | â¢ expressions OP_MOD expressions
   49                       | â¢ expressions OP_PLUS expressions
   50                       | â¢ expressions OP_MINUS expressions
   51                       | â¢ OP_PLUS expressions
   52                       | â¢ OP_MINUS expressions
   53 relational_expressions: â¢ expressions RP_LESS expressions
   54                       | â¢ expressions RP_LESSEQUALS expressions
   55                       | â¢ expressions RP_MORE expressions
   56                       | â¢ expressions RP_MOREEQUALS expressions
   57                       | â¢ expressions RP_EQUALS expressions
   58                       | â¢ expressions RP_NOTEQUALS expressions
   80 if_statement: KW_IF DEL_LPAR â¢ expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   81             | KW_IF DEL_LPAR â¢ expressions DEL_RPAR DEL_COLON command_statements KW_ELSE command_statements KW_ENDIF
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    DEL_LPAR       shift, and go to state 47

    expressions             go to state 180
    identifier_expressions  go to state 49
    arithmetic_expressions  go to state 50
    relational_expressions  go to state 51
    function_statement      go to state 52


State 149

   12 identifiers: identifiers â¢ DEL_COMMA TK_IDENTIFIER
   82 for_statement: KW_FOR identifiers â¢ KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   83              | KW_FOR identifiers â¢ KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements DEL_SMCOLON KW_ENDFOR

    KW_IN      shift, and go to state 181
    DEL_COMMA  shift, and go to state 22


State 150

   29 expressions: â¢ identifier_expressions
   30            | â¢ TK_STRING
   31            | â¢ KW_TRUE
   32            | â¢ KW_FALSE
   33            | â¢ function_statement
   34            | â¢ arithmetic_expressions
   35            | â¢ relational_expressions
   36            | â¢ KW_NOT expressions
   37            | â¢ expressions KW_AND expressions
   38            | â¢ expressions KW_OR expressions
   39            | â¢ DEL_LPAR expressions DEL_RPAR
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   43 arithmetic_expressions: â¢ TK_INTEGER
   44                       | â¢ TK_FLOAT
   45                       | â¢ expressions OP_POWER expressions
   46                       | â¢ expressions OP_MULT expressions
   47                       | â¢ expressions OP_DIV expressions
   48                       | â¢ expressions OP_MOD expressions
   49                       | â¢ expressions OP_PLUS expressions
   50                       | â¢ expressions OP_MINUS expressions
   51                       | â¢ OP_PLUS expressions
   52                       | â¢ OP_MINUS expressions
   53 relational_expressions: â¢ expressions RP_LESS expressions
   54                       | â¢ expressions RP_LESSEQUALS expressions
   55                       | â¢ expressions RP_MORE expressions
   56                       | â¢ expressions RP_MOREEQUALS expressions
   57                       | â¢ expressions RP_EQUALS expressions
   58                       | â¢ expressions RP_NOTEQUALS expressions
   88 while_statement: KW_WHILE DEL_LPAR â¢ expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    DEL_LPAR       shift, and go to state 47

    expressions             go to state 182
    identifier_expressions  go to state 49
    arithmetic_expressions  go to state 50
    relational_expressions  go to state 51
    function_statement      go to state 52


State 151

   69 statements: KW_BREAK DEL_SMCOLON â¢

    $default  reduce using rule 69 (statements)


State 152

   70 statements: KW_CONTINUE DEL_SMCOLON â¢

    $default  reduce using rule 70 (statements)


State 153

   37 expressions: expressions â¢ KW_AND expressions
   38            | expressions â¢ KW_OR expressions
   45 arithmetic_expressions: expressions â¢ OP_POWER expressions
   46                       | expressions â¢ OP_MULT expressions
   47                       | expressions â¢ OP_DIV expressions
   48                       | expressions â¢ OP_MOD expressions
   49                       | expressions â¢ OP_PLUS expressions
   50                       | expressions â¢ OP_MINUS expressions
   53 relational_expressions: expressions â¢ RP_LESS expressions
   54                       | expressions â¢ RP_LESSEQUALS expressions
   55                       | expressions â¢ RP_MORE expressions
   56                       | expressions â¢ RP_MOREEQUALS expressions
   57                       | expressions â¢ RP_EQUALS expressions
   58                       | expressions â¢ RP_NOTEQUALS expressions
   90 return_statement: KW_RETURN expressions â¢  [DEL_SMCOLON]

    KW_AND         shift, and go to state 66
    KW_OR          shift, and go to state 67
    OP_PLUS        shift, and go to state 68
    OP_MINUS       shift, and go to state 69
    OP_MULT        shift, and go to state 70
    OP_DIV         shift, and go to state 71
    OP_MOD         shift, and go to state 72
    OP_POWER       shift, and go to state 73
    RP_EQUALS      shift, and go to state 74
    RP_NOTEQUALS   shift, and go to state 75
    RP_LESS        shift, and go to state 76
    RP_LESSEQUALS  shift, and go to state 77
    RP_MORE        shift, and go to state 78
    RP_MOREEQUALS  shift, and go to state 79

    $default  reduce using rule 90 (return_statement)


State 154

   86 integral_array: identifiers AP_COLONASSIGN â¢ DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
   87 other_array: identifiers AP_COLONASSIGN â¢ DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON types KW_IN identifiers KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types

    DEL_LBLOCK  shift, and go to state 183


State 155

   29 expressions: â¢ identifier_expressions
   30            | â¢ TK_STRING
   31            | â¢ KW_TRUE
   32            | â¢ KW_FALSE
   33            | â¢ function_statement
   34            | â¢ arithmetic_expressions
   35            | â¢ relational_expressions
   36            | â¢ KW_NOT expressions
   37            | â¢ expressions KW_AND expressions
   38            | â¢ expressions KW_OR expressions
   39            | â¢ DEL_LPAR expressions DEL_RPAR
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   43 arithmetic_expressions: â¢ TK_INTEGER
   44                       | â¢ TK_FLOAT
   45                       | â¢ expressions OP_POWER expressions
   46                       | â¢ expressions OP_MULT expressions
   47                       | â¢ expressions OP_DIV expressions
   48                       | â¢ expressions OP_MOD expressions
   49                       | â¢ expressions OP_PLUS expressions
   50                       | â¢ expressions OP_MINUS expressions
   51                       | â¢ OP_PLUS expressions
   52                       | â¢ OP_MINUS expressions
   53 relational_expressions: â¢ expressions RP_LESS expressions
   54                       | â¢ expressions RP_LESSEQUALS expressions
   55                       | â¢ expressions RP_MORE expressions
   56                       | â¢ expressions RP_MOREEQUALS expressions
   57                       | â¢ expressions RP_EQUALS expressions
   58                       | â¢ expressions RP_NOTEQUALS expressions
   59 assign_expressions: identifier_expressions AP_ASSIGN â¢ expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    DEL_LPAR       shift, and go to state 47

    expressions             go to state 184
    identifier_expressions  go to state 49
    arithmetic_expressions  go to state 50
    relational_expressions  go to state 51
    function_statement      go to state 52


State 156

   29 expressions: â¢ identifier_expressions
   30            | â¢ TK_STRING
   31            | â¢ KW_TRUE
   32            | â¢ KW_FALSE
   33            | â¢ function_statement
   34            | â¢ arithmetic_expressions
   35            | â¢ relational_expressions
   36            | â¢ KW_NOT expressions
   37            | â¢ expressions KW_AND expressions
   38            | â¢ expressions KW_OR expressions
   39            | â¢ DEL_LPAR expressions DEL_RPAR
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   43 arithmetic_expressions: â¢ TK_INTEGER
   44                       | â¢ TK_FLOAT
   45                       | â¢ expressions OP_POWER expressions
   46                       | â¢ expressions OP_MULT expressions
   47                       | â¢ expressions OP_DIV expressions
   48                       | â¢ expressions OP_MOD expressions
   49                       | â¢ expressions OP_PLUS expressions
   50                       | â¢ expressions OP_MINUS expressions
   51                       | â¢ OP_PLUS expressions
   52                       | â¢ OP_MINUS expressions
   53 relational_expressions: â¢ expressions RP_LESS expressions
   54                       | â¢ expressions RP_LESSEQUALS expressions
   55                       | â¢ expressions RP_MORE expressions
   56                       | â¢ expressions RP_MOREEQUALS expressions
   57                       | â¢ expressions RP_EQUALS expressions
   58                       | â¢ expressions RP_NOTEQUALS expressions
   60 assign_expressions: identifier_expressions AP_PLUSASSIGN â¢ expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    DEL_LPAR       shift, and go to state 47

    expressions             go to state 185
    identifier_expressions  go to state 49
    arithmetic_expressions  go to state 50
    relational_expressions  go to state 51
    function_statement      go to state 52


State 157

   29 expressions: â¢ identifier_expressions
   30            | â¢ TK_STRING
   31            | â¢ KW_TRUE
   32            | â¢ KW_FALSE
   33            | â¢ function_statement
   34            | â¢ arithmetic_expressions
   35            | â¢ relational_expressions
   36            | â¢ KW_NOT expressions
   37            | â¢ expressions KW_AND expressions
   38            | â¢ expressions KW_OR expressions
   39            | â¢ DEL_LPAR expressions DEL_RPAR
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   43 arithmetic_expressions: â¢ TK_INTEGER
   44                       | â¢ TK_FLOAT
   45                       | â¢ expressions OP_POWER expressions
   46                       | â¢ expressions OP_MULT expressions
   47                       | â¢ expressions OP_DIV expressions
   48                       | â¢ expressions OP_MOD expressions
   49                       | â¢ expressions OP_PLUS expressions
   50                       | â¢ expressions OP_MINUS expressions
   51                       | â¢ OP_PLUS expressions
   52                       | â¢ OP_MINUS expressions
   53 relational_expressions: â¢ expressions RP_LESS expressions
   54                       | â¢ expressions RP_LESSEQUALS expressions
   55                       | â¢ expressions RP_MORE expressions
   56                       | â¢ expressions RP_MOREEQUALS expressions
   57                       | â¢ expressions RP_EQUALS expressions
   58                       | â¢ expressions RP_NOTEQUALS expressions
   61 assign_expressions: identifier_expressions AP_MINASSIGN â¢ expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    DEL_LPAR       shift, and go to state 47

    expressions             go to state 186
    identifier_expressions  go to state 49
    arithmetic_expressions  go to state 50
    relational_expressions  go to state 51
    function_statement      go to state 52


State 158

   29 expressions: â¢ identifier_expressions
   30            | â¢ TK_STRING
   31            | â¢ KW_TRUE
   32            | â¢ KW_FALSE
   33            | â¢ function_statement
   34            | â¢ arithmetic_expressions
   35            | â¢ relational_expressions
   36            | â¢ KW_NOT expressions
   37            | â¢ expressions KW_AND expressions
   38            | â¢ expressions KW_OR expressions
   39            | â¢ DEL_LPAR expressions DEL_RPAR
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   43 arithmetic_expressions: â¢ TK_INTEGER
   44                       | â¢ TK_FLOAT
   45                       | â¢ expressions OP_POWER expressions
   46                       | â¢ expressions OP_MULT expressions
   47                       | â¢ expressions OP_DIV expressions
   48                       | â¢ expressions OP_MOD expressions
   49                       | â¢ expressions OP_PLUS expressions
   50                       | â¢ expressions OP_MINUS expressions
   51                       | â¢ OP_PLUS expressions
   52                       | â¢ OP_MINUS expressions
   53 relational_expressions: â¢ expressions RP_LESS expressions
   54                       | â¢ expressions RP_LESSEQUALS expressions
   55                       | â¢ expressions RP_MORE expressions
   56                       | â¢ expressions RP_MOREEQUALS expressions
   57                       | â¢ expressions RP_EQUALS expressions
   58                       | â¢ expressions RP_NOTEQUALS expressions
   62 assign_expressions: identifier_expressions AP_MULASSIGN â¢ expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    DEL_LPAR       shift, and go to state 47

    expressions             go to state 187
    identifier_expressions  go to state 49
    arithmetic_expressions  go to state 50
    relational_expressions  go to state 51
    function_statement      go to state 52


State 159

   29 expressions: â¢ identifier_expressions
   30            | â¢ TK_STRING
   31            | â¢ KW_TRUE
   32            | â¢ KW_FALSE
   33            | â¢ function_statement
   34            | â¢ arithmetic_expressions
   35            | â¢ relational_expressions
   36            | â¢ KW_NOT expressions
   37            | â¢ expressions KW_AND expressions
   38            | â¢ expressions KW_OR expressions
   39            | â¢ DEL_LPAR expressions DEL_RPAR
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   43 arithmetic_expressions: â¢ TK_INTEGER
   44                       | â¢ TK_FLOAT
   45                       | â¢ expressions OP_POWER expressions
   46                       | â¢ expressions OP_MULT expressions
   47                       | â¢ expressions OP_DIV expressions
   48                       | â¢ expressions OP_MOD expressions
   49                       | â¢ expressions OP_PLUS expressions
   50                       | â¢ expressions OP_MINUS expressions
   51                       | â¢ OP_PLUS expressions
   52                       | â¢ OP_MINUS expressions
   53 relational_expressions: â¢ expressions RP_LESS expressions
   54                       | â¢ expressions RP_LESSEQUALS expressions
   55                       | â¢ expressions RP_MORE expressions
   56                       | â¢ expressions RP_MOREEQUALS expressions
   57                       | â¢ expressions RP_EQUALS expressions
   58                       | â¢ expressions RP_NOTEQUALS expressions
   63 assign_expressions: identifier_expressions AP_DIVASSIGN â¢ expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    DEL_LPAR       shift, and go to state 47

    expressions             go to state 188
    identifier_expressions  go to state 49
    arithmetic_expressions  go to state 50
    relational_expressions  go to state 51
    function_statement      go to state 52


State 160

   29 expressions: â¢ identifier_expressions
   30            | â¢ TK_STRING
   31            | â¢ KW_TRUE
   32            | â¢ KW_FALSE
   33            | â¢ function_statement
   34            | â¢ arithmetic_expressions
   35            | â¢ relational_expressions
   36            | â¢ KW_NOT expressions
   37            | â¢ expressions KW_AND expressions
   38            | â¢ expressions KW_OR expressions
   39            | â¢ DEL_LPAR expressions DEL_RPAR
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   43 arithmetic_expressions: â¢ TK_INTEGER
   44                       | â¢ TK_FLOAT
   45                       | â¢ expressions OP_POWER expressions
   46                       | â¢ expressions OP_MULT expressions
   47                       | â¢ expressions OP_DIV expressions
   48                       | â¢ expressions OP_MOD expressions
   49                       | â¢ expressions OP_PLUS expressions
   50                       | â¢ expressions OP_MINUS expressions
   51                       | â¢ OP_PLUS expressions
   52                       | â¢ OP_MINUS expressions
   53 relational_expressions: â¢ expressions RP_LESS expressions
   54                       | â¢ expressions RP_LESSEQUALS expressions
   55                       | â¢ expressions RP_MORE expressions
   56                       | â¢ expressions RP_MOREEQUALS expressions
   57                       | â¢ expressions RP_EQUALS expressions
   58                       | â¢ expressions RP_NOTEQUALS expressions
   64 assign_expressions: identifier_expressions AP_MODASSIGN â¢ expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    DEL_LPAR       shift, and go to state 47

    expressions             go to state 189
    identifier_expressions  go to state 49
    arithmetic_expressions  go to state 50
    relational_expressions  go to state 51
    function_statement      go to state 52


State 161

   71 statements: assign_expressions DEL_SMCOLON â¢

    $default  reduce using rule 71 (statements)


State 162

   65 statements: if_statement DEL_SMCOLON â¢

    $default  reduce using rule 65 (statements)


State 163

   66 statements: for_statement DEL_SMCOLON â¢

    $default  reduce using rule 66 (statements)


State 164

   67 statements: array_statement DEL_SMCOLON â¢

    $default  reduce using rule 67 (statements)


State 165

   68 statements: while_statement DEL_SMCOLON â¢

    $default  reduce using rule 68 (statements)


State 166

   72 statements: return_statement DEL_SMCOLON â¢

    $default  reduce using rule 72 (statements)


State 167

   73 statements: function_statement DEL_SMCOLON â¢

    $default  reduce using rule 73 (statements)


State 168

    4 main: KW_DEF KW_MAIN DEL_LPAR DEL_RPAR DEL_COLON body KW_ENDDEF â¢ DEL_SMCOLON

    DEL_SMCOLON  shift, and go to state 190


State 169

   99 body: body variable_declarations â¢

    $default  reduce using rule 99 (body)


State 170

  100 body: body constant_declarations â¢

    $default  reduce using rule 100 (body)


State 171

   98 body: body statements â¢

    $default  reduce using rule 98 (body)


State 172

   28 comp_variable_declarations: AP_HASHASSIGN identifiers DEL_COLON types â¢ DEL_SMCOLON

    DEL_SMCOLON  shift, and go to state 191


State 173

   22 function_declarations: KW_DEF TK_IDENTIFIER DEL_LPAR â¢ parameter_declarations DEL_RPAR AP_ARROWASSIGN types
   25 parameter_declarations: â¢ TK_IDENTIFIER DEL_COLON types
   26                       | â¢ TK_IDENTIFIER DEL_COLON types DEL_COMMA parameter_declarations

    TK_IDENTIFIER  shift, and go to state 53

    parameter_declarations  go to state 192


State 174

   37 expressions: expressions â¢ KW_AND expressions
   38            | expressions â¢ KW_OR expressions
   45 arithmetic_expressions: expressions â¢ OP_POWER expressions
   46                       | expressions â¢ OP_MULT expressions
   47                       | expressions â¢ OP_DIV expressions
   48                       | expressions â¢ OP_MOD expressions
   49                       | expressions â¢ OP_PLUS expressions
   50                       | expressions â¢ OP_MINUS expressions
   53 relational_expressions: expressions â¢ RP_LESS expressions
   54                       | expressions â¢ RP_LESSEQUALS expressions
   55                       | expressions â¢ RP_MORE expressions
   56                       | expressions â¢ RP_MOREEQUALS expressions
   57                       | expressions â¢ RP_EQUALS expressions
   58                       | expressions â¢ RP_NOTEQUALS expressions
   94 function_arg: function_arg DEL_COMMA expressions â¢  [DEL_RPAR, DEL_COMMA]

    KW_AND         shift, and go to state 66
    KW_OR          shift, and go to state 67
    OP_PLUS        shift, and go to state 68
    OP_MINUS       shift, and go to state 69
    OP_MULT        shift, and go to state 70
    OP_DIV         shift, and go to state 71
    OP_MOD         shift, and go to state 72
    OP_POWER       shift, and go to state 73
    RP_EQUALS      shift, and go to state 74
    RP_NOTEQUALS   shift, and go to state 75
    RP_LESS        shift, and go to state 76
    RP_LESSEQUALS  shift, and go to state 77
    RP_MORE        shift, and go to state 78
    RP_MOREEQUALS  shift, and go to state 79

    $default  reduce using rule 94 (function_arg)


State 175

    5 types: DEL_LBLOCK DEL_RBLOCK basic_types â¢

    $default  reduce using rule 5 (types)


State 176

   26 parameter_declarations: TK_IDENTIFIER DEL_COLON types DEL_COMMA parameter_declarations â¢

    $default  reduce using rule 26 (parameter_declarations)


State 177

   11 identifiers: â¢ TK_IDENTIFIER
   12            | â¢ identifiers DEL_COMMA TK_IDENTIFIER
   19 variable_declarations: â¢ identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK basic_types DEL_SMCOLON
   21 constant_declarations: â¢ KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON
   24 functions: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN types DEL_COLON â¢ body KW_ENDDEF DEL_SMCOLON
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   59 assign_expressions: â¢ identifier_expressions AP_ASSIGN expressions
   60                   | â¢ identifier_expressions AP_PLUSASSIGN expressions
   61                   | â¢ identifier_expressions AP_MINASSIGN expressions
   62                   | â¢ identifier_expressions AP_MULASSIGN expressions
   63                   | â¢ identifier_expressions AP_DIVASSIGN expressions
   64                   | â¢ identifier_expressions AP_MODASSIGN expressions
   65 statements: â¢ if_statement DEL_SMCOLON
   66           | â¢ for_statement DEL_SMCOLON
   67           | â¢ array_statement DEL_SMCOLON
   68           | â¢ while_statement DEL_SMCOLON
   69           | â¢ KW_BREAK DEL_SMCOLON
   70           | â¢ KW_CONTINUE DEL_SMCOLON
   71           | â¢ assign_expressions DEL_SMCOLON
   72           | â¢ return_statement DEL_SMCOLON
   73           | â¢ function_statement DEL_SMCOLON
   80 if_statement: â¢ KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   81             | â¢ KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE command_statements KW_ENDIF
   82 for_statement: â¢ KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   83              | â¢ KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements DEL_SMCOLON KW_ENDFOR
   84 array_statement: â¢ integral_array
   85                | â¢ other_array
   86 integral_array: â¢ identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
   87 other_array: â¢ identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON types KW_IN identifiers KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types
   88 while_statement: â¢ KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE
   89 return_statement: â¢ KW_RETURN
   90                 | â¢ KW_RETURN expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR
   95 body: â¢ statements
   96     | â¢ variable_declarations
   97     | â¢ constant_declarations
   98     | â¢ body statements
   99     | â¢ body variable_declarations
  100     | â¢ body constant_declarations

    TK_IDENTIFIER  shift, and go to state 113
    KW_CONST       shift, and go to state 2
    KW_IF          shift, and go to state 114
    KW_FOR         shift, and go to state 115
    KW_WHILE       shift, and go to state 116
    KW_BREAK       shift, and go to state 117
    KW_CONTINUE    shift, and go to state 118
    KW_RETURN      shift, and go to state 119

    identifiers             go to state 120
    variable_declarations   go to state 121
    constant_declarations   go to state 122
    identifier_expressions  go to state 123
    assign_expressions      go to state 124
    statements              go to state 125
    if_statement            go to state 126
    for_statement           go to state 127
    array_statement         go to state 128
    integral_array          go to state 129
    other_array             go to state 130
    while_statement         go to state 131
    return_statement        go to state 132
    function_statement      go to state 133
    body                    go to state 193


State 178

   23 functions: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR DEL_COLON body KW_ENDDEF â¢ DEL_SMCOLON

    DEL_SMCOLON  shift, and go to state 194


State 179

   20 variable_declarations: TK_IDENTIFIER DEL_LBLOCK TK_INTEGER â¢ DEL_RBLOCK basic_types DEL_SMCOLON
   41 identifier_expressions: TK_IDENTIFIER DEL_LBLOCK TK_INTEGER â¢ DEL_RBLOCK

    DEL_RBLOCK  shift, and go to state 195


State 180

   37 expressions: expressions â¢ KW_AND expressions
   38            | expressions â¢ KW_OR expressions
   45 arithmetic_expressions: expressions â¢ OP_POWER expressions
   46                       | expressions â¢ OP_MULT expressions
   47                       | expressions â¢ OP_DIV expressions
   48                       | expressions â¢ OP_MOD expressions
   49                       | expressions â¢ OP_PLUS expressions
   50                       | expressions â¢ OP_MINUS expressions
   53 relational_expressions: expressions â¢ RP_LESS expressions
   54                       | expressions â¢ RP_LESSEQUALS expressions
   55                       | expressions â¢ RP_MORE expressions
   56                       | expressions â¢ RP_MOREEQUALS expressions
   57                       | expressions â¢ RP_EQUALS expressions
   58                       | expressions â¢ RP_NOTEQUALS expressions
   80 if_statement: KW_IF DEL_LPAR expressions â¢ DEL_RPAR DEL_COLON command_statements KW_ENDIF
   81             | KW_IF DEL_LPAR expressions â¢ DEL_RPAR DEL_COLON command_statements KW_ELSE command_statements KW_ENDIF

    KW_AND         shift, and go to state 66
    KW_OR          shift, and go to state 67
    OP_PLUS        shift, and go to state 68
    OP_MINUS       shift, and go to state 69
    OP_MULT        shift, and go to state 70
    OP_DIV         shift, and go to state 71
    OP_MOD         shift, and go to state 72
    OP_POWER       shift, and go to state 73
    RP_EQUALS      shift, and go to state 74
    RP_NOTEQUALS   shift, and go to state 75
    RP_LESS        shift, and go to state 76
    RP_LESSEQUALS  shift, and go to state 77
    RP_MORE        shift, and go to state 78
    RP_MOREEQUALS  shift, and go to state 79
    DEL_RPAR       shift, and go to state 196


State 181

   82 for_statement: KW_FOR identifiers KW_IN â¢ DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   83              | KW_FOR identifiers KW_IN â¢ DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements DEL_SMCOLON KW_ENDFOR

    DEL_LBLOCK  shift, and go to state 197


State 182

   37 expressions: expressions â¢ KW_AND expressions
   38            | expressions â¢ KW_OR expressions
   45 arithmetic_expressions: expressions â¢ OP_POWER expressions
   46                       | expressions â¢ OP_MULT expressions
   47                       | expressions â¢ OP_DIV expressions
   48                       | expressions â¢ OP_MOD expressions
   49                       | expressions â¢ OP_PLUS expressions
   50                       | expressions â¢ OP_MINUS expressions
   53 relational_expressions: expressions â¢ RP_LESS expressions
   54                       | expressions â¢ RP_LESSEQUALS expressions
   55                       | expressions â¢ RP_MORE expressions
   56                       | expressions â¢ RP_MOREEQUALS expressions
   57                       | expressions â¢ RP_EQUALS expressions
   58                       | expressions â¢ RP_NOTEQUALS expressions
   88 while_statement: KW_WHILE DEL_LPAR expressions â¢ DEL_RPAR DEL_COLON command_statements KW_ENDWHILE

    KW_AND         shift, and go to state 66
    KW_OR          shift, and go to state 67
    OP_PLUS        shift, and go to state 68
    OP_MINUS       shift, and go to state 69
    OP_MULT        shift, and go to state 70
    OP_DIV         shift, and go to state 71
    OP_MOD         shift, and go to state 72
    OP_POWER       shift, and go to state 73
    RP_EQUALS      shift, and go to state 74
    RP_NOTEQUALS   shift, and go to state 75
    RP_LESS        shift, and go to state 76
    RP_LESSEQUALS  shift, and go to state 77
    RP_MORE        shift, and go to state 78
    RP_MOREEQUALS  shift, and go to state 79
    DEL_RPAR       shift, and go to state 198


State 183

   29 expressions: â¢ identifier_expressions
   30            | â¢ TK_STRING
   31            | â¢ KW_TRUE
   32            | â¢ KW_FALSE
   33            | â¢ function_statement
   34            | â¢ arithmetic_expressions
   35            | â¢ relational_expressions
   36            | â¢ KW_NOT expressions
   37            | â¢ expressions KW_AND expressions
   38            | â¢ expressions KW_OR expressions
   39            | â¢ DEL_LPAR expressions DEL_RPAR
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   43 arithmetic_expressions: â¢ TK_INTEGER
   44                       | â¢ TK_FLOAT
   45                       | â¢ expressions OP_POWER expressions
   46                       | â¢ expressions OP_MULT expressions
   47                       | â¢ expressions OP_DIV expressions
   48                       | â¢ expressions OP_MOD expressions
   49                       | â¢ expressions OP_PLUS expressions
   50                       | â¢ expressions OP_MINUS expressions
   51                       | â¢ OP_PLUS expressions
   52                       | â¢ OP_MINUS expressions
   53 relational_expressions: â¢ expressions RP_LESS expressions
   54                       | â¢ expressions RP_LESSEQUALS expressions
   55                       | â¢ expressions RP_MORE expressions
   56                       | â¢ expressions RP_MOREEQUALS expressions
   57                       | â¢ expressions RP_EQUALS expressions
   58                       | â¢ expressions RP_NOTEQUALS expressions
   86 integral_array: identifiers AP_COLONASSIGN DEL_LBLOCK â¢ expressions KW_FOR identifiers DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
   87 other_array: identifiers AP_COLONASSIGN DEL_LBLOCK â¢ expressions KW_FOR identifiers DEL_COLON types KW_IN identifiers KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    DEL_LPAR       shift, and go to state 47

    expressions             go to state 199
    identifier_expressions  go to state 49
    arithmetic_expressions  go to state 50
    relational_expressions  go to state 51
    function_statement      go to state 52


State 184

   37 expressions: expressions â¢ KW_AND expressions
   38            | expressions â¢ KW_OR expressions
   45 arithmetic_expressions: expressions â¢ OP_POWER expressions
   46                       | expressions â¢ OP_MULT expressions
   47                       | expressions â¢ OP_DIV expressions
   48                       | expressions â¢ OP_MOD expressions
   49                       | expressions â¢ OP_PLUS expressions
   50                       | expressions â¢ OP_MINUS expressions
   53 relational_expressions: expressions â¢ RP_LESS expressions
   54                       | expressions â¢ RP_LESSEQUALS expressions
   55                       | expressions â¢ RP_MORE expressions
   56                       | expressions â¢ RP_MOREEQUALS expressions
   57                       | expressions â¢ RP_EQUALS expressions
   58                       | expressions â¢ RP_NOTEQUALS expressions
   59 assign_expressions: identifier_expressions AP_ASSIGN expressions â¢  [DEL_SMCOLON]

    KW_AND         shift, and go to state 66
    KW_OR          shift, and go to state 67
    OP_PLUS        shift, and go to state 68
    OP_MINUS       shift, and go to state 69
    OP_MULT        shift, and go to state 70
    OP_DIV         shift, and go to state 71
    OP_MOD         shift, and go to state 72
    OP_POWER       shift, and go to state 73
    RP_EQUALS      shift, and go to state 74
    RP_NOTEQUALS   shift, and go to state 75
    RP_LESS        shift, and go to state 76
    RP_LESSEQUALS  shift, and go to state 77
    RP_MORE        shift, and go to state 78
    RP_MOREEQUALS  shift, and go to state 79

    $default  reduce using rule 59 (assign_expressions)


State 185

   37 expressions: expressions â¢ KW_AND expressions
   38            | expressions â¢ KW_OR expressions
   45 arithmetic_expressions: expressions â¢ OP_POWER expressions
   46                       | expressions â¢ OP_MULT expressions
   47                       | expressions â¢ OP_DIV expressions
   48                       | expressions â¢ OP_MOD expressions
   49                       | expressions â¢ OP_PLUS expressions
   50                       | expressions â¢ OP_MINUS expressions
   53 relational_expressions: expressions â¢ RP_LESS expressions
   54                       | expressions â¢ RP_LESSEQUALS expressions
   55                       | expressions â¢ RP_MORE expressions
   56                       | expressions â¢ RP_MOREEQUALS expressions
   57                       | expressions â¢ RP_EQUALS expressions
   58                       | expressions â¢ RP_NOTEQUALS expressions
   60 assign_expressions: identifier_expressions AP_PLUSASSIGN expressions â¢  [DEL_SMCOLON]

    KW_AND         shift, and go to state 66
    KW_OR          shift, and go to state 67
    OP_PLUS        shift, and go to state 68
    OP_MINUS       shift, and go to state 69
    OP_MULT        shift, and go to state 70
    OP_DIV         shift, and go to state 71
    OP_MOD         shift, and go to state 72
    OP_POWER       shift, and go to state 73
    RP_EQUALS      shift, and go to state 74
    RP_NOTEQUALS   shift, and go to state 75
    RP_LESS        shift, and go to state 76
    RP_LESSEQUALS  shift, and go to state 77
    RP_MORE        shift, and go to state 78
    RP_MOREEQUALS  shift, and go to state 79

    $default  reduce using rule 60 (assign_expressions)


State 186

   37 expressions: expressions â¢ KW_AND expressions
   38            | expressions â¢ KW_OR expressions
   45 arithmetic_expressions: expressions â¢ OP_POWER expressions
   46                       | expressions â¢ OP_MULT expressions
   47                       | expressions â¢ OP_DIV expressions
   48                       | expressions â¢ OP_MOD expressions
   49                       | expressions â¢ OP_PLUS expressions
   50                       | expressions â¢ OP_MINUS expressions
   53 relational_expressions: expressions â¢ RP_LESS expressions
   54                       | expressions â¢ RP_LESSEQUALS expressions
   55                       | expressions â¢ RP_MORE expressions
   56                       | expressions â¢ RP_MOREEQUALS expressions
   57                       | expressions â¢ RP_EQUALS expressions
   58                       | expressions â¢ RP_NOTEQUALS expressions
   61 assign_expressions: identifier_expressions AP_MINASSIGN expressions â¢  [DEL_SMCOLON]

    KW_AND         shift, and go to state 66
    KW_OR          shift, and go to state 67
    OP_PLUS        shift, and go to state 68
    OP_MINUS       shift, and go to state 69
    OP_MULT        shift, and go to state 70
    OP_DIV         shift, and go to state 71
    OP_MOD         shift, and go to state 72
    OP_POWER       shift, and go to state 73
    RP_EQUALS      shift, and go to state 74
    RP_NOTEQUALS   shift, and go to state 75
    RP_LESS        shift, and go to state 76
    RP_LESSEQUALS  shift, and go to state 77
    RP_MORE        shift, and go to state 78
    RP_MOREEQUALS  shift, and go to state 79

    $default  reduce using rule 61 (assign_expressions)


State 187

   37 expressions: expressions â¢ KW_AND expressions
   38            | expressions â¢ KW_OR expressions
   45 arithmetic_expressions: expressions â¢ OP_POWER expressions
   46                       | expressions â¢ OP_MULT expressions
   47                       | expressions â¢ OP_DIV expressions
   48                       | expressions â¢ OP_MOD expressions
   49                       | expressions â¢ OP_PLUS expressions
   50                       | expressions â¢ OP_MINUS expressions
   53 relational_expressions: expressions â¢ RP_LESS expressions
   54                       | expressions â¢ RP_LESSEQUALS expressions
   55                       | expressions â¢ RP_MORE expressions
   56                       | expressions â¢ RP_MOREEQUALS expressions
   57                       | expressions â¢ RP_EQUALS expressions
   58                       | expressions â¢ RP_NOTEQUALS expressions
   62 assign_expressions: identifier_expressions AP_MULASSIGN expressions â¢  [DEL_SMCOLON]

    KW_AND         shift, and go to state 66
    KW_OR          shift, and go to state 67
    OP_PLUS        shift, and go to state 68
    OP_MINUS       shift, and go to state 69
    OP_MULT        shift, and go to state 70
    OP_DIV         shift, and go to state 71
    OP_MOD         shift, and go to state 72
    OP_POWER       shift, and go to state 73
    RP_EQUALS      shift, and go to state 74
    RP_NOTEQUALS   shift, and go to state 75
    RP_LESS        shift, and go to state 76
    RP_LESSEQUALS  shift, and go to state 77
    RP_MORE        shift, and go to state 78
    RP_MOREEQUALS  shift, and go to state 79

    $default  reduce using rule 62 (assign_expressions)


State 188

   37 expressions: expressions â¢ KW_AND expressions
   38            | expressions â¢ KW_OR expressions
   45 arithmetic_expressions: expressions â¢ OP_POWER expressions
   46                       | expressions â¢ OP_MULT expressions
   47                       | expressions â¢ OP_DIV expressions
   48                       | expressions â¢ OP_MOD expressions
   49                       | expressions â¢ OP_PLUS expressions
   50                       | expressions â¢ OP_MINUS expressions
   53 relational_expressions: expressions â¢ RP_LESS expressions
   54                       | expressions â¢ RP_LESSEQUALS expressions
   55                       | expressions â¢ RP_MORE expressions
   56                       | expressions â¢ RP_MOREEQUALS expressions
   57                       | expressions â¢ RP_EQUALS expressions
   58                       | expressions â¢ RP_NOTEQUALS expressions
   63 assign_expressions: identifier_expressions AP_DIVASSIGN expressions â¢  [DEL_SMCOLON]

    KW_AND         shift, and go to state 66
    KW_OR          shift, and go to state 67
    OP_PLUS        shift, and go to state 68
    OP_MINUS       shift, and go to state 69
    OP_MULT        shift, and go to state 70
    OP_DIV         shift, and go to state 71
    OP_MOD         shift, and go to state 72
    OP_POWER       shift, and go to state 73
    RP_EQUALS      shift, and go to state 74
    RP_NOTEQUALS   shift, and go to state 75
    RP_LESS        shift, and go to state 76
    RP_LESSEQUALS  shift, and go to state 77
    RP_MORE        shift, and go to state 78
    RP_MOREEQUALS  shift, and go to state 79

    $default  reduce using rule 63 (assign_expressions)


State 189

   37 expressions: expressions â¢ KW_AND expressions
   38            | expressions â¢ KW_OR expressions
   45 arithmetic_expressions: expressions â¢ OP_POWER expressions
   46                       | expressions â¢ OP_MULT expressions
   47                       | expressions â¢ OP_DIV expressions
   48                       | expressions â¢ OP_MOD expressions
   49                       | expressions â¢ OP_PLUS expressions
   50                       | expressions â¢ OP_MINUS expressions
   53 relational_expressions: expressions â¢ RP_LESS expressions
   54                       | expressions â¢ RP_LESSEQUALS expressions
   55                       | expressions â¢ RP_MORE expressions
   56                       | expressions â¢ RP_MOREEQUALS expressions
   57                       | expressions â¢ RP_EQUALS expressions
   58                       | expressions â¢ RP_NOTEQUALS expressions
   64 assign_expressions: identifier_expressions AP_MODASSIGN expressions â¢  [DEL_SMCOLON]

    KW_AND         shift, and go to state 66
    KW_OR          shift, and go to state 67
    OP_PLUS        shift, and go to state 68
    OP_MINUS       shift, and go to state 69
    OP_MULT        shift, and go to state 70
    OP_DIV         shift, and go to state 71
    OP_MOD         shift, and go to state 72
    OP_POWER       shift, and go to state 73
    RP_EQUALS      shift, and go to state 74
    RP_NOTEQUALS   shift, and go to state 75
    RP_LESS        shift, and go to state 76
    RP_LESSEQUALS  shift, and go to state 77
    RP_MORE        shift, and go to state 78
    RP_MOREEQUALS  shift, and go to state 79

    $default  reduce using rule 64 (assign_expressions)


State 190

    4 main: KW_DEF KW_MAIN DEL_LPAR DEL_RPAR DEL_COLON body KW_ENDDEF DEL_SMCOLON â¢

    $default  reduce using rule 4 (main)


State 191

   28 comp_variable_declarations: AP_HASHASSIGN identifiers DEL_COLON types DEL_SMCOLON â¢

    $default  reduce using rule 28 (comp_variable_declarations)


State 192

   22 function_declarations: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations â¢ DEL_RPAR AP_ARROWASSIGN types

    DEL_RPAR  shift, and go to state 200


State 193

   11 identifiers: â¢ TK_IDENTIFIER
   12            | â¢ identifiers DEL_COMMA TK_IDENTIFIER
   19 variable_declarations: â¢ identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK basic_types DEL_SMCOLON
   21 constant_declarations: â¢ KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON
   24 functions: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN types DEL_COLON body â¢ KW_ENDDEF DEL_SMCOLON
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   59 assign_expressions: â¢ identifier_expressions AP_ASSIGN expressions
   60                   | â¢ identifier_expressions AP_PLUSASSIGN expressions
   61                   | â¢ identifier_expressions AP_MINASSIGN expressions
   62                   | â¢ identifier_expressions AP_MULASSIGN expressions
   63                   | â¢ identifier_expressions AP_DIVASSIGN expressions
   64                   | â¢ identifier_expressions AP_MODASSIGN expressions
   65 statements: â¢ if_statement DEL_SMCOLON
   66           | â¢ for_statement DEL_SMCOLON
   67           | â¢ array_statement DEL_SMCOLON
   68           | â¢ while_statement DEL_SMCOLON
   69           | â¢ KW_BREAK DEL_SMCOLON
   70           | â¢ KW_CONTINUE DEL_SMCOLON
   71           | â¢ assign_expressions DEL_SMCOLON
   72           | â¢ return_statement DEL_SMCOLON
   73           | â¢ function_statement DEL_SMCOLON
   80 if_statement: â¢ KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   81             | â¢ KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE command_statements KW_ENDIF
   82 for_statement: â¢ KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   83              | â¢ KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements DEL_SMCOLON KW_ENDFOR
   84 array_statement: â¢ integral_array
   85                | â¢ other_array
   86 integral_array: â¢ identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
   87 other_array: â¢ identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON types KW_IN identifiers KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types
   88 while_statement: â¢ KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE
   89 return_statement: â¢ KW_RETURN
   90                 | â¢ KW_RETURN expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR
   98 body: body â¢ statements
   99     | body â¢ variable_declarations
  100     | body â¢ constant_declarations

    TK_IDENTIFIER  shift, and go to state 113
    KW_CONST       shift, and go to state 2
    KW_IF          shift, and go to state 114
    KW_FOR         shift, and go to state 115
    KW_WHILE       shift, and go to state 116
    KW_BREAK       shift, and go to state 117
    KW_CONTINUE    shift, and go to state 118
    KW_ENDDEF      shift, and go to state 201
    KW_RETURN      shift, and go to state 119

    identifiers             go to state 120
    variable_declarations   go to state 169
    constant_declarations   go to state 170
    identifier_expressions  go to state 123
    assign_expressions      go to state 124
    statements              go to state 171
    if_statement            go to state 126
    for_statement           go to state 127
    array_statement         go to state 128
    integral_array          go to state 129
    other_array             go to state 130
    while_statement         go to state 131
    return_statement        go to state 132
    function_statement      go to state 133


State 194

   23 functions: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR DEL_COLON body KW_ENDDEF DEL_SMCOLON â¢

    $default  reduce using rule 23 (functions)


State 195

    7 basic_types: â¢ KW_INT
    8            | â¢ KW_BOOLEAN
    9            | â¢ KW_SCALAR
   10            | â¢ KW_STR
   20 variable_declarations: TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK â¢ basic_types DEL_SMCOLON
   41 identifier_expressions: TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK â¢  [AP_ASSIGN, AP_PLUSASSIGN, AP_MINASSIGN, AP_MULASSIGN, AP_DIVASSIGN, AP_MODASSIGN]

    KW_INT      shift, and go to state 32
    KW_SCALAR   shift, and go to state 33
    KW_STR      shift, and go to state 34
    KW_BOOLEAN  shift, and go to state 35

    $default  reduce using rule 41 (identifier_expressions)

    basic_types  go to state 59


State 196

   80 if_statement: KW_IF DEL_LPAR expressions DEL_RPAR â¢ DEL_COLON command_statements KW_ENDIF
   81             | KW_IF DEL_LPAR expressions DEL_RPAR â¢ DEL_COLON command_statements KW_ELSE command_statements KW_ENDIF

    DEL_COLON  shift, and go to state 202


State 197

   29 expressions: â¢ identifier_expressions
   30            | â¢ TK_STRING
   31            | â¢ KW_TRUE
   32            | â¢ KW_FALSE
   33            | â¢ function_statement
   34            | â¢ arithmetic_expressions
   35            | â¢ relational_expressions
   36            | â¢ KW_NOT expressions
   37            | â¢ expressions KW_AND expressions
   38            | â¢ expressions KW_OR expressions
   39            | â¢ DEL_LPAR expressions DEL_RPAR
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   43 arithmetic_expressions: â¢ TK_INTEGER
   44                       | â¢ TK_FLOAT
   45                       | â¢ expressions OP_POWER expressions
   46                       | â¢ expressions OP_MULT expressions
   47                       | â¢ expressions OP_DIV expressions
   48                       | â¢ expressions OP_MOD expressions
   49                       | â¢ expressions OP_PLUS expressions
   50                       | â¢ expressions OP_MINUS expressions
   51                       | â¢ OP_PLUS expressions
   52                       | â¢ OP_MINUS expressions
   53 relational_expressions: â¢ expressions RP_LESS expressions
   54                       | â¢ expressions RP_LESSEQUALS expressions
   55                       | â¢ expressions RP_MORE expressions
   56                       | â¢ expressions RP_MOREEQUALS expressions
   57                       | â¢ expressions RP_EQUALS expressions
   58                       | â¢ expressions RP_NOTEQUALS expressions
   82 for_statement: KW_FOR identifiers KW_IN DEL_LBLOCK â¢ expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   83              | KW_FOR identifiers KW_IN DEL_LBLOCK â¢ expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements DEL_SMCOLON KW_ENDFOR
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    DEL_LPAR       shift, and go to state 47

    expressions             go to state 203
    identifier_expressions  go to state 49
    arithmetic_expressions  go to state 50
    relational_expressions  go to state 51
    function_statement      go to state 52


State 198

   88 while_statement: KW_WHILE DEL_LPAR expressions DEL_RPAR â¢ DEL_COLON command_statements KW_ENDWHILE

    DEL_COLON  shift, and go to state 204


State 199

   37 expressions: expressions â¢ KW_AND expressions
   38            | expressions â¢ KW_OR expressions
   45 arithmetic_expressions: expressions â¢ OP_POWER expressions
   46                       | expressions â¢ OP_MULT expressions
   47                       | expressions â¢ OP_DIV expressions
   48                       | expressions â¢ OP_MOD expressions
   49                       | expressions â¢ OP_PLUS expressions
   50                       | expressions â¢ OP_MINUS expressions
   53 relational_expressions: expressions â¢ RP_LESS expressions
   54                       | expressions â¢ RP_LESSEQUALS expressions
   55                       | expressions â¢ RP_MORE expressions
   56                       | expressions â¢ RP_MOREEQUALS expressions
   57                       | expressions â¢ RP_EQUALS expressions
   58                       | expressions â¢ RP_NOTEQUALS expressions
   86 integral_array: identifiers AP_COLONASSIGN DEL_LBLOCK expressions â¢ KW_FOR identifiers DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
   87 other_array: identifiers AP_COLONASSIGN DEL_LBLOCK expressions â¢ KW_FOR identifiers DEL_COLON types KW_IN identifiers KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types

    KW_FOR         shift, and go to state 205
    KW_AND         shift, and go to state 66
    KW_OR          shift, and go to state 67
    OP_PLUS        shift, and go to state 68
    OP_MINUS       shift, and go to state 69
    OP_MULT        shift, and go to state 70
    OP_DIV         shift, and go to state 71
    OP_MOD         shift, and go to state 72
    OP_POWER       shift, and go to state 73
    RP_EQUALS      shift, and go to state 74
    RP_NOTEQUALS   shift, and go to state 75
    RP_LESS        shift, and go to state 76
    RP_LESSEQUALS  shift, and go to state 77
    RP_MORE        shift, and go to state 78
    RP_MOREEQUALS  shift, and go to state 79


State 200

   22 function_declarations: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR â¢ AP_ARROWASSIGN types

    AP_ARROWASSIGN  shift, and go to state 206


State 201

   24 functions: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN types DEL_COLON body KW_ENDDEF â¢ DEL_SMCOLON

    DEL_SMCOLON  shift, and go to state 207


State 202

   11 identifiers: â¢ TK_IDENTIFIER
   12            | â¢ identifiers DEL_COMMA TK_IDENTIFIER
   19 variable_declarations: â¢ identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK basic_types DEL_SMCOLON
   21 constant_declarations: â¢ KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   59 assign_expressions: â¢ identifier_expressions AP_ASSIGN expressions
   60                   | â¢ identifier_expressions AP_PLUSASSIGN expressions
   61                   | â¢ identifier_expressions AP_MINASSIGN expressions
   62                   | â¢ identifier_expressions AP_MULASSIGN expressions
   63                   | â¢ identifier_expressions AP_DIVASSIGN expressions
   64                   | â¢ identifier_expressions AP_MODASSIGN expressions
   65 statements: â¢ if_statement DEL_SMCOLON
   66           | â¢ for_statement DEL_SMCOLON
   67           | â¢ array_statement DEL_SMCOLON
   68           | â¢ while_statement DEL_SMCOLON
   69           | â¢ KW_BREAK DEL_SMCOLON
   70           | â¢ KW_CONTINUE DEL_SMCOLON
   71           | â¢ assign_expressions DEL_SMCOLON
   72           | â¢ return_statement DEL_SMCOLON
   73           | â¢ function_statement DEL_SMCOLON
   74 command_statements: â¢ statements
   75                   | â¢ command_statements statements
   76                   | â¢ command_statements variable_declarations
   77                   | â¢ variable_declarations
   78                   | â¢ command_statements constant_declarations
   79                   | â¢ constant_declarations
   80 if_statement: â¢ KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   80             | KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON â¢ command_statements KW_ENDIF
   81             | â¢ KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE command_statements KW_ENDIF
   81             | KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON â¢ command_statements KW_ELSE command_statements KW_ENDIF
   82 for_statement: â¢ KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   83              | â¢ KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements DEL_SMCOLON KW_ENDFOR
   84 array_statement: â¢ integral_array
   85                | â¢ other_array
   86 integral_array: â¢ identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
   87 other_array: â¢ identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON types KW_IN identifiers KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types
   88 while_statement: â¢ KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE
   89 return_statement: â¢ KW_RETURN
   90                 | â¢ KW_RETURN expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 113
    KW_CONST       shift, and go to state 2
    KW_IF          shift, and go to state 114
    KW_FOR         shift, and go to state 115
    KW_WHILE       shift, and go to state 116
    KW_BREAK       shift, and go to state 117
    KW_CONTINUE    shift, and go to state 118
    KW_RETURN      shift, and go to state 119

    identifiers             go to state 120
    variable_declarations   go to state 208
    constant_declarations   go to state 209
    identifier_expressions  go to state 123
    assign_expressions      go to state 124
    statements              go to state 210
    command_statements      go to state 211
    if_statement            go to state 126
    for_statement           go to state 127
    array_statement         go to state 128
    integral_array          go to state 129
    other_array             go to state 130
    while_statement         go to state 131
    return_statement        go to state 132
    function_statement      go to state 133


State 203

   37 expressions: expressions â¢ KW_AND expressions
   38            | expressions â¢ KW_OR expressions
   45 arithmetic_expressions: expressions â¢ OP_POWER expressions
   46                       | expressions â¢ OP_MULT expressions
   47                       | expressions â¢ OP_DIV expressions
   48                       | expressions â¢ OP_MOD expressions
   49                       | expressions â¢ OP_PLUS expressions
   50                       | expressions â¢ OP_MINUS expressions
   53 relational_expressions: expressions â¢ RP_LESS expressions
   54                       | expressions â¢ RP_LESSEQUALS expressions
   55                       | expressions â¢ RP_MORE expressions
   56                       | expressions â¢ RP_MOREEQUALS expressions
   57                       | expressions â¢ RP_EQUALS expressions
   58                       | expressions â¢ RP_NOTEQUALS expressions
   82 for_statement: KW_FOR identifiers KW_IN DEL_LBLOCK expressions â¢ DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   83              | KW_FOR identifiers KW_IN DEL_LBLOCK expressions â¢ DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements DEL_SMCOLON KW_ENDFOR

    KW_AND         shift, and go to state 66
    KW_OR          shift, and go to state 67
    OP_PLUS        shift, and go to state 68
    OP_MINUS       shift, and go to state 69
    OP_MULT        shift, and go to state 70
    OP_DIV         shift, and go to state 71
    OP_MOD         shift, and go to state 72
    OP_POWER       shift, and go to state 73
    RP_EQUALS      shift, and go to state 74
    RP_NOTEQUALS   shift, and go to state 75
    RP_LESS        shift, and go to state 76
    RP_LESSEQUALS  shift, and go to state 77
    RP_MORE        shift, and go to state 78
    RP_MOREEQUALS  shift, and go to state 79
    DEL_COLON      shift, and go to state 212


State 204

   11 identifiers: â¢ TK_IDENTIFIER
   12            | â¢ identifiers DEL_COMMA TK_IDENTIFIER
   19 variable_declarations: â¢ identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK basic_types DEL_SMCOLON
   21 constant_declarations: â¢ KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   59 assign_expressions: â¢ identifier_expressions AP_ASSIGN expressions
   60                   | â¢ identifier_expressions AP_PLUSASSIGN expressions
   61                   | â¢ identifier_expressions AP_MINASSIGN expressions
   62                   | â¢ identifier_expressions AP_MULASSIGN expressions
   63                   | â¢ identifier_expressions AP_DIVASSIGN expressions
   64                   | â¢ identifier_expressions AP_MODASSIGN expressions
   65 statements: â¢ if_statement DEL_SMCOLON
   66           | â¢ for_statement DEL_SMCOLON
   67           | â¢ array_statement DEL_SMCOLON
   68           | â¢ while_statement DEL_SMCOLON
   69           | â¢ KW_BREAK DEL_SMCOLON
   70           | â¢ KW_CONTINUE DEL_SMCOLON
   71           | â¢ assign_expressions DEL_SMCOLON
   72           | â¢ return_statement DEL_SMCOLON
   73           | â¢ function_statement DEL_SMCOLON
   74 command_statements: â¢ statements
   75                   | â¢ command_statements statements
   76                   | â¢ command_statements variable_declarations
   77                   | â¢ variable_declarations
   78                   | â¢ command_statements constant_declarations
   79                   | â¢ constant_declarations
   80 if_statement: â¢ KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   81             | â¢ KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE command_statements KW_ENDIF
   82 for_statement: â¢ KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   83              | â¢ KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements DEL_SMCOLON KW_ENDFOR
   84 array_statement: â¢ integral_array
   85                | â¢ other_array
   86 integral_array: â¢ identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
   87 other_array: â¢ identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON types KW_IN identifiers KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types
   88 while_statement: â¢ KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE
   88                | KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON â¢ command_statements KW_ENDWHILE
   89 return_statement: â¢ KW_RETURN
   90                 | â¢ KW_RETURN expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 113
    KW_CONST       shift, and go to state 2
    KW_IF          shift, and go to state 114
    KW_FOR         shift, and go to state 115
    KW_WHILE       shift, and go to state 116
    KW_BREAK       shift, and go to state 117
    KW_CONTINUE    shift, and go to state 118
    KW_RETURN      shift, and go to state 119

    identifiers             go to state 120
    variable_declarations   go to state 208
    constant_declarations   go to state 209
    identifier_expressions  go to state 123
    assign_expressions      go to state 124
    statements              go to state 210
    command_statements      go to state 213
    if_statement            go to state 126
    for_statement           go to state 127
    array_statement         go to state 128
    integral_array          go to state 129
    other_array             go to state 130
    while_statement         go to state 131
    return_statement        go to state 132
    function_statement      go to state 133


State 205

   11 identifiers: â¢ TK_IDENTIFIER
   12            | â¢ identifiers DEL_COMMA TK_IDENTIFIER
   86 integral_array: identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR â¢ identifiers DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
   87 other_array: identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR â¢ identifiers DEL_COLON types KW_IN identifiers KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types

    TK_IDENTIFIER  shift, and go to state 16

    identifiers  go to state 214


State 206

    5 types: â¢ DEL_LBLOCK DEL_RBLOCK basic_types
    6      | â¢ basic_types
    7 basic_types: â¢ KW_INT
    8            | â¢ KW_BOOLEAN
    9            | â¢ KW_SCALAR
   10            | â¢ KW_STR
   22 function_declarations: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN â¢ types

    KW_INT      shift, and go to state 32
    KW_SCALAR   shift, and go to state 33
    KW_STR      shift, and go to state 34
    KW_BOOLEAN  shift, and go to state 35
    DEL_LBLOCK  shift, and go to state 107

    types        go to state 215
    basic_types  go to state 109


State 207

   24 functions: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN types DEL_COLON body KW_ENDDEF DEL_SMCOLON â¢

    $default  reduce using rule 24 (functions)


State 208

   77 command_statements: variable_declarations â¢

    $default  reduce using rule 77 (command_statements)


State 209

   79 command_statements: constant_declarations â¢

    $default  reduce using rule 79 (command_statements)


State 210

   74 command_statements: statements â¢

    $default  reduce using rule 74 (command_statements)


State 211

   11 identifiers: â¢ TK_IDENTIFIER
   12            | â¢ identifiers DEL_COMMA TK_IDENTIFIER
   19 variable_declarations: â¢ identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK basic_types DEL_SMCOLON
   21 constant_declarations: â¢ KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   59 assign_expressions: â¢ identifier_expressions AP_ASSIGN expressions
   60                   | â¢ identifier_expressions AP_PLUSASSIGN expressions
   61                   | â¢ identifier_expressions AP_MINASSIGN expressions
   62                   | â¢ identifier_expressions AP_MULASSIGN expressions
   63                   | â¢ identifier_expressions AP_DIVASSIGN expressions
   64                   | â¢ identifier_expressions AP_MODASSIGN expressions
   65 statements: â¢ if_statement DEL_SMCOLON
   66           | â¢ for_statement DEL_SMCOLON
   67           | â¢ array_statement DEL_SMCOLON
   68           | â¢ while_statement DEL_SMCOLON
   69           | â¢ KW_BREAK DEL_SMCOLON
   70           | â¢ KW_CONTINUE DEL_SMCOLON
   71           | â¢ assign_expressions DEL_SMCOLON
   72           | â¢ return_statement DEL_SMCOLON
   73           | â¢ function_statement DEL_SMCOLON
   75 command_statements: command_statements â¢ statements
   76                   | command_statements â¢ variable_declarations
   78                   | command_statements â¢ constant_declarations
   80 if_statement: â¢ KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   80             | KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements â¢ KW_ENDIF
   81             | â¢ KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE command_statements KW_ENDIF
   81             | KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements â¢ KW_ELSE command_statements KW_ENDIF
   82 for_statement: â¢ KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   83              | â¢ KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements DEL_SMCOLON KW_ENDFOR
   84 array_statement: â¢ integral_array
   85                | â¢ other_array
   86 integral_array: â¢ identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
   87 other_array: â¢ identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON types KW_IN identifiers KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types
   88 while_statement: â¢ KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE
   89 return_statement: â¢ KW_RETURN
   90                 | â¢ KW_RETURN expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 113
    KW_CONST       shift, and go to state 2
    KW_IF          shift, and go to state 114
    KW_ELSE        shift, and go to state 216
    KW_ENDIF       shift, and go to state 217
    KW_FOR         shift, and go to state 115
    KW_WHILE       shift, and go to state 116
    KW_BREAK       shift, and go to state 117
    KW_CONTINUE    shift, and go to state 118
    KW_RETURN      shift, and go to state 119

    identifiers             go to state 120
    variable_declarations   go to state 218
    constant_declarations   go to state 219
    identifier_expressions  go to state 123
    assign_expressions      go to state 124
    statements              go to state 220
    if_statement            go to state 126
    for_statement           go to state 127
    array_statement         go to state 128
    integral_array          go to state 129
    other_array             go to state 130
    while_statement         go to state 131
    return_statement        go to state 132
    function_statement      go to state 133


State 212

   29 expressions: â¢ identifier_expressions
   30            | â¢ TK_STRING
   31            | â¢ KW_TRUE
   32            | â¢ KW_FALSE
   33            | â¢ function_statement
   34            | â¢ arithmetic_expressions
   35            | â¢ relational_expressions
   36            | â¢ KW_NOT expressions
   37            | â¢ expressions KW_AND expressions
   38            | â¢ expressions KW_OR expressions
   39            | â¢ DEL_LPAR expressions DEL_RPAR
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   43 arithmetic_expressions: â¢ TK_INTEGER
   44                       | â¢ TK_FLOAT
   45                       | â¢ expressions OP_POWER expressions
   46                       | â¢ expressions OP_MULT expressions
   47                       | â¢ expressions OP_DIV expressions
   48                       | â¢ expressions OP_MOD expressions
   49                       | â¢ expressions OP_PLUS expressions
   50                       | â¢ expressions OP_MINUS expressions
   51                       | â¢ OP_PLUS expressions
   52                       | â¢ OP_MINUS expressions
   53 relational_expressions: â¢ expressions RP_LESS expressions
   54                       | â¢ expressions RP_LESSEQUALS expressions
   55                       | â¢ expressions RP_MORE expressions
   56                       | â¢ expressions RP_MOREEQUALS expressions
   57                       | â¢ expressions RP_EQUALS expressions
   58                       | â¢ expressions RP_NOTEQUALS expressions
   82 for_statement: KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON â¢ expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   83              | KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON â¢ expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements DEL_SMCOLON KW_ENDFOR
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    DEL_LPAR       shift, and go to state 47

    expressions             go to state 221
    identifier_expressions  go to state 49
    arithmetic_expressions  go to state 50
    relational_expressions  go to state 51
    function_statement      go to state 52


State 213

   11 identifiers: â¢ TK_IDENTIFIER
   12            | â¢ identifiers DEL_COMMA TK_IDENTIFIER
   19 variable_declarations: â¢ identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK basic_types DEL_SMCOLON
   21 constant_declarations: â¢ KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   59 assign_expressions: â¢ identifier_expressions AP_ASSIGN expressions
   60                   | â¢ identifier_expressions AP_PLUSASSIGN expressions
   61                   | â¢ identifier_expressions AP_MINASSIGN expressions
   62                   | â¢ identifier_expressions AP_MULASSIGN expressions
   63                   | â¢ identifier_expressions AP_DIVASSIGN expressions
   64                   | â¢ identifier_expressions AP_MODASSIGN expressions
   65 statements: â¢ if_statement DEL_SMCOLON
   66           | â¢ for_statement DEL_SMCOLON
   67           | â¢ array_statement DEL_SMCOLON
   68           | â¢ while_statement DEL_SMCOLON
   69           | â¢ KW_BREAK DEL_SMCOLON
   70           | â¢ KW_CONTINUE DEL_SMCOLON
   71           | â¢ assign_expressions DEL_SMCOLON
   72           | â¢ return_statement DEL_SMCOLON
   73           | â¢ function_statement DEL_SMCOLON
   75 command_statements: command_statements â¢ statements
   76                   | command_statements â¢ variable_declarations
   78                   | command_statements â¢ constant_declarations
   80 if_statement: â¢ KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   81             | â¢ KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE command_statements KW_ENDIF
   82 for_statement: â¢ KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   83              | â¢ KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements DEL_SMCOLON KW_ENDFOR
   84 array_statement: â¢ integral_array
   85                | â¢ other_array
   86 integral_array: â¢ identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
   87 other_array: â¢ identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON types KW_IN identifiers KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types
   88 while_statement: â¢ KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE
   88                | KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements â¢ KW_ENDWHILE
   89 return_statement: â¢ KW_RETURN
   90                 | â¢ KW_RETURN expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 113
    KW_CONST       shift, and go to state 2
    KW_IF          shift, and go to state 114
    KW_FOR         shift, and go to state 115
    KW_WHILE       shift, and go to state 116
    KW_ENDWHILE    shift, and go to state 222
    KW_BREAK       shift, and go to state 117
    KW_CONTINUE    shift, and go to state 118
    KW_RETURN      shift, and go to state 119

    identifiers             go to state 120
    variable_declarations   go to state 218
    constant_declarations   go to state 219
    identifier_expressions  go to state 123
    assign_expressions      go to state 124
    statements              go to state 220
    if_statement            go to state 126
    for_statement           go to state 127
    array_statement         go to state 128
    integral_array          go to state 129
    other_array             go to state 130
    while_statement         go to state 131
    return_statement        go to state 132
    function_statement      go to state 133


State 214

   12 identifiers: identifiers â¢ DEL_COMMA TK_IDENTIFIER
   86 integral_array: identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers â¢ DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
   87 other_array: identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers â¢ DEL_COLON types KW_IN identifiers KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types

    DEL_COMMA  shift, and go to state 22
    DEL_COLON  shift, and go to state 223


State 215

   22 function_declarations: KW_DEF TK_IDENTIFIER DEL_LPAR parameter_declarations DEL_RPAR AP_ARROWASSIGN types â¢

    $default  reduce using rule 22 (function_declarations)


State 216

   11 identifiers: â¢ TK_IDENTIFIER
   12            | â¢ identifiers DEL_COMMA TK_IDENTIFIER
   19 variable_declarations: â¢ identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK basic_types DEL_SMCOLON
   21 constant_declarations: â¢ KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   59 assign_expressions: â¢ identifier_expressions AP_ASSIGN expressions
   60                   | â¢ identifier_expressions AP_PLUSASSIGN expressions
   61                   | â¢ identifier_expressions AP_MINASSIGN expressions
   62                   | â¢ identifier_expressions AP_MULASSIGN expressions
   63                   | â¢ identifier_expressions AP_DIVASSIGN expressions
   64                   | â¢ identifier_expressions AP_MODASSIGN expressions
   65 statements: â¢ if_statement DEL_SMCOLON
   66           | â¢ for_statement DEL_SMCOLON
   67           | â¢ array_statement DEL_SMCOLON
   68           | â¢ while_statement DEL_SMCOLON
   69           | â¢ KW_BREAK DEL_SMCOLON
   70           | â¢ KW_CONTINUE DEL_SMCOLON
   71           | â¢ assign_expressions DEL_SMCOLON
   72           | â¢ return_statement DEL_SMCOLON
   73           | â¢ function_statement DEL_SMCOLON
   74 command_statements: â¢ statements
   75                   | â¢ command_statements statements
   76                   | â¢ command_statements variable_declarations
   77                   | â¢ variable_declarations
   78                   | â¢ command_statements constant_declarations
   79                   | â¢ constant_declarations
   80 if_statement: â¢ KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   81             | â¢ KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE command_statements KW_ENDIF
   81             | KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE â¢ command_statements KW_ENDIF
   82 for_statement: â¢ KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   83              | â¢ KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements DEL_SMCOLON KW_ENDFOR
   84 array_statement: â¢ integral_array
   85                | â¢ other_array
   86 integral_array: â¢ identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
   87 other_array: â¢ identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON types KW_IN identifiers KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types
   88 while_statement: â¢ KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE
   89 return_statement: â¢ KW_RETURN
   90                 | â¢ KW_RETURN expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 113
    KW_CONST       shift, and go to state 2
    KW_IF          shift, and go to state 114
    KW_FOR         shift, and go to state 115
    KW_WHILE       shift, and go to state 116
    KW_BREAK       shift, and go to state 117
    KW_CONTINUE    shift, and go to state 118
    KW_RETURN      shift, and go to state 119

    identifiers             go to state 120
    variable_declarations   go to state 208
    constant_declarations   go to state 209
    identifier_expressions  go to state 123
    assign_expressions      go to state 124
    statements              go to state 210
    command_statements      go to state 224
    if_statement            go to state 126
    for_statement           go to state 127
    array_statement         go to state 128
    integral_array          go to state 129
    other_array             go to state 130
    while_statement         go to state 131
    return_statement        go to state 132
    function_statement      go to state 133


State 217

   80 if_statement: KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF â¢

    $default  reduce using rule 80 (if_statement)


State 218

   76 command_statements: command_statements variable_declarations â¢

    $default  reduce using rule 76 (command_statements)


State 219

   78 command_statements: command_statements constant_declarations â¢

    $default  reduce using rule 78 (command_statements)


State 220

   75 command_statements: command_statements statements â¢

    $default  reduce using rule 75 (command_statements)


State 221

   37 expressions: expressions â¢ KW_AND expressions
   38            | expressions â¢ KW_OR expressions
   45 arithmetic_expressions: expressions â¢ OP_POWER expressions
   46                       | expressions â¢ OP_MULT expressions
   47                       | expressions â¢ OP_DIV expressions
   48                       | expressions â¢ OP_MOD expressions
   49                       | expressions â¢ OP_PLUS expressions
   50                       | expressions â¢ OP_MINUS expressions
   53 relational_expressions: expressions â¢ RP_LESS expressions
   54                       | expressions â¢ RP_LESSEQUALS expressions
   55                       | expressions â¢ RP_MORE expressions
   56                       | expressions â¢ RP_MOREEQUALS expressions
   57                       | expressions â¢ RP_EQUALS expressions
   58                       | expressions â¢ RP_NOTEQUALS expressions
   82 for_statement: KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions â¢ DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   83              | KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions â¢ DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements DEL_SMCOLON KW_ENDFOR

    KW_AND         shift, and go to state 66
    KW_OR          shift, and go to state 67
    OP_PLUS        shift, and go to state 68
    OP_MINUS       shift, and go to state 69
    OP_MULT        shift, and go to state 70
    OP_DIV         shift, and go to state 71
    OP_MOD         shift, and go to state 72
    OP_POWER       shift, and go to state 73
    RP_EQUALS      shift, and go to state 74
    RP_NOTEQUALS   shift, and go to state 75
    RP_LESS        shift, and go to state 76
    RP_LESSEQUALS  shift, and go to state 77
    RP_MORE        shift, and go to state 78
    RP_MOREEQUALS  shift, and go to state 79
    DEL_RBLOCK     shift, and go to state 225
    DEL_COLON      shift, and go to state 226


State 222

   88 while_statement: KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE â¢

    $default  reduce using rule 88 (while_statement)


State 223

    5 types: â¢ DEL_LBLOCK DEL_RBLOCK basic_types
    6      | â¢ basic_types
    7 basic_types: â¢ KW_INT
    8            | â¢ KW_BOOLEAN
    9            | â¢ KW_SCALAR
   10            | â¢ KW_STR
   86 integral_array: identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON â¢ TK_INTEGER DEL_RBLOCK DEL_COLON types
   87 other_array: identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON â¢ types KW_IN identifiers KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types

    TK_INTEGER  shift, and go to state 227
    KW_INT      shift, and go to state 32
    KW_SCALAR   shift, and go to state 33
    KW_STR      shift, and go to state 34
    KW_BOOLEAN  shift, and go to state 35
    DEL_LBLOCK  shift, and go to state 107

    types        go to state 228
    basic_types  go to state 109


State 224

   11 identifiers: â¢ TK_IDENTIFIER
   12            | â¢ identifiers DEL_COMMA TK_IDENTIFIER
   19 variable_declarations: â¢ identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK basic_types DEL_SMCOLON
   21 constant_declarations: â¢ KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   59 assign_expressions: â¢ identifier_expressions AP_ASSIGN expressions
   60                   | â¢ identifier_expressions AP_PLUSASSIGN expressions
   61                   | â¢ identifier_expressions AP_MINASSIGN expressions
   62                   | â¢ identifier_expressions AP_MULASSIGN expressions
   63                   | â¢ identifier_expressions AP_DIVASSIGN expressions
   64                   | â¢ identifier_expressions AP_MODASSIGN expressions
   65 statements: â¢ if_statement DEL_SMCOLON
   66           | â¢ for_statement DEL_SMCOLON
   67           | â¢ array_statement DEL_SMCOLON
   68           | â¢ while_statement DEL_SMCOLON
   69           | â¢ KW_BREAK DEL_SMCOLON
   70           | â¢ KW_CONTINUE DEL_SMCOLON
   71           | â¢ assign_expressions DEL_SMCOLON
   72           | â¢ return_statement DEL_SMCOLON
   73           | â¢ function_statement DEL_SMCOLON
   75 command_statements: command_statements â¢ statements
   76                   | command_statements â¢ variable_declarations
   78                   | command_statements â¢ constant_declarations
   80 if_statement: â¢ KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   81             | â¢ KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE command_statements KW_ENDIF
   81             | KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE command_statements â¢ KW_ENDIF
   82 for_statement: â¢ KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   83              | â¢ KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements DEL_SMCOLON KW_ENDFOR
   84 array_statement: â¢ integral_array
   85                | â¢ other_array
   86 integral_array: â¢ identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
   87 other_array: â¢ identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON types KW_IN identifiers KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types
   88 while_statement: â¢ KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE
   89 return_statement: â¢ KW_RETURN
   90                 | â¢ KW_RETURN expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 113
    KW_CONST       shift, and go to state 2
    KW_IF          shift, and go to state 114
    KW_ENDIF       shift, and go to state 229
    KW_FOR         shift, and go to state 115
    KW_WHILE       shift, and go to state 116
    KW_BREAK       shift, and go to state 117
    KW_CONTINUE    shift, and go to state 118
    KW_RETURN      shift, and go to state 119

    identifiers             go to state 120
    variable_declarations   go to state 218
    constant_declarations   go to state 219
    identifier_expressions  go to state 123
    assign_expressions      go to state 124
    statements              go to state 220
    if_statement            go to state 126
    for_statement           go to state 127
    array_statement         go to state 128
    integral_array          go to state 129
    other_array             go to state 130
    while_statement         go to state 131
    return_statement        go to state 132
    function_statement      go to state 133


State 225

   82 for_statement: KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK â¢ DEL_COLON command_statements KW_ENDFOR

    DEL_COLON  shift, and go to state 230


State 226

   29 expressions: â¢ identifier_expressions
   30            | â¢ TK_STRING
   31            | â¢ KW_TRUE
   32            | â¢ KW_FALSE
   33            | â¢ function_statement
   34            | â¢ arithmetic_expressions
   35            | â¢ relational_expressions
   36            | â¢ KW_NOT expressions
   37            | â¢ expressions KW_AND expressions
   38            | â¢ expressions KW_OR expressions
   39            | â¢ DEL_LPAR expressions DEL_RPAR
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   43 arithmetic_expressions: â¢ TK_INTEGER
   44                       | â¢ TK_FLOAT
   45                       | â¢ expressions OP_POWER expressions
   46                       | â¢ expressions OP_MULT expressions
   47                       | â¢ expressions OP_DIV expressions
   48                       | â¢ expressions OP_MOD expressions
   49                       | â¢ expressions OP_PLUS expressions
   50                       | â¢ expressions OP_MINUS expressions
   51                       | â¢ OP_PLUS expressions
   52                       | â¢ OP_MINUS expressions
   53 relational_expressions: â¢ expressions RP_LESS expressions
   54                       | â¢ expressions RP_LESSEQUALS expressions
   55                       | â¢ expressions RP_MORE expressions
   56                       | â¢ expressions RP_MOREEQUALS expressions
   57                       | â¢ expressions RP_EQUALS expressions
   58                       | â¢ expressions RP_NOTEQUALS expressions
   83 for_statement: KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON â¢ expressions DEL_RBLOCK DEL_COLON command_statements DEL_SMCOLON KW_ENDFOR
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 38
    TK_INTEGER     shift, and go to state 39
    TK_FLOAT       shift, and go to state 40
    TK_STRING      shift, and go to state 41
    KW_TRUE        shift, and go to state 42
    KW_FALSE       shift, and go to state 43
    KW_NOT         shift, and go to state 44
    OP_PLUS        shift, and go to state 45
    OP_MINUS       shift, and go to state 46
    DEL_LPAR       shift, and go to state 47

    expressions             go to state 231
    identifier_expressions  go to state 49
    arithmetic_expressions  go to state 50
    relational_expressions  go to state 51
    function_statement      go to state 52


State 227

   86 integral_array: identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON TK_INTEGER â¢ DEL_RBLOCK DEL_COLON types

    DEL_RBLOCK  shift, and go to state 232


State 228

   87 other_array: identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON types â¢ KW_IN identifiers KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types

    KW_IN  shift, and go to state 233


State 229

   81 if_statement: KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE command_statements KW_ENDIF â¢

    $default  reduce using rule 81 (if_statement)


State 230

   11 identifiers: â¢ TK_IDENTIFIER
   12            | â¢ identifiers DEL_COMMA TK_IDENTIFIER
   19 variable_declarations: â¢ identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK basic_types DEL_SMCOLON
   21 constant_declarations: â¢ KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   59 assign_expressions: â¢ identifier_expressions AP_ASSIGN expressions
   60                   | â¢ identifier_expressions AP_PLUSASSIGN expressions
   61                   | â¢ identifier_expressions AP_MINASSIGN expressions
   62                   | â¢ identifier_expressions AP_MULASSIGN expressions
   63                   | â¢ identifier_expressions AP_DIVASSIGN expressions
   64                   | â¢ identifier_expressions AP_MODASSIGN expressions
   65 statements: â¢ if_statement DEL_SMCOLON
   66           | â¢ for_statement DEL_SMCOLON
   67           | â¢ array_statement DEL_SMCOLON
   68           | â¢ while_statement DEL_SMCOLON
   69           | â¢ KW_BREAK DEL_SMCOLON
   70           | â¢ KW_CONTINUE DEL_SMCOLON
   71           | â¢ assign_expressions DEL_SMCOLON
   72           | â¢ return_statement DEL_SMCOLON
   73           | â¢ function_statement DEL_SMCOLON
   74 command_statements: â¢ statements
   75                   | â¢ command_statements statements
   76                   | â¢ command_statements variable_declarations
   77                   | â¢ variable_declarations
   78                   | â¢ command_statements constant_declarations
   79                   | â¢ constant_declarations
   80 if_statement: â¢ KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   81             | â¢ KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE command_statements KW_ENDIF
   82 for_statement: â¢ KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   82              | KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON â¢ command_statements KW_ENDFOR
   83              | â¢ KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements DEL_SMCOLON KW_ENDFOR
   84 array_statement: â¢ integral_array
   85                | â¢ other_array
   86 integral_array: â¢ identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
   87 other_array: â¢ identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON types KW_IN identifiers KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types
   88 while_statement: â¢ KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE
   89 return_statement: â¢ KW_RETURN
   90                 | â¢ KW_RETURN expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 113
    KW_CONST       shift, and go to state 2
    KW_IF          shift, and go to state 114
    KW_FOR         shift, and go to state 115
    KW_WHILE       shift, and go to state 116
    KW_BREAK       shift, and go to state 117
    KW_CONTINUE    shift, and go to state 118
    KW_RETURN      shift, and go to state 119

    identifiers             go to state 120
    variable_declarations   go to state 208
    constant_declarations   go to state 209
    identifier_expressions  go to state 123
    assign_expressions      go to state 124
    statements              go to state 210
    command_statements      go to state 234
    if_statement            go to state 126
    for_statement           go to state 127
    array_statement         go to state 128
    integral_array          go to state 129
    other_array             go to state 130
    while_statement         go to state 131
    return_statement        go to state 132
    function_statement      go to state 133


State 231

   37 expressions: expressions â¢ KW_AND expressions
   38            | expressions â¢ KW_OR expressions
   45 arithmetic_expressions: expressions â¢ OP_POWER expressions
   46                       | expressions â¢ OP_MULT expressions
   47                       | expressions â¢ OP_DIV expressions
   48                       | expressions â¢ OP_MOD expressions
   49                       | expressions â¢ OP_PLUS expressions
   50                       | expressions â¢ OP_MINUS expressions
   53 relational_expressions: expressions â¢ RP_LESS expressions
   54                       | expressions â¢ RP_LESSEQUALS expressions
   55                       | expressions â¢ RP_MORE expressions
   56                       | expressions â¢ RP_MOREEQUALS expressions
   57                       | expressions â¢ RP_EQUALS expressions
   58                       | expressions â¢ RP_NOTEQUALS expressions
   83 for_statement: KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions â¢ DEL_RBLOCK DEL_COLON command_statements DEL_SMCOLON KW_ENDFOR

    KW_AND         shift, and go to state 66
    KW_OR          shift, and go to state 67
    OP_PLUS        shift, and go to state 68
    OP_MINUS       shift, and go to state 69
    OP_MULT        shift, and go to state 70
    OP_DIV         shift, and go to state 71
    OP_MOD         shift, and go to state 72
    OP_POWER       shift, and go to state 73
    RP_EQUALS      shift, and go to state 74
    RP_NOTEQUALS   shift, and go to state 75
    RP_LESS        shift, and go to state 76
    RP_LESSEQUALS  shift, and go to state 77
    RP_MORE        shift, and go to state 78
    RP_MOREEQUALS  shift, and go to state 79
    DEL_RBLOCK     shift, and go to state 235


State 232

   86 integral_array: identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON TK_INTEGER DEL_RBLOCK â¢ DEL_COLON types

    DEL_COLON  shift, and go to state 236


State 233

   11 identifiers: â¢ TK_IDENTIFIER
   12            | â¢ identifiers DEL_COMMA TK_IDENTIFIER
   87 other_array: identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON types KW_IN â¢ identifiers KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types

    TK_IDENTIFIER  shift, and go to state 16

    identifiers  go to state 237


State 234

   11 identifiers: â¢ TK_IDENTIFIER
   12            | â¢ identifiers DEL_COMMA TK_IDENTIFIER
   19 variable_declarations: â¢ identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK basic_types DEL_SMCOLON
   21 constant_declarations: â¢ KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   59 assign_expressions: â¢ identifier_expressions AP_ASSIGN expressions
   60                   | â¢ identifier_expressions AP_PLUSASSIGN expressions
   61                   | â¢ identifier_expressions AP_MINASSIGN expressions
   62                   | â¢ identifier_expressions AP_MULASSIGN expressions
   63                   | â¢ identifier_expressions AP_DIVASSIGN expressions
   64                   | â¢ identifier_expressions AP_MODASSIGN expressions
   65 statements: â¢ if_statement DEL_SMCOLON
   66           | â¢ for_statement DEL_SMCOLON
   67           | â¢ array_statement DEL_SMCOLON
   68           | â¢ while_statement DEL_SMCOLON
   69           | â¢ KW_BREAK DEL_SMCOLON
   70           | â¢ KW_CONTINUE DEL_SMCOLON
   71           | â¢ assign_expressions DEL_SMCOLON
   72           | â¢ return_statement DEL_SMCOLON
   73           | â¢ function_statement DEL_SMCOLON
   75 command_statements: command_statements â¢ statements
   76                   | command_statements â¢ variable_declarations
   78                   | command_statements â¢ constant_declarations
   80 if_statement: â¢ KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   81             | â¢ KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE command_statements KW_ENDIF
   82 for_statement: â¢ KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   82              | KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements â¢ KW_ENDFOR
   83              | â¢ KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements DEL_SMCOLON KW_ENDFOR
   84 array_statement: â¢ integral_array
   85                | â¢ other_array
   86 integral_array: â¢ identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
   87 other_array: â¢ identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON types KW_IN identifiers KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types
   88 while_statement: â¢ KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE
   89 return_statement: â¢ KW_RETURN
   90                 | â¢ KW_RETURN expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 113
    KW_CONST       shift, and go to state 2
    KW_IF          shift, and go to state 114
    KW_FOR         shift, and go to state 115
    KW_ENDFOR      shift, and go to state 238
    KW_WHILE       shift, and go to state 116
    KW_BREAK       shift, and go to state 117
    KW_CONTINUE    shift, and go to state 118
    KW_RETURN      shift, and go to state 119

    identifiers             go to state 120
    variable_declarations   go to state 218
    constant_declarations   go to state 219
    identifier_expressions  go to state 123
    assign_expressions      go to state 124
    statements              go to state 220
    if_statement            go to state 126
    for_statement           go to state 127
    array_statement         go to state 128
    integral_array          go to state 129
    other_array             go to state 130
    while_statement         go to state 131
    return_statement        go to state 132
    function_statement      go to state 133


State 235

   83 for_statement: KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK â¢ DEL_COLON command_statements DEL_SMCOLON KW_ENDFOR

    DEL_COLON  shift, and go to state 239


State 236

    5 types: â¢ DEL_LBLOCK DEL_RBLOCK basic_types
    6      | â¢ basic_types
    7 basic_types: â¢ KW_INT
    8            | â¢ KW_BOOLEAN
    9            | â¢ KW_SCALAR
   10            | â¢ KW_STR
   86 integral_array: identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON â¢ types

    KW_INT      shift, and go to state 32
    KW_SCALAR   shift, and go to state 33
    KW_STR      shift, and go to state 34
    KW_BOOLEAN  shift, and go to state 35
    DEL_LBLOCK  shift, and go to state 107

    types        go to state 240
    basic_types  go to state 109


State 237

   12 identifiers: identifiers â¢ DEL_COMMA TK_IDENTIFIER
   87 other_array: identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON types KW_IN identifiers â¢ KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types

    KW_OF      shift, and go to state 241
    DEL_COMMA  shift, and go to state 22


State 238

   82 for_statement: KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR â¢

    $default  reduce using rule 82 (for_statement)


State 239

   11 identifiers: â¢ TK_IDENTIFIER
   12            | â¢ identifiers DEL_COMMA TK_IDENTIFIER
   19 variable_declarations: â¢ identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK basic_types DEL_SMCOLON
   21 constant_declarations: â¢ KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   59 assign_expressions: â¢ identifier_expressions AP_ASSIGN expressions
   60                   | â¢ identifier_expressions AP_PLUSASSIGN expressions
   61                   | â¢ identifier_expressions AP_MINASSIGN expressions
   62                   | â¢ identifier_expressions AP_MULASSIGN expressions
   63                   | â¢ identifier_expressions AP_DIVASSIGN expressions
   64                   | â¢ identifier_expressions AP_MODASSIGN expressions
   65 statements: â¢ if_statement DEL_SMCOLON
   66           | â¢ for_statement DEL_SMCOLON
   67           | â¢ array_statement DEL_SMCOLON
   68           | â¢ while_statement DEL_SMCOLON
   69           | â¢ KW_BREAK DEL_SMCOLON
   70           | â¢ KW_CONTINUE DEL_SMCOLON
   71           | â¢ assign_expressions DEL_SMCOLON
   72           | â¢ return_statement DEL_SMCOLON
   73           | â¢ function_statement DEL_SMCOLON
   74 command_statements: â¢ statements
   75                   | â¢ command_statements statements
   76                   | â¢ command_statements variable_declarations
   77                   | â¢ variable_declarations
   78                   | â¢ command_statements constant_declarations
   79                   | â¢ constant_declarations
   80 if_statement: â¢ KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   81             | â¢ KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE command_statements KW_ENDIF
   82 for_statement: â¢ KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   83              | â¢ KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements DEL_SMCOLON KW_ENDFOR
   83              | KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON â¢ command_statements DEL_SMCOLON KW_ENDFOR
   84 array_statement: â¢ integral_array
   85                | â¢ other_array
   86 integral_array: â¢ identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
   87 other_array: â¢ identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON types KW_IN identifiers KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types
   88 while_statement: â¢ KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE
   89 return_statement: â¢ KW_RETURN
   90                 | â¢ KW_RETURN expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 113
    KW_CONST       shift, and go to state 2
    KW_IF          shift, and go to state 114
    KW_FOR         shift, and go to state 115
    KW_WHILE       shift, and go to state 116
    KW_BREAK       shift, and go to state 117
    KW_CONTINUE    shift, and go to state 118
    KW_RETURN      shift, and go to state 119

    identifiers             go to state 120
    variable_declarations   go to state 208
    constant_declarations   go to state 209
    identifier_expressions  go to state 123
    assign_expressions      go to state 124
    statements              go to state 210
    command_statements      go to state 242
    if_statement            go to state 126
    for_statement           go to state 127
    array_statement         go to state 128
    integral_array          go to state 129
    other_array             go to state 130
    while_statement         go to state 131
    return_statement        go to state 132
    function_statement      go to state 133


State 240

   86 integral_array: identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types â¢

    $default  reduce using rule 86 (integral_array)


State 241

   87 other_array: identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON types KW_IN identifiers KW_OF â¢ TK_INTEGER DEL_RBLOCK DEL_COLON types

    TK_INTEGER  shift, and go to state 243


State 242

   11 identifiers: â¢ TK_IDENTIFIER
   12            | â¢ identifiers DEL_COMMA TK_IDENTIFIER
   19 variable_declarations: â¢ identifiers DEL_COLON basic_types DEL_SMCOLON
   20                      | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK basic_types DEL_SMCOLON
   21 constant_declarations: â¢ KW_CONST identifiers AP_ASSIGN expressions DEL_COLON types DEL_SMCOLON
   40 identifier_expressions: â¢ TK_IDENTIFIER
   41                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_INTEGER DEL_RBLOCK
   42                       | â¢ TK_IDENTIFIER DEL_LBLOCK TK_IDENTIFIER DEL_RBLOCK
   59 assign_expressions: â¢ identifier_expressions AP_ASSIGN expressions
   60                   | â¢ identifier_expressions AP_PLUSASSIGN expressions
   61                   | â¢ identifier_expressions AP_MINASSIGN expressions
   62                   | â¢ identifier_expressions AP_MULASSIGN expressions
   63                   | â¢ identifier_expressions AP_DIVASSIGN expressions
   64                   | â¢ identifier_expressions AP_MODASSIGN expressions
   65 statements: â¢ if_statement DEL_SMCOLON
   66           | â¢ for_statement DEL_SMCOLON
   67           | â¢ array_statement DEL_SMCOLON
   68           | â¢ while_statement DEL_SMCOLON
   69           | â¢ KW_BREAK DEL_SMCOLON
   70           | â¢ KW_CONTINUE DEL_SMCOLON
   71           | â¢ assign_expressions DEL_SMCOLON
   72           | â¢ return_statement DEL_SMCOLON
   73           | â¢ function_statement DEL_SMCOLON
   75 command_statements: command_statements â¢ statements
   76                   | command_statements â¢ variable_declarations
   78                   | command_statements â¢ constant_declarations
   80 if_statement: â¢ KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDIF
   81             | â¢ KW_IF DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ELSE command_statements KW_ENDIF
   82 for_statement: â¢ KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements KW_ENDFOR
   83              | â¢ KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements DEL_SMCOLON KW_ENDFOR
   83              | KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements â¢ DEL_SMCOLON KW_ENDFOR
   84 array_statement: â¢ integral_array
   85                | â¢ other_array
   86 integral_array: â¢ identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON TK_INTEGER DEL_RBLOCK DEL_COLON types
   87 other_array: â¢ identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON types KW_IN identifiers KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types
   88 while_statement: â¢ KW_WHILE DEL_LPAR expressions DEL_RPAR DEL_COLON command_statements KW_ENDWHILE
   89 return_statement: â¢ KW_RETURN
   90                 | â¢ KW_RETURN expressions
   91 function_statement: â¢ TK_IDENTIFIER DEL_LPAR function_arg DEL_RPAR

    TK_IDENTIFIER  shift, and go to state 113
    KW_CONST       shift, and go to state 2
    KW_IF          shift, and go to state 114
    KW_FOR         shift, and go to state 115
    KW_WHILE       shift, and go to state 116
    KW_BREAK       shift, and go to state 117
    KW_CONTINUE    shift, and go to state 118
    KW_RETURN      shift, and go to state 119
    DEL_SMCOLON    shift, and go to state 244

    identifiers             go to state 120
    variable_declarations   go to state 218
    constant_declarations   go to state 219
    identifier_expressions  go to state 123
    assign_expressions      go to state 124
    statements              go to state 220
    if_statement            go to state 126
    for_statement           go to state 127
    array_statement         go to state 128
    integral_array          go to state 129
    other_array             go to state 130
    while_statement         go to state 131
    return_statement        go to state 132
    function_statement      go to state 133


State 243

   87 other_array: identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON types KW_IN identifiers KW_OF TK_INTEGER â¢ DEL_RBLOCK DEL_COLON types

    DEL_RBLOCK  shift, and go to state 245


State 244

   83 for_statement: KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements DEL_SMCOLON â¢ KW_ENDFOR

    KW_ENDFOR  shift, and go to state 246


State 245

   87 other_array: identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON types KW_IN identifiers KW_OF TK_INTEGER DEL_RBLOCK â¢ DEL_COLON types

    DEL_COLON  shift, and go to state 247


State 246

   83 for_statement: KW_FOR identifiers KW_IN DEL_LBLOCK expressions DEL_COLON expressions DEL_COLON expressions DEL_RBLOCK DEL_COLON command_statements DEL_SMCOLON KW_ENDFOR â¢

    $default  reduce using rule 83 (for_statement)


State 247

    5 types: â¢ DEL_LBLOCK DEL_RBLOCK basic_types
    6      | â¢ basic_types
    7 basic_types: â¢ KW_INT
    8            | â¢ KW_BOOLEAN
    9            | â¢ KW_SCALAR
   10            | â¢ KW_STR
   87 other_array: identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON types KW_IN identifiers KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON â¢ types

    KW_INT      shift, and go to state 32
    KW_SCALAR   shift, and go to state 33
    KW_STR      shift, and go to state 34
    KW_BOOLEAN  shift, and go to state 35
    DEL_LBLOCK  shift, and go to state 107

    types        go to state 248
    basic_types  go to state 109


State 248

   87 other_array: identifiers AP_COLONASSIGN DEL_LBLOCK expressions KW_FOR identifiers DEL_COLON types KW_IN identifiers KW_OF TK_INTEGER DEL_RBLOCK DEL_COLON types â¢

    $default  reduce using rule 87 (other_array)
